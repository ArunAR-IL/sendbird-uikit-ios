// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef SENDBIRDUIKIT_SWIFT_H
#define SENDBIRDUIKIT_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import Photos;
@import SendBirdSDK;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="SendbirdUIKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

/// This is an enumeration for channel type.
/// since:
/// 3.0.0
typedef SWIFT_ENUM(NSInteger, ChannelCreationType, open) {
  ChannelCreationTypeOpen = 0,
  ChannelCreationTypeGroup = 1,
  ChannelCreationTypeSupergroup = 2,
  ChannelCreationTypeBroadcast = 3,
};

/// This is an enumeration used to select the channel editing type.
typedef SWIFT_ENUM(NSInteger, ChannelEditType, open) {
  ChannelEditTypeName = 0,
  ChannelEditTypeImage = 1,
};

/// This is an enumeration used in <code>InviteUserViewController</code> to load user list by type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelInviteListType, open) {
  ChannelInviteListTypeNone = 0,
  ChannelInviteListTypeUsers = 1,
  ChannelInviteListTypeOperators = 2,
};

/// This is an enumeration used in <code>MemberListViewController</code> to load member list by type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelMemberListType, open) {
  ChannelMemberListTypeNone = 0,
  ChannelMemberListTypeChannelMembers = 1,
  ChannelMemberListTypeOperators = 2,
  ChannelMemberListTypeMutedMembers = 3,
  ChannelMemberListTypeBannedMembers = 4,
  ChannelMemberListTypeParticipants = 5,
};

/// This is an enumeration used to handling action and display by type in <code>ChannelSettingsViewController</code> and <code>ChannelSettingCell</code>.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelSettingItemType, open) {
  ChannelSettingItemTypeModerations = 0,
  ChannelSettingItemTypeNotifications = 1,
  ChannelSettingItemTypeMembers = 2,
  ChannelSettingItemTypeSearch = 3,
  ChannelSettingItemTypeLeave = 4,
};

/// This is an enumeration for channel type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ChannelType, open) {
  ChannelTypeOpen = 0,
  ChannelTypeGroup = 1,
  ChannelTypeSupergroup = 2,
  ChannelTypeBroadcast = 3,
};

/// This is an enumeration used to display <code>EmptyView</code> by type.
typedef SWIFT_ENUM(NSInteger, EmptyViewType, open) {
  EmptyViewTypeNone = 0,
  EmptyViewTypeNoChannels = 1,
  EmptyViewTypeNoMessages = 2,
  EmptyViewTypeNoMembers = 3,
  EmptyViewTypeNoMutedMembers = 4,
  EmptyViewTypeNoBannedMembers = 5,
  EmptyViewTypeNoSearchResults = 6,
  EmptyViewTypeError = 7,
};

@class UIBarButtonItem;
@class NSCoder;
@class UISearchBar;

/// A module component that represent the header of <code>SBUMessageSearchModule</code>.
/// <ul>
///   <li>
///     This class consists of titleView, leftBarButton, and rightBarButton.
///   </li>
/// </ul>
SWIFT_CLASS("_TtCC13SendbirdUIKit22SBUMessageSearchModule6Header")
@interface Header : UIView
/// A view that represents a title in navigation bar.
/// The default value for this object is set with <code>UISearchBar</code>.
/// note:
/// When the value is updated, <code>messageSearchModule(_:didUpdateTitleView:)</code> delegate function is called.
@property (nonatomic, strong) UIView * _Nullable titleView;
/// A view that represents a left <code>UIBarButtonItem</code> in navigation bar.
/// The default value for this object is not set. If you want to set this object, you need to override <code>setupViews</code> function and implement.
/// note:
/// When the value is updated, <code>messageSearchModule(_:didUpdateLeftItem:)</code> delegate function is called
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton;
/// A view that represents a right <code>UIBarButtonItem</code> in navigation bar.
/// The default value for this object is not set. If you want to set this object, you need to override <code>setupViews</code> function and implement.
/// note:
/// When the value is updated, <code>messageSearchModule(_:didUpdateRightItem:)</code> delegate function is called.
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMessageSearchModule.Header()'");
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMessageSearchModule.Header()'");
/// Set values of the views in the header component when it needs.
- (void)setupViews;
/// Sets layouts of the views in the header component.
- (void)setupLayouts;
/// Updates style of the searchBar in the header component with the <code>searchBar</code>.
/// \param searchBar The object that is used as the searchBar of the header component.
///
- (void)updateSearchBarStyleWith:(UISearchBar * _Nonnull)searchBar;
/// Chages enable status of the cancel button.
- (void)enableCancelButton;
/// Registers keyboard notification when the keyboard did hide.
- (void)registerKeyboardNotifications;
/// Unregisters keyboard notification.
- (void)unregisterKeyboardNotifications;
@end


@interface Header (SWIFT_EXTENSION(SendbirdUIKit)) <UISearchBarDelegate>
- (void)searchBarTextDidEndEditing:(UISearchBar * _Nonnull)searchBar;
- (void)searchBarCancelButtonClicked:(UISearchBar * _Nonnull)searchBar;
- (void)searchBarSearchButtonClicked:(UISearchBar * _Nonnull)searchBar;
@end

@class UITableView;
@class UITableViewCell;
@class SBUUser;
@class NSNumber;
@class UINib;
@class NSIndexPath;

/// A module component that represent the list of <code>SBUBaseSelectUserModule</code>.
SWIFT_CLASS_NAMED("List")
@interface SBUBaseChannelSettingsModuleList : UIView
/// The table view to show user list in the channel.
@property (nonatomic, strong) UITableView * _Nonnull tableView;
/// A view that shows when there is no message in the channel.
@property (nonatomic, strong) UIView * _Nullable emptyView;
/// The user cell for <code>UITableViewCell</code> object. Use <code>register(userCell:nib:)</code> to update.
@property (nonatomic, strong) UITableViewCell * _Nullable userCell;
/// The list of all users shown
@property (nonatomic, readonly, copy) NSArray<SBUUser *> * _Nullable userList;
/// The list of the selected users
@property (nonatomic, readonly, copy) NSSet<SBUUser *> * _Nullable selectedUserList;
/// Set values of the views in the list component when it needs.
- (void)setupViews;
/// Sets layouts of the views in the list component.
- (void)setupLayouts;
/// Checks user is selected status.
/// \param user <code>SBUUser</code> object
///
///
/// returns:
/// <code>true</code>: selected
- (BOOL)isSelectedUser:(SBUUser * _Nonnull)user SWIFT_WARN_UNUSED_RESULT;
/// Registers a custom cell as a channel cell based on <code>UITableViewCell</code>.
/// important:
/// To register custom user cell, please use this function before calling <code>configure(delegate:dataSource:theme:)</code>
/// \code
/// listComponent.register(userCell: MyUserCell)
/// listComponent.configure(delegate: self, dataSource: self, theme: theme)
///
/// \endcode\param userCell Customized user cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithUserCell:(UITableViewCell * _Nonnull)userCell nib:(UINib * _Nullable)nib;
/// Configures cell for a particular row.
/// \param cell <code>UITableViewCell</code> object
///
/// \param indexPath An index path representing the <code>userCell</code>
///
- (void)configureCell:(UITableViewCell * _Nullable)cell indexPath:(NSIndexPath * _Nonnull)indexPath;
/// Reloads table view. This method corresponds to <code>UITableView reloadData()</code>.
- (void)reloadTableView;
/// This function updates emptyView.
/// \param type <code>EmptyViewType</code>
///
- (void)updateEmptyViewWithType:(enum EmptyViewType)type;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// A module component that represent the list of <code>SBUPromoteMemberModule</code>.
SWIFT_CLASS_NAMED("List")
@interface SBUPromoteMemberModuleList : SBUBaseChannelSettingsModuleList
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUPromoteMemberModule.List()'");
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUPromoteMemberModule.List()'");
- (void)configureCell:(UITableViewCell * _Nullable)cell indexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface SBUPromoteMemberModuleList (SWIFT_EXTENSION(SendbirdUIKit))
- (void)didSelectRetry;
@end


/// A module component that represent the list of <code>SBUCreateChannelModule</code>.
SWIFT_CLASS_NAMED("List")
@interface SBUCreateChannelModuleList : SBUBaseChannelSettingsModuleList
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUCreateChannelModule.List()'");
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUCreateChannelModule.List()'");
/// Configures component with parameters.
/// \param delegate <code>SBUCreateChannelModuleListDelegate</code> type listener
///
/// \param dataSource The data source that is type of <code>SBUCreateChannelModuleListDataSource</code>
///
/// \param theme <code>SBUUserListTheme</code> object
///
- (void)configureCell:(UITableViewCell * _Nullable)cell indexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface SBUCreateChannelModuleList (SWIFT_EXTENSION(SendbirdUIKit))
/// Called when the retry button on the empty view was tapped.
- (void)didSelectRetry;
@end


/// A module component that represent the list of <code>SBUInviteUserModule</code>.
SWIFT_CLASS_NAMED("List")
@interface SBUInviteUserModuleList : SBUBaseChannelSettingsModuleList
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUInviteUserModule.List()'");
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUInviteUserModule.List()'");
- (void)configureCell:(UITableViewCell * _Nullable)cell indexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface SBUInviteUserModuleList (SWIFT_EXTENSION(SendbirdUIKit))
- (void)didSelectRetry;
@end


@interface SBUBaseChannelSettingsModuleList (SWIFT_EXTENSION(SendbirdUIKit))
- (void)didSelectRetry;
@end

@class SBDBaseChannel;
@class SBDBaseMessage;
@class UIScrollView;
@class SBDFileMessage;

/// A module component that represent the list of <code>SBUBaseChannelModule</code>.
SWIFT_CLASS_NAMED("List")
@interface SBUBaseChannelModuleList : UIView <UITableViewDataSource, UITableViewDelegate>
/// The table view to show messages in the channel
@property (nonatomic, strong) UITableView * _Nonnull tableView;
/// A view that shows when there is no message in the channel.
@property (nonatomic, strong) UIView * _Nullable emptyView;
/// A view that shows the state of the channel such as frozen state.
@property (nonatomic, strong) UIView * _Nullable channelStateBanner;
/// A view that indicates a new received message.
/// If you use a view that inherits <code>SBUNewMessageInfo</code>, you can change the button and their action.
/// note:
/// You can use the customized view and a view that inherits <code>SBUNewMessageInfo</code>.
@property (nonatomic, strong) UIView * _Nullable newMessageInfoView;
/// A view that scrolls table view to the bottom.
@property (nonatomic, strong) UIView * _Nullable scrollBottomView;
/// A view that shows profile of the user.
/// If you do not want to use the user profile feature, please set this value to nil.
/// note:
/// To use the custom user profile view, set this to the custom view created using <code>SBUUserProfileViewProtocol</code>.
@property (nonatomic, strong) UIView * _Nullable userProfileView;
/// The current channel object from <code>baseChannelModule(_:channelForTableView:)</code> data source method.
@property (nonatomic, readonly, strong) SBDBaseChannel * _Nullable baseChannel;
/// The array of sent messages in the channel. The value is returned by <code>baseChannelModule(_:sentMessagesInTableView:)</code> data source method.
@property (nonatomic, readonly, copy) NSArray<SBDBaseMessage *> * _Nonnull sentMessages;
/// The array of all messages includes the sent, the failed and the pending. The value is returned by <code>baseChannelModule(_:fullMessagesInTableView:)</code> data source method.
@property (nonatomic, readonly, copy) NSArray<SBDBaseMessage *> * _Nonnull fullMessageList;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUBaseChannelModule.List()'");
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUBaseChannelModule.List()'");
/// Set values of the views in the list component when it needs.
- (void)setupViews;
/// Sets layouts of the views in the list component.
- (void)setupLayouts;
/// Updates hidden state of the <code>scrollBottomView</code>.
- (void)setScrollBottomViewWithHidden:(BOOL)hidden;
/// Reloads table view. This method corresponds to <code>UITableView reloadData()</code>.
- (void)reloadTableView;
/// Update the <code>emptyView</code> according its type.
/// \param type The value of <code>EmptyViewType</code>.
///
- (void)updateEmptyViewWithType:(enum EmptyViewType)type;
/// Sets up the cell’s tap gesture for handling the message.
/// \param cell Message cell object
///
/// \param message Message object
///
/// \param indexPath indexpath of cell
///
- (void)setTapGesture:(UITableViewCell * _Nonnull)cell message:(SBDBaseMessage * _Nonnull)message indexPath:(NSIndexPath * _Nonnull)indexPath;
/// This function sets the cell’s long tap gesture handling.
/// \param cell Message cell object
///
/// \param message Message object
///
/// \param indexPath indexpath of cell
///
- (void)setLongTapGesture:(UITableViewCell * _Nonnull)cell message:(SBDBaseMessage * _Nonnull)message indexPath:(NSIndexPath * _Nonnull)indexPath;
/// This function sets the user profile tap gesture handling.
/// If you do not want to use the user profile function, override this function and leave it empty.
/// \param user <code>SBUUser</code> object used for user profile configuration
///
- (void)setUserProfileTapGesture:(SBUUser * _Nonnull)user;
/// Moves scroll to bottom.
- (void)onTapScrollToBottom;
/// Called when the <code>scrollView</code> has been scrolled.
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
/// Sets images in file message cell.
/// \param cell File message cell
///
/// \param fileMessage File message object
///
- (void)setFileMessageCellImage:(UITableViewCell * _Nonnull)cell fileMessage:(SBDFileMessage * _Nonnull)fileMessage;
@end


@interface SBUBaseChannelModuleList (SWIFT_EXTENSION(SendbirdUIKit))
/// Reload data from the channel. This function invokes <code>SBUBaseChannelModuleListDelegate baseChannelModuleDidSelectRetry(_:)</code>
- (void)didSelectRetry;
@end

@class SBUMessageSearchResultCell;

/// A module component that represent the list of <code>SBUMessageSearchModule</code>.
SWIFT_CLASS_NAMED("List")
@interface SBUMessageSearchModuleList : UIView
/// The table view to show the list of searched messages.
@property (nonatomic, strong) UITableView * _Nonnull tableView;
/// A view that shows when there is no searched messages.
@property (nonatomic, strong) UIView * _Nullable emptyView;
/// The search result cell for <code>SBUMessageSearchResultCell</code> object. Use <code>register(resultCell:nib:)</code> to update.
@property (nonatomic, strong) SBUMessageSearchResultCell * _Nullable resultCell;
/// The search result list object from <code>messageSearchModule(_:searchResultsInTableView:)</code> data source method.
@property (nonatomic, readonly, copy) NSArray<SBDBaseMessage *> * _Nonnull resultList;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMessageSearchModule.List()'");
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMessageSearchModule.List()'");
/// Set values of the views in the list component when it needs.
- (void)setupViews;
/// Sets layouts of the views in the list component.
- (void)setupLayouts;
/// Registers a custom cell as a search result cell based on <code>SBUMessageSearchResultCell</code>.
/// important:
/// To register custom search result cell, please use this function before calling <code>configure(delegate:dataSource:theme:)</code>
/// \code
/// listComponent.register(resultCell: MyResultCell)
/// listComponent.configure(delegate: self, dataSource: self, theme: theme)
///
/// \endcode\param channelCell Customized search result cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithResultCell:(SBUMessageSearchResultCell * _Nonnull)resultCell nib:(UINib * _Nullable)nib;
/// Configures cell for a particular row.
/// \param cell <code>UITableViewCell</code> object
///
/// \param indexPath An index path representing the <code>searchResultCell</code>
///
- (void)configureCell:(UITableViewCell * _Nullable)cell indexPath:(NSIndexPath * _Nonnull)indexPath;
/// Reloads table view. This method corresponds to <code>UITableView reloadData()</code>.
- (void)reloadTableView;
- (void)updateEmptyViewWithType:(enum EmptyViewType)type;
/// Retrives the <code>SBDBaseMessage</code> object from the given <code>IndexPath</code> of the tableView.
/// \param indexPath <code>IndexPath</code> of which you want to retrieve the <code>SBDMessage</code> object.
///
///
/// returns:
/// <code>SBDBaseMessage</code> object of the corresponding <code>IndexPath</code>, or <code>nil</code> if the message can’t be found.
- (SBDBaseMessage * _Nullable)messageAt:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface SBUMessageSearchModuleList (SWIFT_EXTENSION(SendbirdUIKit))
- (void)didSelectRetry;
@end


/// A module component that represent the list of <code>SBUMemberListModule</code>.
SWIFT_CLASS_NAMED("List")
@interface SBUMemberListModuleList : UIView
/// The table view that shows the list of the members.
@property (nonatomic, strong) UITableView * _Nonnull tableView;
/// A view that displays when the table view is empty.
@property (nonatomic, strong) UIView * _Nullable emptyView;
/// The member cell for <code>UITableViewCell</code> object. Use <code>register(memberCell:nib:)</code> to update.
@property (nonatomic, strong) UITableViewCell * _Nullable memberCell;
@property (nonatomic, readonly, strong) SBDBaseChannel * _Nullable channel;
@property (nonatomic, readonly, copy) NSArray<SBUUser *> * _Nonnull memberList;
@property (nonatomic) enum ChannelMemberListType memberListType;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMemberListModule.List()'");
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMemberListModule.List()'");
- (void)setupViews;
- (void)setupLayouts;
/// Reloads table view. This method corresponds to <code>UITableView reloadData()</code>.
- (void)reloadTableView;
/// Registers a custom cell as a member cell based on <code>UITableViewCell</code>.
/// important:
/// To register custom member cell, please use this function before calling <code>configure(delegate:dataSource:memberListType:theme:componentTheme:)</code>
/// \code
/// listComponent.register(memberCell: MyMemberCell)
/// listComponent.configure(delegate: self, dataSource: self, memberListType: .type, theme: theme, componentTheme: componentTheme)
///
/// \endcode\param channelCell Customized member cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithMemberCell:(UITableViewCell * _Nonnull)memberCell nib:(UINib * _Nullable)nib;
/// Configures cell for a particular row.
/// \param cell <code>UITableViewCell</code> object
///
/// \param indexPath An index path representing the <code>cell</code>
///
- (void)configureCell:(UITableViewCell * _Nullable)cell indexPath:(NSIndexPath * _Nonnull)indexPath;
/// This function updates emptyView.
/// \param type <code>EmptyViewType</code>
///
- (void)updateEmptyViewWithType:(enum EmptyViewType)type;
/// Sets up the cell’s more menu button action.
/// important:
/// Only for the group channel
/// \param member <code>SBUUser</code> obejct
///
- (void)setMoreMenuTapAction:(SBUUser * _Nonnull)member;
/// Sets up the user profile tap action.
/// If you do not want to use the user profile function, override this function and leave it empty.
/// \param user <code>SBUUser</code> object used for user profile configuration
///
- (void)setUserProfileTapAction:(SBUUser * _Nonnull)user;
@end


@interface SBUMemberListModuleList (SWIFT_EXTENSION(SendbirdUIKit))
- (void)didSelectRetry;
@end

@class SBUQuotedBaseMessageView;

SWIFT_PROTOCOL("_TtP13SendbirdUIKit28SBUQuotedMessageViewDelegate_")
@protocol SBUQuotedMessageViewDelegate
/// Called when <code>SBUQuotedBaseMessageView</code> was tapped.
/// \param quotedMessageView The tapped quoted message view
///
- (void)didTapQuotedMessageView:(SBUQuotedBaseMessageView * _Nonnull)quotedMessageView;
@end

@class SBUBaseMessageCell;
@class SBDGroupChannel;
enum MessagePosition : NSInteger;
@class NSString;
enum MessageGroupPosition : NSInteger;

/// A module component that represent the list of <code>SBUGroupChannelModule</code>.
SWIFT_CLASS_NAMED("List")
@interface SBUGroupChannelModuleList : SBUBaseChannelModuleList
/// The message cell for <code>SBDAdminMessage</code> object. Use <code>register(adminMessageCell:nib:)</code> to update.
@property (nonatomic, readonly, strong) SBUBaseMessageCell * _Nullable adminMessageCell;
/// The message cell for <code>SBDUserMessage</code> object. Use <code>register(userMessageCell:nib:)</code> to update.
@property (nonatomic, readonly, strong) SBUBaseMessageCell * _Nullable userMessageCell;
/// The message cell for <code>SBDFileMessage</code> object. Use <code>register(fileMessageCell:nib:)</code> to update.
@property (nonatomic, readonly, strong) SBUBaseMessageCell * _Nullable fileMessageCell;
/// The message cell for some unknown message which is not a type of <code>SBDAdminMessage</code> | <code>SBDUserMessage</code> | <code> SBDFileMessage</code>. Use <code>register(unknownMessageCell:nib:)</code> to update.
@property (nonatomic, readonly, strong) SBUBaseMessageCell * _Nullable unknownMessageCell;
/// The custom message cell for some <code>SBDBaseMessage</code>. Use <code>register(customMessageCell:nib:)</code> to update.
@property (nonatomic, readonly, strong) SBUBaseMessageCell * _Nullable customMessageCell;
/// The current <em>group</em> channel object casted from <code>baseChannel</code>
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
- (void)setupViews;
- (void)setupLayouts;
- (void)setScrollBottomViewWithHidden:(BOOL)hidden;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
/// Calculates the point at which to draw the menu.
/// \param indexPath The index path of the selected message cell
///
/// \param position Message position
///
///
/// returns:
/// <code>CGPoint</code> value
- (CGPoint)calculatorMenuPointWithIndexPath:(NSIndexPath * _Nonnull)indexPath position:(enum MessagePosition)position SWIFT_WARN_UNUSED_RESULT;
/// Sets gestures in message cell.
/// \param cell The message cell
///
/// \param message message object
///
/// \param indexPath Cell’s indexPath
///
- (void)setMessageCellGestures:(SBUBaseMessageCell * _Nonnull)cell message:(SBDBaseMessage * _Nonnull)message indexPath:(NSIndexPath * _Nonnull)indexPath;
/// Registers a custom cell as a admin message cell based on <code>SBUBaseMessageCell</code>.
/// important:
/// To register custom message cell, please use this function before calling <code>configure(delegate:dataSource:theme:)</code>
/// \code
/// listComponent.register(adminMessageCell: MyAdminMessageCell)
/// listComponent.configure(delegate: self, dataSource: self, theme: theme)
///
/// \endcode\param adminMessageCell Customized admin message cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithAdminMessageCell:(SBUBaseMessageCell * _Nonnull)adminMessageCell nib:(UINib * _Nullable)nib;
/// Registers a custom cell as a user message cell based on <code>SBUBaseMessageCell</code>.
/// important:
/// To register custom message cell, please use this function before calling <code>configure(delegate:dataSource:theme:)</code>
/// \code
/// listComponent.register(userMessageCell: MyUserMessageCell)
/// listComponent.configure(delegate: self, dataSource: self, theme: theme)
///
/// \endcode\param userMessageCell Customized user message cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithUserMessageCell:(SBUBaseMessageCell * _Nonnull)userMessageCell nib:(UINib * _Nullable)nib;
/// Registers a custom cell as a file message cell based on <code>SBUBaseMessageCell</code>.
/// important:
/// To register custom message cell, please use this function before calling <code>configure(delegate:dataSource:theme:)</code>
/// \code
/// listComponent.register(fileMessageCell: MyFileMessageCell)
/// listComponent.configure(delegate: self, dataSource: self, theme: theme)
///
/// \endcode\param fileMessageCell Customized file message cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithFileMessageCell:(SBUBaseMessageCell * _Nonnull)fileMessageCell nib:(UINib * _Nullable)nib;
/// Registers a custom cell as a unknown message cell based on <code>SBUBaseMessageCell</code>.
/// important:
/// To register custom message cell, please use this function before calling <code>configure(delegate:dataSource:theme:)</code>
/// \code
/// listComponent.register(unknownMessageCell: MyUnknownMessageCell)
/// listComponent.configure(delegate: self, dataSource: self, theme: theme)
///
/// \endcode\param unknownMessageCell Customized unknown message cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithUnknownMessageCell:(SBUBaseMessageCell * _Nonnull)unknownMessageCell nib:(UINib * _Nullable)nib;
/// Registers a custom cell as a additional message cell based on <code>SBUBaseMessageCell</code>.
/// important:
/// To register custom message cell, please use this function before calling <code>configure(delegate:dataSource:theme:)</code>
/// \code
/// listComponent.register(customMessageCell: MyCustomMessageCell)
/// listComponent.configure(delegate: self, dataSource: self, theme: theme)
///
/// \endcode\param customMessageCell Customized message cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithCustomMessageCell:(SBUBaseMessageCell * _Nonnull)customMessageCell nib:(UINib * _Nullable)nib;
/// Configures cell with message for a particular row.
/// \param messageCell <code>SBUBaseMessageCell</code> object.
///
/// \param message The message for <code>messageCell</code>.
///
/// \param indexPath An index path representing the <code>messageCell</code>
///
- (void)configureCell:(SBUBaseMessageCell * _Nonnull)messageCell message:(SBDBaseMessage * _Nonnull)message forRowAt:(NSIndexPath * _Nonnull)indexPath;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
/// Register the message cell to the table view.
- (void)registerWithMessageCell:(SBUBaseMessageCell * _Nonnull)messageCell nib:(UINib * _Nullable)nib;
/// Generates identifier of message cell.
/// \param message Message object
///
///
/// returns:
/// The identifier of message cell.
- (NSString * _Nonnull)generateCellIdentifierBy:(SBDBaseMessage * _Nonnull)message SWIFT_WARN_UNUSED_RESULT;
/// Gets the position of the message to be grouped.
/// Only successful messages can be grouped.
/// \param currentIndex Index of current message in the message list
///
///
/// returns:
/// Position of a message when grouped
- (enum MessageGroupPosition)getMessageGroupingPositionWithCurrentIndex:(NSInteger)currentIndex SWIFT_WARN_UNUSED_RESULT;
@end


@interface SBUGroupChannelModuleList (SWIFT_EXTENSION(SendbirdUIKit)) <SBUQuotedMessageViewDelegate>
- (void)didTapQuotedMessageView:(SBUQuotedBaseMessageView * _Nonnull)quotedMessageView;
@end

@class SBUBaseChannelCell;
@class UIContextualAction;

/// A module component that represent the list of <code>SBUGroupChannelListModule</code>.
SWIFT_CLASS_NAMED("List")
@interface SBUGroupChannelListModuleList : UIView
/// The table view to show the list of group channels
@property (nonatomic, strong) UITableView * _Nonnull tableView;
/// A view that shows when there is no group channel.
@property (nonatomic, strong) UIView * _Nullable emptyView;
/// The channel cell for <code>SBUBaseChannelCell</code> object. Use <code>register(channelCell:nib:)</code> to update.
@property (nonatomic, strong) SBUBaseChannelCell * _Nullable channelCell;
/// The custom channel cell for <code>SBUBaseChannelCell</code> object. Use <code>register(customCell:nib:)</code> to update.
@property (nonatomic, strong) SBUBaseChannelCell * _Nullable customCell;
/// The current channel list object from <code>channelListModule(_:channelsInTableView:)</code> data source method.
@property (nonatomic, readonly, copy) NSArray<SBDGroupChannel *> * _Nullable channelList;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUGroupChannelListModule.List()'");
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUGroupChannelListModule.List()'");
/// Set values of the views in the list component when it needs.
- (void)setupViews;
/// Sets layouts of the views in the list component.
- (void)setupLayouts;
/// Registers a custom cell as a channel cell based on <code>SBUBaseChannelCell</code>.
/// important:
/// To register custom channel cell, please use this function before calling <code>configure(delegate:dataSource:theme:)</code>
/// \code
/// listComponent.register(channelCell: MyChannelCell)
/// listComponent.configure(delegate: self, dataSource: self, theme: theme)
///
/// \endcode\param channelCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithChannelCell:(SBUBaseChannelCell * _Nonnull)channelCell nib:(UINib * _Nullable)nib;
/// Registers a additional cell as a custom cell based on <code>SBUBaseChannelCell</code>.
/// important:
/// To register additional channel cell, please use this function before calling <code>configure(delegate:dataSource:theme:)</code>
/// \code
/// listComponent.register(customCell: MyChannelCell)
/// listComponent.configure(delegate: self, dataSource: self, theme: theme)
///
/// \endcode\param customCell Additional channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithCustomCell:(SBUBaseChannelCell * _Nullable)customCell nib:(UINib * _Nullable)nib;
/// Configures cell for a particular row.
/// \param channelCell <code>SBUBaseChannelCell</code> object
///
/// \param indexPath An index path representing the <code>channelCell</code>
///
- (void)configureCell:(SBUBaseChannelCell * _Nullable)channelCell indexPath:(NSIndexPath * _Nonnull)indexPath;
/// Creates leave contextual action for a particular swipped cell.
/// \param indexPath An index path representing the <code>channelCell</code>
///
///
/// returns:
/// <code>UIContextualAction</code> object.
- (UIContextualAction * _Nullable)leaveContextualActionWith:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
/// Creates alarm contextual action for a particular swipped cell.
/// \param indexPath An index path representing the <code>channelCell</code>
///
///
/// returns:
/// <code>UIContextualAction</code> object.
- (UIContextualAction * _Nullable)alarmContextualActionWith:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
/// Reloads table view. This method corresponds to <code>UITableView reloadData()</code>.
- (void)reloadTableView;
- (void)updateEmptyViewWithType:(enum EmptyViewType)type;
@end


@interface SBUGroupChannelListModuleList (SWIFT_EXTENSION(SendbirdUIKit))
- (void)didSelectRetry;
@end


@interface SBUCreateChannelModuleList (SWIFT_EXTENSION(SendbirdUIKit))
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface SBUInviteUserModuleList (SWIFT_EXTENSION(SendbirdUIKit))
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface SBUPromoteMemberModuleList (SWIFT_EXTENSION(SendbirdUIKit))
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface SBUBaseChannelModuleList (SWIFT_EXTENSION(SendbirdUIKit))
- (void)didSelectClose;
- (void)didSelectMessageWithUserId:(NSString * _Nullable)userId;
@end


@interface SBUBaseChannelSettingsModuleList (SWIFT_EXTENSION(SendbirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

@class UIImage;

/// A module component that represent the list of <code>SBUBaseChannelSettingsModule</code>.
SWIFT_CLASS("_TtCC13SendbirdUIKit28SBUBaseChannelSettingsModule4List")
@interface List : UIView
/// The table view that shows the items of the channel settings.
@property (nonatomic, strong) UITableView * _Nonnull tableView;
/// A view that shows channel information on the settings.
@property (nonatomic, strong) UIView * _Nullable channelInfoView;
@property (nonatomic, readonly, strong) SBDBaseChannel * _Nullable baseChannel;
@property (nonatomic, readonly) BOOL isOperator;
- (void)setupViews;
- (void)setupLayouts;
/// Configures cell for a particular row.
/// \param cell <code>UITableViewCell</code> object
///
/// \param indexPath An index path representing the <code>channelCell</code>
///
- (void)configureCell:(UITableViewCell * _Nullable)cell indexPath:(NSIndexPath * _Nonnull)indexPath;
/// This function updates channeInfoView’s cover image
/// \param coverImage <code>UIImage</code> object
///
- (void)updateChannelInfoViewWithCoverImage:(UIImage * _Nonnull)coverImage;
/// This function ends editing channelInfoView
- (void)endEditingChannelInfoView;
/// This function reloads channelInfoView.
- (void)reloadChannelInfoView;
/// This function reloads the table view.
- (void)reloadTableView;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// A module component that represent the list of <code>SBUGroupChannelSettingsModule</code>.
SWIFT_CLASS_NAMED("List")
@interface SBUGroupChannelSettingsModuleList : List
@property (nonatomic, readonly, weak) SBDGroupChannel * _Nullable channel;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUGroupChannelSettingsModule.List()'");
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUGroupChannelSettingsModule.List()'");
- (void)setupViews;
- (void)configureCell:(UITableViewCell * _Nullable)cell indexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface SBUGroupChannelSettingsModuleList (SWIFT_EXTENSION(SendbirdUIKit))
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class SBDOpenChannel;

/// A module component that represent the list of <code>SBUOpenChannelSettingsModule</code>.
SWIFT_CLASS_NAMED("List")
@interface SBUOpenChannelSettingsModuleList : List
@property (nonatomic, readonly, weak) SBDOpenChannel * _Nullable channel;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUOpenChannelSettingsModule.List()'");
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUOpenChannelSettingsModule.List()'");
- (void)setupViews;
- (void)configureCell:(UITableViewCell * _Nullable)cell indexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface SBUOpenChannelSettingsModuleList (SWIFT_EXTENSION(SendbirdUIKit))
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


/// A module component that represent the list of <code>SBUModerationsModuleList</code>.
SWIFT_CLASS_NAMED("List")
@interface SBUModerationsModuleList : UIView
/// The table view that shows the moderation menu items as list.
@property (nonatomic, strong) UITableView * _Nonnull tableView;
/// The channel cell for <code>UITableViewCell</code> object. Use <code>register(moderationCell:nib:)</code> to update.
@property (nonatomic, strong) UITableViewCell * _Nullable moderationCell;
@property (nonatomic, readonly, strong) SBDBaseChannel * _Nullable channel;
- (void)setupViews;
- (void)setupLayouts;
/// Registers a custom cell as a moderation menu cell based on <code>UITableViewCell</code>.
/// important:
/// To register custom moderation menu cell, please use this function before calling <code>configure(delegate:dataSource:theme:)</code>
/// \code
/// listComponent.register(moderationCell: MyModerationCell)
/// listComponent.configure(delegate: self, dataSource: self, theme: theme)
///
/// \endcode\param moderationCell Customized moderation menu cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithModerationCell:(UITableViewCell * _Nonnull)moderationCell nib:(UINib * _Nullable)nib;
/// This function configures cell
/// \param cell UITableViewCell
///
/// \param indexPath indexPath
///
- (void)configureCell:(UITableViewCell * _Nullable)cell indexPath:(NSIndexPath * _Nonnull)indexPath;
/// Reloads table view. This method corresponds to <code>UITableView reloadData()</code>.
- (void)reloadTableView;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface SBUModerationsModuleList (SWIFT_EXTENSION(SendbirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface List (SWIFT_EXTENSION(SendbirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface SBUMemberListModuleList (SWIFT_EXTENSION(SendbirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface SBUMessageSearchModuleList (SWIFT_EXTENSION(SendbirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

@class UISwipeActionsConfiguration;

@interface SBUGroupChannelListModuleList (SWIFT_EXTENSION(SendbirdUIKit)) <UITableViewDataSource, UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UISwipeActionsConfiguration * _Nullable)tableView:(UITableView * _Nonnull)tableView trailingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface SBUBaseChannelModuleList (SWIFT_EXTENSION(SendbirdUIKit))
@property (nonatomic, readonly) BOOL isScrollNearByBottom;
/// This function checks if the current message and the next message date have the same day.
/// \param currentIndex Current message index
///
/// \param fullMessageList The full message list including failed/pending messages as well as sent messages
///
///
/// returns:
/// If <code>true</code>, the messages date is same day.
- (BOOL)checkSameDayAsNextMessageWithCurrentIndex:(NSInteger)currentIndex fullMessageList:(NSArray<SBDBaseMessage *> * _Nonnull)fullMessageList SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(uint8_t, LogType, open) {
  LogTypeNone = 0b00000000,
  LogTypeError = 0b00000001,
  LogTypeWarning = 0b00000010,
  LogTypeInfo = 0b00000100,
  LogTypeAll = 0b00000111,
};

/// This is an enumeration used to select a media resource type.
typedef SWIFT_ENUM(NSInteger, MediaResourceType, open) {
  MediaResourceTypeCamera = 0,
  MediaResourceTypeLibrary = 1,
  MediaResourceTypeDocument = 2,
  MediaResourceTypeUnknown = 3,
};

typedef SWIFT_ENUM(NSInteger, MemberListType, open) {
  MemberListTypeNone = 0,
  MemberListTypeCreateChannel = 1,
  MemberListTypeChannelMembers = 2,
  MemberListTypeInviteUser = 3,
  MemberListTypeReaction = 4,
};

/// This is an enumeration used to the message edit type.
typedef SWIFT_ENUM(NSInteger, MessageEditItem, open) {
  MessageEditItemCopy = 0,
  MessageEditItemEdit = 1,
  MessageEditItemDelete = 2,
};

/// This is an enumeration to file type in the message.
typedef SWIFT_ENUM(NSInteger, MessageFileType, open) {
  MessageFileTypeImage = 0,
  MessageFileTypeVideo = 1,
  MessageFileTypeAudio = 2,
  MessageFileTypePdf = 3,
  MessageFileTypeEtc = 4,
};

/// This is an enumeration used to select the message position in group messages.
typedef SWIFT_ENUM(NSInteger, MessageGroupPosition, open) {
  MessageGroupPositionNone = 0,
  MessageGroupPositionTop = 1,
  MessageGroupPositionMiddle = 2,
  MessageGroupPositionBottom = 3,
};

/// This is an enumeration for cell’s menu item type.
/// since:
/// 1.2.5
typedef SWIFT_ENUM(NSInteger, MessageMenuItem, open) {
  MessageMenuItemSave = 0,
  MessageMenuItemCopy = 1,
  MessageMenuItemEdit = 2,
  MessageMenuItemDelete = 3,
  MessageMenuItemReply = 4,
};

/// This is an enumeration used to select the message position.
typedef SWIFT_ENUM(NSInteger, MessagePosition, open) {
  MessagePositionLeft = 0,
  MessagePositionRight = 1,
  MessagePositionCenter = 2,
};

/// This is an enumeration used to handling action and display by type in <code>MederationsViewController</code> and <code>ModerationCell</code>.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, ModerationItemType, open) {
  ModerationItemTypeOperators = 0,
  ModerationItemTypeMutedMembers = 1,
  ModerationItemTypeBannedMembers = 2,
  ModerationItemTypeFreezeChannel = 3,
};



@interface NSObject (SWIFT_EXTENSION(SendbirdUIKit))
/// This gets the class name of object.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull sbu_className;)
+ (NSString * _Nonnull)sbu_className SWIFT_WARN_UNUSED_RESULT;
/// This gets the class name of object.
@property (nonatomic, readonly, copy) NSString * _Nonnull sbu_className;
@end

/// This is an enumeration for new message info item type.
/// since:
/// 2.0.0
typedef SWIFT_ENUM(NSInteger, NewMessageInfoItemType, open) {
  NewMessageInfoItemTypeTooltip = 0,
  NewMessageInfoItemTypeButton = 1,
};

/// This is an enumeration used to handling action and display by type in <code>OpenChannelSettingsViewController</code> and <code>ChannelSettingCell</code>.
/// since:
/// 2.0.0
typedef SWIFT_ENUM(NSInteger, OpenChannelSettingItemType, open) {
  OpenChannelSettingItemTypeParticipants = 0,
  OpenChannelSettingItemTypeDelete = 1,
};


/// The <code>UITableViewCell</code> conforming to <code>SBUViewLifeCycle</code>
/// since:
/// 2.2.0
IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendbirdUIKit16SBUTableViewCell")
@interface SBUTableViewCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end

enum SBUMessageReceiptState : NSInteger;

IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendbirdUIKit18SBUBaseMessageCell")
@interface SBUBaseMessageCell : SBUTableViewCell
@property (nonatomic, strong) SBDBaseMessage * _Nonnull message;
@property (nonatomic) enum MessagePosition position;
@property (nonatomic) enum MessageGroupPosition groupPosition;
@property (nonatomic) enum SBUMessageReceiptState receiptState;
@property (nonatomic, strong) UIView * _Nonnull messageContentView;
@property (nonatomic, strong) UIView * _Nonnull dateView;
/// This function handles the initialization of views.
- (void)setupViews;
/// This function handles the initialization of actions.
- (void)setupActions;
/// This function handles the initialization of autolayouts.
- (void)setupLayouts;
- (void)setupStyles;
/// This function configure a cell using informations.
/// \param message Message object
///
/// \param position Cell position (left / right / center)
///
/// \param hideDateView Hide or expose date information
///
/// \param receiptState ReadReceipt state
///
- (void)configureWithMessage:(SBDBaseMessage * _Nonnull)message position:(enum MessagePosition)position hideDateView:(BOOL)hideDateView groupPosition:(enum MessageGroupPosition)groupPosition receiptState:(enum SBUMessageReceiptState)receiptState SWIFT_DEPRECATED_MSG("", "configure(message:configuration:)");
- (void)prepareForReuse;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UILabel;
@class SBDAdminMessage;

IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendbirdUIKit19SBUAdminMessageCell")
@interface SBUAdminMessageCell : SBUBaseMessageCell
@property (nonatomic, strong) UILabel * _Nonnull messageLabel;
- (void)setupViews;
- (void)setupLayouts;
- (void)layoutSubviews;
- (void)configure:(SBDAdminMessage * _Nonnull)message hideDateView:(BOOL)hideDateView SWIFT_DEPRECATED_MSG("", "configure(with:)");
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendbirdUIKit18SBUBaseChannelCell")
@interface SBUBaseChannelCell : SBUTableViewCell
@property (nonatomic, readonly, strong) SBDBaseChannel * _Nullable channel;
/// This function configure a cell using channel information.
/// \param channel cell object
///
- (void)configureWithChannel:(SBDBaseChannel * _Nonnull)channel;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIColor;
@class UINavigationController;
@class NSBundle;

SWIFT_CLASS("_TtC13SendbirdUIKit21SBUBaseViewController")
@interface SBUBaseViewController : UIViewController <UINavigationControllerDelegate>
- (void)loadView;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
/// This function setups views.
- (void)setupViews;
/// This function setups layouts.
- (void)setupLayouts;
/// This function updates layouts.
- (void)updateLayouts;
/// This function setups styles.
- (void)setupStyles;
/// This function updates styles.
- (void)updateStyles;
/// This function setups navigationBar’s background color and shadow color.
/// \param backgroundColor background color
///
/// \param shadowColor shadow color
///
- (void)setupNavigationBarWithBackgroundColor:(UIColor * _Nonnull)backgroundColor shadowColor:(UIColor * _Nonnull)shadowColor;
/// This is to pop or dismiss (depending on current view controller) the search view controller.
- (void)onClickBack;
- (void)navigationController:(UINavigationController * _Nonnull)navigationController didShowViewController:(UIViewController * _Nonnull)viewController animated:(BOOL)animated;
- (void)showLoading:(BOOL)isLoading;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class SBDMessageListParams;

/// note:
/// When you create channel list for open channels, please inherit <code>SBUBaseChannelListViewController</code>
/// important:
/// You have to avoid using extension because of non-@objc issue
/// \code
/// class CustomizedOpenChannelListViewController: SBUBaseChannelListViewController, UITableViewDataSource, UITableViewDelegate
///
/// \endcode
SWIFT_CLASS("_TtC13SendbirdUIKit32SBUBaseChannelListViewController")
@interface SBUBaseChannelListViewController : SBUBaseViewController
/// This is a function that shows the channelViewController.
/// If you want to use a custom channelViewController, override it and implement it.
/// \param channelUrl channel url for use in channelViewController.
///
/// \param messageListParams If there is a messageListParams set directly for use in Channel, set it up here
///
- (void)showChannelWithChannelUrl:(NSString * _Nonnull)channelUrl messageListParams:(SBDMessageListParams * _Nullable)messageListParams;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class Header;
@class SBUBaseChannelSettingsViewModel;
@class UIImagePickerController;
@class SBDError;
@class SBDMessageContext;

SWIFT_CLASS("_TtC13SendbirdUIKit36SBUBaseChannelSettingsViewController")
@interface SBUBaseChannelSettingsViewController : SBUBaseViewController <UIImagePickerControllerDelegate>
@property (nonatomic, strong) Header * _Nullable baseHeaderComponent;
@property (nonatomic, strong) List * _Nullable baseListComponent;
@property (nonatomic, strong) SBUBaseChannelSettingsViewModel * _Nullable baseViewModel;
@property (nonatomic, copy) NSString * _Nullable channelName;
@property (nonatomic, readonly, strong) SBDBaseChannel * _Nullable channel;
@property (nonatomic, readonly, copy) NSString * _Nullable channelUrl;
@property (nonatomic, readonly) BOOL isOperator;
@property (nonatomic, readonly) NSInteger actionSheetIdEdit;
@property (nonatomic, readonly) NSInteger actionSheetIdPicker;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLoad;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)setupLayouts;
- (void)setupStyles;
- (void)updateStyles;
/// Creates the view model, loading initial messages from given starting point.
/// note:
/// If you want to customize the viewModel, override this function
/// since:
/// 3.0.0
/// \param channel (opt) channel object
///
/// \param channelUrl (opt) channel url
///
- (void)createViewModelWithChannel:(SBDBaseChannel * _Nullable)channel channelUrl:(NSString * _Nullable)channelUrl;
/// This function sets right bar button when enable to set.
/// since:
/// 3.0.0
- (void)updateRightBarButton;
/// This function used to when edit button click.
/// since:
/// 3.0.0
- (void)showChannelEditActionSheet;
/// This function shows the channel image selection menu.
- (void)selectChannelImage;
/// This function shows the channel name change popup.
- (void)changeChannelName;
/// This function shows image picker for changing channel image.
/// since:
/// 3.0.0
/// \param type Media resource type (<code>MediaResourceType</code>)
///
- (void)showChannelImagePickerWith:(enum MediaResourceType)type;
/// If you want to use a custom memberListViewController, override it and implement it.
- (void)showMemberList;
/// If you want to use a custom MessageSearchViewController, override it and implement it.
/// since:
/// 2.1.0
- (void)showSearch;
/// (Group channel only) If you want to use a custom moderationsViewController, override it and implement it.
/// since:
/// 1.2.0
- (void)showModerationList;
/// (Open channel only) If you want to use a custom memberListViewController, override it and implement it.
- (void)showParticipantsList;
- (void)didSelectActionSheetItemWithIndex:(NSInteger)index identifier:(NSInteger)identifier;
- (void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
- (void)shouldUpdateLoadingState:(BOOL)isLoading;
- (void)didReceiveError:(SBDError * _Nullable)error isBlocker:(BOOL)isBlocker;
- (void)baseChannelSettingsViewModel:(SBUBaseChannelSettingsViewModel * _Nonnull)viewModel didChangeChannel:(SBDBaseChannel * _Nullable)channel withContext:(SBDMessageContext * _Nonnull)context;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class SBDUser;

@interface SBUBaseChannelSettingsViewController (SWIFT_EXTENSION(SendbirdUIKit))
@property (nonatomic, strong) UIView * _Nullable titleView SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUBaseChannelSettingsModule.Header`.", "headerComponent.titleView");
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUBaseChannelSettingsModule.Header`.", "headerComponent.leftBarButton");
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUBaseChannelSettingsModule.Header`.", "headerComponent.rightBarButton");
@property (nonatomic, readonly, strong) UITableView * _Nullable tableView SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUBaseChannelSettingsModule.List`.", "listComponent.tableView");
@property (nonatomic, strong) UIView * _Nullable userInfoView SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUBaseChannelSettingsModule.List`. And renamed to `channelInfoView`.", "listComponent.channelInfoView");
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUBaseChannelSettingsViewModel`.", "viewModel.loadChannel(channelUrl:)");
- (void)updateChannelWithChannelName:(NSString * _Nullable)channelName coverImage:(UIImage * _Nullable)coverImage SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUBaseChannelSettingsViewModel`.", "viewModel.updateChannel(channelName:coverImage:)");
- (void)onClickEdit SWIFT_DEPRECATED_MSG("", "showChannelEditActionSheet");
- (BOOL)shouldShowLoadingIndicator SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE_MSG("'shouldShowLoadingIndicator' has been renamed to 'shouldUpdateLoadingState:'");
- (void)shouldDismissLoadingIndicator SWIFT_UNAVAILABLE_MSG("'shouldDismissLoadingIndicator' has been renamed to 'shouldUpdateLoadingState:'");
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidJoin:(SBDUser * _Nonnull)user SWIFT_UNAVAILABLE_MSG("This function has been moved to the `SBUBaseChannelSettingsViewModel`.");
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidLeave:(SBDUser * _Nonnull)user SWIFT_UNAVAILABLE_MSG("This function has been moved to the `SBUBaseChannelSettingsViewModel`.");
- (void)channel:(SBDOpenChannel * _Nonnull)sender userDidExit:(SBDUser * _Nonnull)user SWIFT_UNAVAILABLE_MSG("This function has been moved to the `SBUBaseChannelSettingsViewModel`.");
- (void)channel:(SBDOpenChannel * _Nonnull)sender userDidEnter:(SBDUser * _Nonnull)user SWIFT_UNAVAILABLE_MSG("This function has been moved to the `SBUBaseChannelSettingsViewModel`.");
@end


SWIFT_CLASS("_TtC13SendbirdUIKit31SBUBaseChannelSettingsViewModel")
@interface SBUBaseChannelSettingsViewModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface SBUBaseChannelSettingsViewModel (SWIFT_EXTENSION(SendbirdUIKit)) <SBDChannelDelegate>
- (void)channel:(SBDOpenChannel * _Nonnull)sender userDidEnter:(SBDUser * _Nonnull)user;
- (void)channel:(SBDOpenChannel * _Nonnull)sender userDidExit:(SBDUser * _Nonnull)user;
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidJoin:(SBDUser * _Nonnull)user;
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidLeave:(SBDUser * _Nonnull)user;
@end

@class Header;
@class Input;
@class SBUBaseChannelViewModel;
enum SBUMessageInputMode : NSInteger;
@class SBDReactionEvent;
@class UIGestureRecognizer;
@class UIPresentationController;
@class UIDocumentPickerViewController;
@class NSURL;
@class UIDocumentInteractionController;
@class NSData;

SWIFT_CLASS("_TtC13SendbirdUIKit28SBUBaseChannelViewController")
@interface SBUBaseChannelViewController : SBUBaseViewController <UIDocumentInteractionControllerDelegate, UIDocumentPickerDelegate, UIGestureRecognizerDelegate, UIImagePickerControllerDelegate, UIViewControllerTransitioningDelegate>
@property (nonatomic, strong) Header * _Nullable baseHeaderComponent;
@property (nonatomic, strong) SBUBaseChannelModuleList * _Nullable baseListComponent;
@property (nonatomic, strong) Input * _Nullable baseInputComponent;
/// To decide whether to use right bar button item or not
@property (nonatomic) BOOL useRightBarButtonItem;
@property (nonatomic, strong) SBUBaseChannelViewModel * _Nullable baseViewModel;
@property (nonatomic, copy) NSString * _Nullable channelName;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
/// Initiates view controller to enter a channel with its URL, message list params and a specific timestamp representing a starting potint.
/// See the example below for params generation.
/// \code
///     let params = SBDMessageListParams()
///     params.includeMetaArray = true
///     params.includeReactions = true
///     params.includeThreadInfo = true
///     ...
///
/// \endcodenote:
/// The <code>reverse</code> and the <code>previousResultSize</code> properties in the <code>SBDMessageListParams</code> are set in the UIKit. Even though you set that property it will be ignored.
/// since:
/// 2.1.0
/// \param channelUrl Channel’s URL
///
/// \param startingPoint A starting point timestamp to start the message list from. The default value is <code>Int64.max</code>
///
/// \param messageListParams <code>SBDMessageListParams</code> object to be used when loading messages.
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl startingPoint:(int64_t)startingPoint messageListParams:(SBDMessageListParams * _Nullable)messageListParams OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
/// Sets up views including module components.
/// important:
/// When you override this method, please call <code>super.setupViews</code> after <code>configure</code> method of the component. e.g.
/// \code
/// override func setupViews() {
///     self.baseHeaderComponent = SBUModuleSet.groupChannelModule.headerComponent()
///     self.baseHeaderComponent?.configure(delegate: self, theme: self.theme)
///
///     super.setupViews()
/// }
///
/// \endcode
- (void)setupViews;
- (void)setupStyles;
/// Updates channelTitle with channel and channelName
/// since:
/// 3.0.0
- (void)updateChannelTitle;
/// Updates channelStatus with channel
/// since:
/// 3.0.0
- (void)updateChannelStatus;
/// This function shows cell’s menu.
/// This is used when the reaction feature is activated.
/// This function configures the menu items using the <code>message</code> object.
/// since:
/// 3.0.0
/// \param cell Message cell
///
/// \param message Message object
///
- (void)showMenuViewController:(UITableViewCell * _Nonnull)cell message:(SBDBaseMessage * _Nonnull)message;
/// This function shows cell’s menu.
/// This is used when the reaction feature is inactivated.
/// This function configures the menu items using the <code>message</code> object.
/// since:
/// 3.0.0
/// \param cell Message cell
///
/// \param indexPath IndexPath
///
/// \param message Message object
///
- (void)showMenuModal:(UITableViewCell * _Nonnull)cell indexPath:(NSIndexPath * _Nonnull)indexPath message:(SBDBaseMessage * _Nonnull)message;
/// This function shows cell’s menu: retry, delete, cancel.
/// This is used when selected failed message.
/// since:
/// 2.1.12
/// \param message Message object
///
- (void)showFailedMessageMenuWithMessage:(SBDBaseMessage * _Nonnull)message;
/// Shows channel settings view controller such as <code>SBUChannelSettingsViewController</code>
- (void)showChannelSettings;
/// This function presents <code>SBUEmojiListViewController</code>
/// since:
/// 1.1.0
/// \param message <code>SBDBaseMessage</code> object
///
- (void)showEmojiListModalWithMessage:(SBDBaseMessage * _Nonnull)message;
/// This function updates new message info view’s hidden status.
/// since:
/// 3.0.0
/// \param hidden hidden status
///
- (void)updateNewMessageInfoWithHidden:(BOOL)hidden;
/// This function opens a file according to the file type.
/// since:
/// 3.0.0
/// \param fileMessage fileMessage object
///
- (void)openFileWithFileMessage:(SBDFileMessage * _Nonnull)fileMessage;
/// This function increases the new message count.
- (BOOL)increaseNewMessageCount;
- (void)setMessageInputViewMode:(enum SBUMessageInputMode)mode message:(SBDBaseMessage * _Nullable)message;
- (void)baseChannelViewModel:(SBUBaseChannelViewModel * _Nonnull)viewModel didChangeChannel:(SBDBaseChannel * _Nullable)channel withContext:(SBDMessageContext * _Nonnull)context;
- (void)baseChannelViewModel:(SBUBaseChannelViewModel * _Nonnull)viewModel didReceiveNewMessage:(SBDBaseMessage * _Nonnull)message forChannel:(SBDBaseChannel * _Nonnull)channel;
- (void)baseChannelViewModel:(SBUBaseChannelViewModel * _Nonnull)viewModel shouldFinishEditModeForChannel:(SBDBaseChannel * _Nonnull)channel;
- (void)baseChannelViewModel:(SBUBaseChannelViewModel * _Nonnull)viewModel shouldDismissForChannel:(SBDBaseChannel * _Nullable)channel;
- (void)baseChannelViewModel:(SBUBaseChannelViewModel * _Nonnull)viewModel didChangeMessageList:(NSArray<SBDBaseMessage *> * _Nonnull)messages needsToReload:(BOOL)needsToReload initialLoad:(BOOL)initialLoad;
- (void)baseChannelViewModel:(SBUBaseChannelViewModel * _Nonnull)viewModel shouldUpdateScrollInMessageList:(NSArray<SBDBaseMessage *> * _Nonnull)messages forContext:(SBDMessageContext * _Nullable)context keepsScroll:(BOOL)keepsScroll;
- (void)baseChannelViewModel:(SBUBaseChannelViewModel * _Nonnull)viewModel didUpdateReaction:(SBDReactionEvent * _Nonnull)reaction forMessage:(SBDBaseMessage * _Nonnull)message;
- (void)baseChannelModule:(Header * _Nonnull)headerComponent didUpdateTitleView:(UIView * _Nullable)titleView;
- (void)baseChannelModule:(Header * _Nonnull)headerComponent didUpdateLeftItem:(UIBarButtonItem * _Nullable)leftItem;
- (void)baseChannelModule:(Header * _Nonnull)headerComponent didUpdateRightItem:(UIBarButtonItem * _Nullable)rightItem;
- (void)baseChannelModule:(Header * _Nonnull)headerComponent didTapLeftItem:(UIBarButtonItem * _Nonnull)leftItem;
- (void)baseChannelModule:(Header * _Nonnull)headerComponent didTapRightItem:(UIBarButtonItem * _Nonnull)rightItem;
- (void)baseChannelModule:(SBUBaseChannelModuleList * _Nonnull)listComponent willDisplay:(UITableViewCell * _Nonnull)cell forRowAt:(NSIndexPath * _Nonnull)indexPath;
- (void)baseChannelModule:(SBUBaseChannelModuleList * _Nonnull)listComponent didTapMessage:(SBDBaseMessage * _Nonnull)message forRowAt:(NSIndexPath * _Nonnull)indexPath;
- (void)baseChannelModule:(SBUBaseChannelModuleList * _Nonnull)listComponent didLongTapMessage:(SBDBaseMessage * _Nonnull)message forRowAt:(NSIndexPath * _Nonnull)indexPath;
- (void)baseChannelModule:(SBUBaseChannelModuleList * _Nonnull)listComponent didTapUserProfile:(SBUUser * _Nonnull)user;
- (void)baseChannelModule:(SBUBaseChannelModuleList * _Nonnull)listComponent didScroll:(UIScrollView * _Nonnull)scrollView;
- (void)baseChannelModuleDidTapScrollToButton:(SBUBaseChannelModuleList * _Nonnull)listComponent animated:(BOOL)animated;
- (void)baseChannelModuleDidSelectRetry:(SBUBaseChannelModuleList * _Nonnull)listComponent;
- (SBDBaseChannel * _Nullable)baseChannelModule:(SBUBaseChannelModuleList * _Nonnull)listComponent channelForTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSArray<SBDBaseMessage *> * _Nonnull)baseChannelModule:(SBUBaseChannelModuleList * _Nonnull)listComponent sentMessagesInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSArray<SBDBaseMessage *> * _Nonnull)baseChannelModule:(SBUBaseChannelModuleList * _Nonnull)listComponent fullMessagesInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (BOOL)baseChannelModule:(SBUBaseChannelModuleList * _Nonnull)listComponent hasNextInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSIndexPath * _Nullable)baseChannelModule:(SBUBaseChannelModuleList * _Nonnull)listComponent lastSeenIndexPathIn:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (void)baseChannelModule:(Input * _Nonnull)inputComponent didUpdateFrozenState:(BOOL)isFrozen;
- (void)baseChannelModuleDidStartTyping:(Input * _Nonnull)inputComponent;
- (void)baseChannelModuleDidEndTyping:(Input * _Nonnull)inputComponent;
- (void)baseChannelModule:(Input * _Nonnull)inputComponent didTapSend:(NSString * _Nonnull)text parentMessage:(SBDBaseMessage * _Nullable)parentMessage;
- (void)baseChannelModule:(Input * _Nonnull)inputComponent didTapResource:(enum MediaResourceType)type;
/// Presents <code>UIDocumentPickerViewController</code>.
/// since:
/// 2.2.3
- (void)showDocumentPicker;
- (void)showLimitedPhotoLibraryPicker;
/// Presents <code>UIImagePickerController</code>. If <code>SBUGlobals.UsingPHPicker</code>is <code>true</code>, it presents <code>PHPickerViewController</code> in iOS 14 or later.
/// note:
/// If you want to use customized <code>PHPickerConfiguration</code>, please override this method.
/// since:
/// 2.2.3
- (void)showPhotoLibraryPicker;
/// Presents <code>UIImagePickerController</code> for using camera.
/// since:
/// 2.2.3
- (void)showCamera;
/// since:
/// 3.0.0
- (void)showPermissionAlert;
- (void)baseChannelModule:(Input * _Nonnull)inputComponent didTapEdit:(NSString * _Nonnull)text;
- (void)baseChannelModule:(Input * _Nonnull)inputComponent didChangeText:(NSString * _Nonnull)text;
- (void)baseChannelModule:(Input * _Nonnull)inputComponent willChangeMode:(enum SBUMessageInputMode)mode message:(SBDBaseMessage * _Nullable)message;
- (void)baseChannelModule:(Input * _Nonnull)inputComponent didChangeMode:(enum SBUMessageInputMode)mode message:(SBDBaseMessage * _Nullable)message;
- (SBDBaseChannel * _Nullable)baseChannelModule:(Input * _Nonnull)inputComponent channelForInputView:(UIView * _Nullable)messageInputView SWIFT_WARN_UNUSED_RESULT;
- (BOOL)baseChannelViewModel:(SBUBaseChannelViewModel * _Nonnull)viewModel isScrollNearBottomInChannel:(SBDBaseChannel * _Nullable)channel SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (UIPresentationController * _Nullable)presentationControllerForPresentedViewController:(UIViewController * _Nonnull)presented presentingViewController:(UIViewController * _Nullable)presenting sourceViewController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
- (void)imagePickerControllerDidCancel:(UIImagePickerController * _Nonnull)picker;
- (void)documentPicker:(UIDocumentPickerViewController * _Nonnull)controller didPickDocumentsAtURLs:(NSArray<NSURL *> * _Nonnull)urls;
- (UIViewController * _Nonnull)documentInteractionControllerViewControllerForPreview:(UIDocumentInteractionController * _Nonnull)controller SWIFT_WARN_UNUSED_RESULT;
/// Called when the image is picked from <code>SBUSelectablePhotoViewController</code>.
/// \param data The image data.
///
- (void)didTapSendImageData:(NSData * _Nonnull)data;
/// Called when the video is picked from <code>SBUSelectablePhotoViewController</code>
/// \param url The URL of the video
///
- (void)didTapSendVideoURL:(NSURL * _Nonnull)url;
- (void)didSelectDeleteImageWithMessage:(SBDFileMessage * _Nonnull)message;
- (void)shouldUpdateLoadingState:(BOOL)isLoading;
- (void)didReceiveError:(SBDError * _Nullable)error isBlocker:(BOOL)isBlocker;
@end

@class NSNotification;

@interface SBUBaseChannelViewController (SWIFT_EXTENSION(SendbirdUIKit))
/// This function registers keyboard notifications.
/// since:
/// 3.0.0
- (void)registerKeyboardNotifications;
/// This functions adds the hide keyboard gesture in tableView.
/// since:
/// 1.2.5
- (void)addGestureHideKeyboard;
/// This function changes the messageInputView bottom constraint using keyboard height.
/// since:
/// 1.2.5
/// \param notification Notification object with keyboardFrame information
///
- (void)keyboardWillShow:(NSNotification * _Nonnull)notification;
/// This function changes the messageInputView bottom constraint using keyboard height.
/// since:
/// 1.2.5
/// \param notification Notification object with keyboardFrame information
///
- (void)keyboardWillHide:(NSNotification * _Nonnull)notification;
/// This function dismisses the keyboard.
/// since:
/// 1.2.5
- (void)dismissKeyboard;
@end

@class SBUMessageInputView;

@interface SBUBaseChannelViewController (SWIFT_EXTENSION(SendbirdUIKit))
- (void)didSucceedReconnection SWIFT_UNAVAILABLE_MSG("'didSucceedReconnection' has been renamed to 'viewModel.didSucceedReconnection()': This function has been moved to `SBUBaseChannelViewModel`");
- (BOOL)isScrollNearBottom SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModelDataSource`. Use `baseChannelViewModel(_:isScrollNearBottomInChannel:)` of `SBUBaseChannelViewModelDataSource` instead.");
- (void)channelDidChange:(SBDBaseChannel * _Nullable)channel context:(SBDMessageContext * _Nonnull)context SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModelDelegate`. Use `baseChannelViewModel(_:didChangeChannel:withContext:)` of `SBUBaseChannelViewModelDelegate` instead.");
- (void)channelDidReceiveNewMessage:(SBDBaseChannel * _Nonnull)channel message:(SBDBaseMessage * _Nonnull)message SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModelDelegate`. Use `baseChannelViewModel(_:didReceiveNewMessage:forChannel:)` of `SBUBaseChannelViewModelDelegate` instead.");
- (void)channelShouldFinishEditMode:(SBDBaseChannel * _Nonnull)channel SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModelDelegate`. Use `baseChannelViewModel(_:shouldFinishEditModeForChannel:)` of `SBUBaseChannelViewModelDelegate` instead.");
- (void)channelShouldDismiss:(SBDBaseChannel * _Nullable)channel SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModelDelegate`. Use `baseChannelViewModel(_:shouldDismissForChannel:)` of `SBUBaseChannelViewModelDelegate` instead.");
- (void)messageListDidChange:(NSArray<SBDBaseMessage *> * _Nonnull)messages needToReload:(BOOL)needToReload isInitialLoad:(BOOL)isInitialLoad SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModelDelegate`. Use `baseChannelViewModel(_:didChangeMessageList:needsToReload:initialLoad:)` of `SBUBaseChannelViewModelDelegate` instead.");
- (void)messageListShouldUpdateScroll:(NSArray<SBDBaseMessage *> * _Nonnull)messages context:(SBDMessageContext * _Nullable)context keepScroll:(BOOL)keepScroll SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModelDelegate`. Use `baseChannelViewModel(_:shouldUpdateScrollInMessageList:forContext:keepsScroll:)` of `SBUBaseChannelViewModelDelegate` instead.");
- (void)message:(SBDBaseMessage * _Nonnull)message didUpdateReaction:(SBDReactionEvent * _Nonnull)reaction SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModelDelegate`. Use `baseChannelViewModel(_:didUpdateReaction:forMessage:)` of `SBUBaseChannelViewModelDelegate` instead.");
- (enum MessageGroupPosition)getMessageGroupingPositionWithCurrentIndex:(NSInteger)currentIndex SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUGroupChannelModule.List` (or `SBUOpenChannelModule.List`).");
- (void)setTapGestureHandler:(UITableViewCell * _Nonnull)cell message:(SBDBaseMessage * _Nonnull)message SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelModuleListDelegate`. Use `channelModule(_:didTapMessage:forRowAt:)` of `SBUBaseChannelModuleListDelegate` instead.");
- (void)setLongTapGestureHandler:(UITableViewCell * _Nonnull)cell message:(SBDBaseMessage * _Nonnull)message indexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelModuleListDelegate`. Use `channelModule(_:didLongTapMessage:forRowAt:)` of `SBUBaseChannelModuleListDelegate` instead.");
- (void)setUserProfileTapGestureHandler:(SBUUser * _Nonnull)user SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelModuleListDelegate` and replaced to  `baseChannelModule(_:didTapUserProfile:)`.");
- (void)sendImageFileMessageWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUChannelModule.Input`. Use `pickImageFile(info:)` of `SBUChannelModule.Input` instead.");
- (void)sendVideoFileMessageWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUChannelModule.Input`. Use `pickVideoFile(info:)` of `SBUChannelModule.Input` instead.");
- (void)sendDocumentFileMessageWithDocumentUrls:(NSArray<NSURL *> * _Nonnull)documentUrls SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUChannelModule.Input`. Use `pickDocumentFile(documentUrls:)` of `SBUChannelModule.Input` instead.");
- (void)setLoading:(BOOL)loadingState :(BOOL)showIndicator SWIFT_UNAVAILABLE_MSG("'setLoading' has been renamed to 'showLoading:'");
- (void)didSelectMessageWithUserId:(NSString * _Nullable)userId SWIFT_UNAVAILABLE_MSG("'didSelectMessage' has been renamed to 'listComponent.didSelectMessage(userId:)'");
- (void)didSelectClose SWIFT_UNAVAILABLE_MSG("'didSelectClose' has been renamed to 'listComponent.didSelectClose()'");
- (void)didSelectRetry SWIFT_UNAVAILABLE_MSG("'didSelectRetry' has been renamed to 'listComponent.didSelectRetry()'");
- (BOOL)shouldShowLoadingIndicator SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUCommonViewModelDelegate`. Use `shouldUpdateLoadingState(_:)` of `SBUCommonViewModelDelegate` instead.");
- (void)shouldDismissLoadingIndicator SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUCommonViewModelDelegate`. Use `shouldUpdateLoadingState(_:)` of `SBUCommonViewModelDelegate` instead.");
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectSend:(NSString * _Nonnull)text SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelModuleInputDelegate` and replaced to `baseChannelModule(_:didTapSend:parentMessage:)`.");
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectResource:(enum MediaResourceType)type SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelModuleInputDelegate` and replaced to `baseChannelModule(_:didTapResource:)`.");
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectEdit:(NSString * _Nonnull)text SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelModuleInputDelegate` and replaced to `baseChannelModule(_:didSelectEdit:)`.");
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didChangeText:(NSString * _Nonnull)text SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelModuleInputDelegate` and replaced to `baseChannelModule(_:didChangeText:)`.");
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView willChangeMode:(enum SBUMessageInputMode)mode message:(SBDBaseMessage * _Nullable)message SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelModuleInputDelegate` and replaced to `baseChannelModule(_:willChangeMode:message:)`.");
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didChangeMode:(enum SBUMessageInputMode)mode message:(SBDBaseMessage * _Nullable)message SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelModuleInputDelegate` and replaced to `baseChannelModule(_:didChangeMode:)`.");
- (void)messageInputViewDidStartTyping SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelModuleInputDelegate` and replaced to `baseChannelModuleDidStartTyping(_:)`.");
- (void)messageInputViewDidEndTyping SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelModuleInputDelegate` and replaced to `baseChannelModuleDidEndTyping(_:)`.");
- (void)channel:(SBDBaseChannel * _Nonnull)sender didReceive:(SBDBaseMessage * _Nonnull)message SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModel`.");
- (void)channel:(SBDBaseChannel * _Nonnull)sender didUpdate:(SBDBaseMessage * _Nonnull)message SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUOpenChannelViewModel`.");
- (void)channel:(SBDBaseChannel * _Nonnull)sender messageWasDeleted:(int64_t)messageId SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModel`.");
- (void)channelWasChanged:(SBDBaseChannel * _Nonnull)sender SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModelDelegate` and replaced to `baseChannelViewModel(_:didChangeChannel:withContext:)`.");
- (void)channelWasFrozen:(SBDBaseChannel * _Nonnull)sender SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModelDelegate` and replaced to `baseChannelViewModel(_:didChangeChannel:withContext:)`.");
- (void)channelWasUnfrozen:(SBDBaseChannel * _Nonnull)sender SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModelDelegate` and replaced to `baseChannelViewModel(_:didChangeChannel:withContext:)`.");
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasMuted:(SBDUser * _Nonnull)user SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModelDelegate` and replaced to `baseChannelViewModel(_:didChangeChannel:withContext:)`.");
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasUnmuted:(SBDUser * _Nonnull)user SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModelDelegate` and replaced to `baseChannelViewModel(_:didChangeChannel:withContext:)`.");
- (void)channelDidUpdateOperators:(SBDBaseChannel * _Nonnull)sender SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModelDelegate` and replaced to `baseChannelViewModel(_:didChangeChannel:withContext:)`.");
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasBanned:(SBDUser * _Nonnull)user SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModelDelegate` and replaced to `baseChannelViewModel(_:didChangeChannel:withContext:)`.");
- (void)channel:(SBDOpenChannel * _Nonnull)sender userDidEnter:(SBDUser * _Nonnull)user SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModelDelegate` and replaced to `baseChannelViewModel(_:didChangeChannel:withContext:)`.");
- (void)channel:(SBDOpenChannel * _Nonnull)sender userDidExit:(SBDUser * _Nonnull)user SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModelDelegate` and replaced to `baseChannelViewModel(_:didChangeChannel:withContext:)`.");
- (void)channelWasDeleted:(NSString * _Nonnull)channelUrl channelType:(SBDChannelType)channelType SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelViewModelDelegate` and replaced to `baseChannelViewModel(_:didChangeChannel:withContext:)`.");
@end

@class SBDUserMessage;
@class SBDUserMessageParams;
@class SBDFileMessageParams;

@interface SBUBaseChannelViewController (SWIFT_EXTENSION(SendbirdUIKit))
@property (nonatomic, strong) UIView * _Nullable titleView SWIFT_DEPRECATED_MSG("This property has been moved to `SBUBaseChannelModule.Header`", "headerComponent.titleView");
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton SWIFT_DEPRECATED_MSG("This property has been moved to `SBUBaseChannelModule.Header`", "headerComponent.leftBarButton");
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton SWIFT_DEPRECATED_MSG("`This property has been moved to `SBUBaseChannelModule.Header`", "headerComponent.rightBarButton");
@property (nonatomic, strong) SBUMessageInputView * _Nullable messageInputView SWIFT_DEPRECATED_MSG("This property has been moved to `SBUBaseChannelModule.Input`", "inputComponent.messageInputView");
@property (nonatomic, readonly, strong) SBDBaseMessage * _Nullable currentQuotedMessage SWIFT_UNAVAILABLE_MSG("'currentQuotedMessage' has been renamed to 'inputComponent.currentQuotedMessage': This property has been moved to `SBUGroupChannelModule.Input`");
@property (nonatomic, strong) UITableView * _Nonnull tableView SWIFT_DEPRECATED_MSG("This property has been moved to `SBUBaseChannelModule.List`", "listComponent.tableView");
@property (nonatomic, strong) UIView * _Nullable channelStateBanner SWIFT_DEPRECATED_MSG("This property has been moved to `SBUBaseChannelModule.List`", "listComponent.channelStateBanner");
@property (nonatomic, strong) UIView * _Nullable emptyView SWIFT_DEPRECATED_MSG("This property has been moved to `SBUBaseChannelModule.List`", "listComponent.emptyView");
@property (nonatomic, strong) UIView * _Nullable newMessageInfoView SWIFT_DEPRECATED_MSG("This property has been moved to `SBUBaseChannelModule.List`", "listComponent.newMessageInfoView");
@property (nonatomic, strong) UIView * _Nullable scrollBottomView SWIFT_DEPRECATED_MSG("This property has been moved to `SBUBaseChannelModule.List`", "listComponent.scrollBottomView");
@property (nonatomic, strong) UIView * _Nullable userProfileView SWIFT_DEPRECATED_MSG("This property has been moved to `SBUBaseChannelModule.List`", "listComponent.userProfileView");
- (void)reloadTableView SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelModule.List`", "listComponent.reloadTableView");
- (void)setEditModeFor:(SBDUserMessage * _Nullable)userMessage SWIFT_DEPRECATED_MSG("", "setMessageInputViewMode:message:");
/// This is used to messageInputView state update.
- (void)updateMessageInputModeState SWIFT_DEPRECATED_MSG("This function has been moved to `SBDBaseChannelModule.List`.", "inputComponent.updateMessageInputModeState()");
@property (nonatomic, readonly, strong) SBDBaseChannel * _Nullable channel SWIFT_DEPRECATED_MSG("This property has been moved to `SBUBaseChannelViewModel`", "viewModel.channel");
@property (nonatomic, readonly, copy) NSString * _Nullable channelUrl SWIFT_DEPRECATED_MSG("This property has been moved to `SBUBaseChannelViewModel`", "viewModel.channelUrl");
@property (nonatomic, readonly, strong) SBDUserMessage * _Nullable inEditingMessage SWIFT_DEPRECATED_MSG("This property has been moved to `SBUBaseChannelViewModel`", "viewModel.inEditingMessage");
@property (nonatomic, readonly, strong) SBDMessageListParams * _Nonnull messageListParams SWIFT_DEPRECATED_MSG("This property has been moved to `SBUBaseChannelViewModel`", "viewModel.messageListParams");
@property (nonatomic, readonly, strong) SBDMessageListParams * _Nullable customizedMessageListParams SWIFT_DEPRECATED_MSG("This property has been moved to `SBUBaseChannelViewModel`", "viewModel.customizedMessageListParams");
@property (nonatomic, readonly, copy) NSArray<SBDBaseMessage *> * _Nonnull messageList SWIFT_DEPRECATED_MSG("This property has been moved to `SBUBaseChannelViewModel`", "viewModel.messageList");
@property (nonatomic, readonly, copy) NSArray<SBDBaseMessage *> * _Nonnull fullMessageList SWIFT_DEPRECATED_MSG("This property has been moved to `SBUBaseChannelViewModel`", "viewModel.fullMessageList");
/// This function is used to load channel information.
/// \param channelUrl channel url
///
/// \param messageListParams (Optional) The parameter to be used when getting channel information.
///
- (void)loadChannelWithChannelUrl:(NSString * _Nonnull)channelUrl messageListParams:(SBDMessageListParams * _Nullable)messageListParams SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel`.", "viewModel.loadChannel(channelUrl:messageListParams:)");
/// This function clears current message lists
/// since:
/// 2.1.0
- (void)clearMessageList SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel`.", "viewModel.clearMessageList()");
- (void)setReactionWithMessage:(SBDBaseMessage * _Nonnull)message emojiKey:(NSString * _Nonnull)emojiKey didSelect:(BOOL)didSelect SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel`.", "viewModel.setReaction(message:emojiKey:didSelect:)");
- (void)updateMessagesInListWithMessages:(NSArray<SBDBaseMessage *> * _Nullable)messages needReload:(BOOL)needReload SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel`.", "viewModel.updateMessagesInList(messages:needReload:)");
- (void)upsertMessagesInListWithMessages:(NSArray<SBDBaseMessage *> * _Nullable)messages needUpdateNewMessage:(BOOL)needUpdateNewMessage needReload:(BOOL)needReload SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel`.", "viewModel.upsertMessagesInList(messages:needUpdateNewMessage:needReload:)");
- (void)deleteMessagesInListWithMessageIds:(NSArray<NSNumber *> * _Nullable)messageIds needReload:(BOOL)needReload SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel` and replaced to `deleteMessagesInList(messageIds:excludeResendableMessages:needReload:)`.");
- (void)deleteMessagesInListWithMessageIds:(NSArray<NSNumber *> * _Nullable)messageIds excludeResendableMessages:(BOOL)excludeResendableMessages needReload:(BOOL)needReload SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel`.", "viewModel.deleteMessagesInList(messageIds:excludeResendableMessages:needReload:)");
- (void)deleteResendableMessage:(SBDBaseMessage * _Nonnull)message needReload:(BOOL)needReload SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel`.", "viewModel.deleteResendableMessage(_:needReload:)");
- (void)deleteResendableMessagesWithRequestIds:(NSArray<NSString *> * _Nonnull)requestIds needReload:(BOOL)needReload SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel`", "viewModel.deleteResendableMessages(requestIds:needReload:)");
- (void)sortAllMessageListWithNeedReload:(BOOL)needReload SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel`.", "viewModel.sortAllMessageList(needReload:)");
- (void)sendUserMessageWithText:(NSString * _Nonnull)text SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel` and replaced to `sendUserMessage(text:)`.");
- (void)sendUserMessageWithText:(NSString * _Nonnull)text parentMessage:(SBDBaseMessage * _Nullable)parentMessage SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel`.");
- (void)sendUserMessageWithMessageParams:(SBDUserMessageParams * _Nonnull)messageParams parentMessage:(SBDBaseMessage * _Nullable)parentMessage SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel`.");
- (void)sendFileMessageWithFileData:(NSData * _Nullable)fileData fileName:(NSString * _Nonnull)fileName mimeType:(NSString * _Nonnull)mimeType SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel`.");
- (void)sendFileMessageWithFileData:(NSData * _Nullable)fileData fileName:(NSString * _Nonnull)fileName mimeType:(NSString * _Nonnull)mimeType parentMessage:(SBDBaseMessage * _Nullable)parentMessage SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel`.");
- (void)sendFileMessageWithMessageParams:(SBDFileMessageParams * _Nonnull)messageParams parentMessage:(SBDBaseMessage * _Nullable)parentMessage SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel`. Use `sendFileMessage(messageParams:parentMessage:)` of `SBUBaseChannelViewModel` instead.");
- (void)updateUserMessageWithMessage:(SBDUserMessage * _Nonnull)message text:(NSString * _Nonnull)text SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel`.", "viewModel.updateUserMessage(message:text:)");
- (void)updateUserMessageWithMessage:(SBDUserMessage * _Nonnull)message messageParams:(SBDUserMessageParams * _Nonnull)messageParams SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel`.", "viewModel.updateUserMessage(message:messageParams:)");
- (void)resendMessageWithFailedMessage:(SBDBaseMessage * _Nonnull)failedMessage SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelViewModel`.", "viewModel.resendMessage(failedMessage:)");
/// Deletes a message with message object.
/// since:
/// 1.0.9
/// \param message <code>SBDBaseMessage</code> based class object
///
- (void)deleteMessageWithMessage:(SBDBaseMessage * _Nonnull)message SWIFT_DEPRECATED_MSG("", "showDeleteMessageMenu(message:)");
- (BOOL)checkSameDayAsNextMessageWithCurrentIndex:(NSInteger)currentIndex SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelModule.List` and replaced to `checkSameDayAsNextMessage(currentIndex:fullMessageList:)`.", "listComponent.checkSameDayAsNextMessage(currentIndex:fullMessageList:)");
- (void)onClickSetting SWIFT_DEPRECATED_MSG("", "showChannelSettings");
/// This function scrolls to bottom.
/// \param animated Animated
///
- (void)scrollToBottomWithAnimated:(BOOL)animated SWIFT_DEPRECATED_MSG("This function has been moved to `SBUBaseChannelModuleListDelegate`.", "baseChannelModuleDidTapScrollToButton:animated:");
@end


SWIFT_CLASS("_TtC13SendbirdUIKit23SBUBaseChannelViewModel")
@interface SBUBaseChannelViewModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface SBUBaseChannelViewModel (SWIFT_EXTENSION(SendbirdUIKit)) <SBDConnectionDelegate>
- (void)didSucceedReconnection;
@end


@interface SBUBaseChannelViewModel (SWIFT_EXTENSION(SendbirdUIKit)) <SBDChannelDelegate>
- (void)channel:(SBDBaseChannel * _Nonnull)sender didReceiveMessage:(SBDBaseMessage * _Nonnull)message;
- (void)channel:(SBDBaseChannel * _Nonnull)sender didUpdateMessage:(SBDBaseMessage * _Nonnull)message;
- (void)channel:(SBDBaseChannel * _Nonnull)sender messageWasDeleted:(int64_t)messageId;
- (void)channel:(SBDBaseChannel * _Nonnull)sender updatedReaction:(SBDReactionEvent * _Nonnull)reactionEvent;
- (void)channelDidUpdateReadReceipt:(SBDGroupChannel * _Nonnull)sender;
- (void)channelDidUpdateDeliveryReceipt:(SBDGroupChannel * _Nonnull)sender;
- (void)channelDidUpdateTypingStatus:(SBDGroupChannel * _Nonnull)sender;
- (void)channelWasChanged:(SBDBaseChannel * _Nonnull)sender;
- (void)channelWasFrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channelWasUnfrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasMuted:(SBDUser * _Nonnull)user;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasUnmuted:(SBDUser * _Nonnull)user;
- (void)channelDidUpdateOperators:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasBanned:(SBDUser * _Nonnull)user;
- (void)channelWasDeleted:(NSString * _Nonnull)channelUrl channelType:(SBDChannelType)channelType;
@end


/// The <code>UIView</code> conforming to <code>SBUViewLifeCycle</code>
/// since:
/// 2.2.0
IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendbirdUIKit7SBUView")
@interface SBUView : UIView
/// Initializes <code>UIView</code> and set up subviews, auto layouts and actions for SendbirdUIKit.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Initializes <code>UIView</code> and set up subviews, auto layouts and actions for SendbirdUIKit.
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'initWithFrame:'");
/// Lays out subviews and set up styles for SendbirdUIKit.
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC13SendbirdUIKit22SBUBaseFileContentView")
@interface SBUBaseFileContentView : SBUView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end


@class Header;
@class SBUBaseSelectUserViewModel;

SWIFT_CLASS("_TtC13SendbirdUIKit31SBUBaseSelectUserViewController")
@interface SBUBaseSelectUserViewController : SBUBaseViewController
@property (nonatomic, strong) Header * _Nullable baseHeaderComponent;
@property (nonatomic, strong) SBUBaseChannelSettingsModuleList * _Nullable baseListComponent;
@property (nonatomic, strong) SBUBaseSelectUserViewModel * _Nullable baseViewModel;
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
@property (nonatomic, readonly, copy) NSString * _Nullable channelUrl;
@property (nonatomic, readonly, copy) NSArray<SBUUser *> * _Nonnull userList;
@property (nonatomic, readonly, copy) NSSet<SBUUser *> * _Nonnull selectedUserList;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
/// Creates view model.
/// When the creation is completed, the channel load request is automatically executed.
/// \param channel (opt) Channel object
///
/// \param channelUrl (opt) ChannelUrl object
///
/// \param users (opt) users object.
///
/// \param type Invite list type (<code>.users</code> | <code>.operators</code>)
///
- (void)createViewModelWithChannel:(SBDBaseChannel * _Nullable)channel channelUrl:(NSString * _Nullable)channelUrl channelType:(SBDChannelType)channelType users:(NSArray<SBUUser *> * _Nullable)users;
- (void)setupLayouts;
- (void)setupStyles;
- (void)updateStyles;
/// This function is used to pop to channelViewController.
- (void)popToChannel;
/// This function is used to pop to previous viewController.
- (void)popToPrevious;
- (NSSet<SBUUser *> * _Nullable)selectedUsersForBaseSelectUserModule:(Header * _Nonnull)headerComponent SWIFT_WARN_UNUSED_RESULT;
- (NSArray<SBUUser *> * _Nullable)baseSelectUserModule:(SBUBaseChannelSettingsModuleList * _Nonnull)listComponent usersInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSSet<SBUUser *> * _Nullable)baseSelectUserModule:(SBUBaseChannelSettingsModuleList * _Nonnull)listComponent selectedUsersInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (void)shouldUpdateLoadingState:(BOOL)isLoading;
- (void)didReceiveError:(SBDError * _Nullable)error isBlocker:(BOOL)isBlocker;
/// When creating and using a user list directly, overriding this function and return the next user list.
/// Make this function return the next list each time it is called.
/// important:
/// If you want to use this function, please set the <code>SBUBaseSelectUserViewModelDataSource</code> in your class.
/// since:
/// 1.1.1
///
/// returns:
/// next user list
- (NSArray<SBUUser *> * _Nullable)nextUserList SWIFT_WARN_UNUSED_RESULT;
- (void)baseSelectedUserViewModel:(SBUBaseSelectUserViewModel * _Nonnull)viewModel didChangeUserList:(NSArray<SBUUser *> * _Nullable)users needsToReload:(BOOL)needsToReload;
- (void)baseSelectedUserViewModel:(SBUBaseSelectUserViewModel * _Nonnull)viewModel didUpdateSelectedUsers:(NSArray<SBUUser *> * _Nullable)selectedUsers;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class SBDApplicationUserListQuery;
@class SBDGroupChannelMemberListQuery;

@interface SBUBaseSelectUserViewController (SWIFT_EXTENSION(SendbirdUIKit))
@property (nonatomic, strong) UIView * _Nullable titleView SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUBaseSelectUserModule.Header`.", "headerComponent.titleView");
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUBaseSelectUserModule.Header`.", "headerComponent.leftBarButton");
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUBaseSelectUserModule.Header`.", "headerComponent.rightBarButton");
@property (nonatomic, readonly, strong) UITableView * _Nullable tableView SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUBaseSelectUserModule.List`.", "listComponent.tableView");
@property (nonatomic, readonly, strong) UITableViewCell * _Nullable userCell SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUBaseSelectUserModule.List`.", "listComponent.userCell");
@property (nonatomic, strong) UIView * _Nullable emptyView SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUBaseSelectUserModule.List`.", "listComponent.emptyView");
@property (nonatomic, readonly, copy) NSSet<NSString *> * _Nonnull joinedUserIds SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUBaseSelectUserViewModel`.", "viewModel.joinedUserIds");
@property (nonatomic, readonly, strong) SBDApplicationUserListQuery * _Nullable userListQuery SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUBaseSelectUserViewModel`.", "viewModel.userListQuery");
@property (nonatomic, readonly, strong) SBDGroupChannelMemberListQuery * _Nullable memberListQuery SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUBaseSelectUserViewModel`.", "viewModel.memberListQuery");
@property (nonatomic, readonly) enum ChannelInviteListType inviteListType SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUBaseSelectUserViewModel`.", "viewModel.inviteListType");
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel type:(enum ChannelInviteListType)type SWIFT_UNAVAILABLE_MSG("If you want to invite a user, use `init(channel:)` on `SBUInviteUserViewController` class, \nor if you want to promote a member, use `init(channel:)` on `SBUPromoteMemberViewController` class.");
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl type:(enum ChannelInviteListType)type SWIFT_UNAVAILABLE_MSG("If you want to invite a user, use `init(channelUrl:)` on `SBUInviteUserViewController` class,\nor if you want to promote a member, use `init(channelUrl:)` on `SBUPromoteMemberViewController` class.");
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel users:(NSArray<SBUUser *> * _Nonnull)users type:(enum ChannelInviteListType)type SWIFT_UNAVAILABLE_MSG("If you want to invite a user, use `init(channel:users:)` on `SBUInviteUserViewController` class,\nor if you want to promote a member, use `init(channel:users:)` on `SBUPromoteMemberViewController` class.");
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl users:(NSArray<SBUUser *> * _Nonnull)users type:(enum ChannelInviteListType)type SWIFT_UNAVAILABLE_MSG("If you want to invite a user, use `init(channelUrl:users:)` on `SBUInviteUserViewController` class,\nor if you want to promote a member, use `init(channelUrl:users:)` on `SBUPromoteMemberViewController` class.");
- (void)onClickInviteOrPromote SWIFT_UNAVAILABLE_MSG("If you want to invite a user, use `inviteSelectedUsers()` on `SBUInviteUserViewController` class,\nor if you want to promote a member, use `promoteSelectedMembers()` on `SBUPromoteMemberViewController` class.");
- (void)resetUserList SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUBaseSelectUserViewModel`.", "viewModel.resetUserList()");
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUBaseSelectUserViewModel`.", "viewModel.loadChannel(channelUrl:type:)");
- (void)loadNextUserListWithReset:(BOOL)reset users:(NSArray<SBUUser *> * _Nullable)users SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUBaseSelectUserViewModel`.", "viewModel.loadNextUserList(reset:users:)");
- (void)inviteUsers SWIFT_UNAVAILABLE_MSG("'inviteUsers' has been renamed to 'inviteSelectedUsers()': This function set and renamed on `SBUInviteUserViewController` class.");
- (void)inviteUsersWithUserIds:(NSArray<NSString *> * _Nonnull)userIds SWIFT_UNAVAILABLE_MSG("'inviteUsers' has been renamed to 'viewModel.invite(userIds:)': This function has been moved to the `SBUInviteUserViewModel` class.");
- (void)promoteToOperators SWIFT_UNAVAILABLE_MSG("'promoteToOperators' has been renamed to 'promoteSelectedMembers()': This function set and renamed on `SBUPromoteMemberViewController` class.");
- (void)promoteToOperatorsWithMemberIds:(NSArray<NSString *> * _Nonnull)memberIds SWIFT_UNAVAILABLE_MSG("'promoteToOperators' has been renamed to 'viewModel.promoteToOperators(memberIds:)': This function has been moved to the `SBUPromoteMemberViewModel` class.");
- (void)selectUserWithUser:(SBUUser * _Nonnull)user SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUBaseSelectUserViewModel`.", "viewModel.selectUser(user:)");
- (void)registerWithUserCell:(UITableViewCell * _Nonnull)userCell nib:(UINib * _Nullable)nib SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUBaseSelectUserModule.List`.`", "listComponent.register(userCell:nib:)");
- (void)reloadData SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUBaseSelectUserModule.List`.", "listComponent.reloadTableView()");
- (BOOL)shouldShowLoadingIndicator SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE_MSG("'shouldShowLoadingIndicator' has been renamed to 'shouldUpdateLoadingState:'");
- (void)shouldDismissLoadingIndicator SWIFT_UNAVAILABLE_MSG("'shouldDismissLoadingIndicator' has been renamed to 'shouldUpdateLoadingState:'");
@end


SWIFT_CLASS("_TtC13SendbirdUIKit26SBUBaseSelectUserViewModel")
@interface SBUBaseSelectUserViewModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface SBUBaseViewController (SWIFT_EXTENSION(SendbirdUIKit))
- (void)setupAutolayout SWIFT_UNAVAILABLE_MSG("'setupAutolayout' has been renamed to 'setupLayouts'");
- (void)updateAutolayout SWIFT_UNAVAILABLE_MSG("'updateAutolayout' has been renamed to 'updateLayouts'");
@end


/// A view contains a channel information such as cover image, channel name and info button.
SWIFT_CLASS("_TtC13SendbirdUIKit24SBUChannelInfoHeaderView")
@interface SBUChannelInfoHeaderView : SBUView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupStyles;
- (void)layoutSubviews;
- (void)onClickChannelInfo;
- (void)onClickChannelMembers;
- (void)onClickChannelParticipants;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13SendbirdUIKit33SBUChannelSettingsChannelInfoView")
@interface SBUChannelSettingsChannelInfoView : SBUView
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupStyles;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC13SendbirdUIKit20SBUCommonContentView")
@interface SBUCommonContentView : SBUBaseFileContentView
- (void)setupViews;
- (void)setupLayouts;
- (void)setupStyles;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end

@class UIStackView;
@class SBUSelectableStackView;
@class UILongPressGestureRecognizer;
@class UITapGestureRecognizer;

/// It is a base class used in message cell with contents.
/// since:
/// 1.2.1
SWIFT_CLASS("_TtC13SendbirdUIKit25SBUContentBaseMessageCell")
@interface SBUContentBaseMessageCell : SBUBaseMessageCell
@property (nonatomic, strong) UIView * _Nonnull userNameView;
@property (nonatomic, strong) UIView * _Nonnull profileView;
@property (nonatomic, strong) UIView * _Nonnull stateView;
@property (nonatomic, strong) UIStackView * _Nonnull userNameStackView;
@property (nonatomic, strong) UIStackView * _Nonnull contentHStackView;
@property (nonatomic) BOOL useReaction;
@property (nonatomic) BOOL usingQuotedMessage;
@property (nonatomic, strong) UIStackView * _Nonnull contentVStackView;
@property (nonatomic, strong) UIStackView * _Nonnull messageHStackView;
@property (nonatomic, strong) SBUSelectableStackView * _Nonnull mainContainerView;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupActions;
- (void)setupStyles;
- (void)prepareForReuse;
- (void)setupQuotedMessageView;
- (void)setMessageGrouping;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (void)onLongPressContentViewWithSender:(UILongPressGestureRecognizer * _Nullable)sender;
- (void)onTapContentViewWithSender:(UITapGestureRecognizer * _Nonnull)sender;
- (void)onTapUserProfileViewWithSender:(UITapGestureRecognizer * _Nonnull)sender;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendbirdUIKit17SBUCoverImageView")
@interface SBUCoverImageView : UIView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end


/// This class is used to select the channel type
/// since:
/// 3.0.0
SWIFT_CLASS("_TtC13SendbirdUIKit28SBUCreateChannelTypeSelector")
@interface SBUCreateChannelTypeSelector : SBUView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'CreateChannelTypeSelectView.init(delegate:)'");
- (void)setupViews;
- (void)setupStyles;
- (void)updateStyles;
- (void)setupLayouts;
- (void)onClickClose;
- (void)onClickCreateGroupChannel;
- (void)onClickCreateSuperGroupChannel;
- (void)onClickCreateBroadcastChannel;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class Header;

SWIFT_CLASS("_TtC13SendbirdUIKit30SBUCreateChannelViewController")
@interface SBUCreateChannelViewController : SBUBaseViewController
@property (nonatomic, strong) Header * _Nullable headerComponent;
@property (nonatomic, strong) SBUCreateChannelModuleList * _Nullable listComponent;
@property (nonatomic, readonly) enum ChannelCreationType channelType;
@property (nonatomic, readonly, copy) NSArray<SBUUser *> * _Nonnull userList;
@property (nonatomic, readonly, copy) NSSet<SBUUser *> * _Nonnull selectedUserList;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUCreateChannelViewController(type:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUCreateChannelViewController(type:)'");
/// If you have user objects, use this initialize function.
/// \param users <code>SBUUser</code> array object
///
/// \param type The type of channel to create (default: <code>.group</code>)
///
- (nonnull instancetype)initWithUsers:(NSArray<SBUUser *> * _Nullable)users type:(enum ChannelCreationType)type OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
/// Creates view model.
/// When the creation is completed, the channel load request is automatically executed.
/// \param users (optional) customized users list.
///
/// \param type Invite list type (<code>.users</code> | <code>.operators</code>)
///
- (void)createViewModelWithUsers:(NSArray<SBUUser *> * _Nullable)users type:(enum ChannelCreationType)type;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupStyles;
- (void)updateStyles;
/// This function creates channel using the <code>selectedUserList</code>.
- (void)createChannelWithSelectedUsers;
/// This function dismisses <code>createViewController</code> and moves to created channel.
/// since:
/// 2.2.6
/// \param channel Created channel
///
/// \param messageListParams messageListParams
///
- (void)dismissAndMoveToChannel:(SBDBaseChannel * _Nonnull)channel messageListParams:(SBDMessageListParams * _Nullable)messageListParams;
- (void)createChannelModule:(Header * _Nonnull)headerComponent didUpdateTitleView:(UIView * _Nullable)titleView;
- (void)createChannelModule:(Header * _Nonnull)headerComponent didUpdateLeftItem:(UIBarButtonItem * _Nullable)leftItem;
- (void)createChannelModule:(Header * _Nonnull)headerComponent didUpdateRightItem:(UIBarButtonItem * _Nullable)rightItem;
- (void)createChannelModule:(Header * _Nonnull)headerComponent didTapLeftItem:(UIBarButtonItem * _Nonnull)leftItem;
- (void)createChannelModule:(Header * _Nonnull)headerComponent didTapRightItem:(UIBarButtonItem * _Nonnull)rightItem;
- (NSSet<SBUUser *> * _Nullable)selectedUsersForBaseSelectUserModule:(Header * _Nonnull)headerComponent SWIFT_WARN_UNUSED_RESULT;
- (NSArray<SBUUser *> * _Nullable)baseSelectUserModule:(SBUBaseChannelSettingsModuleList * _Nonnull)listComponent usersInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSSet<SBUUser *> * _Nullable)baseSelectUserModule:(SBUBaseChannelSettingsModuleList * _Nonnull)listComponent selectedUsersInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (void)createChannelModule:(SBUCreateChannelModuleList * _Nonnull)listComponent didSelectRowAt:(NSIndexPath * _Nonnull)indexPath;
- (void)createChannelModule:(SBUCreateChannelModuleList * _Nonnull)listComponent didDetectPreloadingPosition:(NSIndexPath * _Nonnull)indexPath;
- (void)createChannelModuleDidSelectRetry:(SBUCreateChannelModuleList * _Nonnull)listComponent;
- (void)shouldUpdateLoadingState:(BOOL)isLoading;
- (void)didReceiveError:(SBDError * _Nullable)error isBlocker:(BOOL)isBlocker;
- (void)didUpdateSelectedUsers:(NSArray<SBUUser *> * _Nullable)selectedUsers;
@end

@class SBDGroupChannelParams;

@interface SBUCreateChannelViewController (SWIFT_EXTENSION(SendbirdUIKit))
@property (nonatomic, strong) UIView * _Nullable titleView SWIFT_DEPRECATED_MSG("This property has been moved to the SBUCreateChannelModule.Header.", "headerComponent.titleView");
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton SWIFT_DEPRECATED_MSG("This property has been moved to the SBUCreateChannelModule.Header.", "headerComponent.leftBarButton");
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton SWIFT_DEPRECATED_MSG("This property has been moved to the SBUCreateChannelModule.Header.", "headerComponent.rightBarButton");
@property (nonatomic, readonly, strong) UITableView * _Nullable tableView SWIFT_DEPRECATED_MSG("This property has been moved to the SBUCreateChannelModule.List.", "listComponent.tableView");
@property (nonatomic, readonly, strong) UITableViewCell * _Nullable userCell SWIFT_DEPRECATED_MSG("This property has been moved to the SBUCreateChannelModule.List.", "listComponent.userCell");
@property (nonatomic, strong) UIView * _Nullable emptyView SWIFT_DEPRECATED_MSG("This property has been moved to the SBUCreateChannelModule.List.", "listComponent.emptyView");
@property (nonatomic, readonly, strong) SBDApplicationUserListQuery * _Nullable userListQuery SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUCreateChannelViewModel`.", "viewModel.userListQuery");
- (void)reloadData SWIFT_DEPRECATED_MSG("This function has been moved to the SBUCreateChannelModule.List.", "listComponent.reloadTableView()");
- (void)loadNextUserListWithReset:(BOOL)reset users:(NSArray<SBUUser *> * _Nullable)users SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUCreateChannelViewModel`.", "viewModel.loadNextUserList(reset:users:)");
- (void)selectUserWithUser:(SBUUser * _Nonnull)user SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUCreateChannelViewModel`.", "viewModel.selectUser(user:)");
- (void)createChannelWithUserIds:(NSArray<NSString *> * _Nonnull)userIds SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUCreateChannelViewModel`.", "viewModel.createChannel(userIds:)");
- (void)createChannelWithParams:(SBDGroupChannelParams * _Nonnull)params messageListParams:(SBDMessageListParams * _Nullable)messageListParams SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUCreateChannelViewModel`.", "viewModel.createChannel(params:messageListParams:)");
- (void)onClickCreate SWIFT_DEPRECATED_MSG("", "createChannelWithSelectedUsers");
- (NSArray<SBUUser *> * _Nullable)nextUserList SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE_MSG("'nextUserList' has been renamed to 'createChannelViewModel(_:nextUserListForChannelType:)': This function has been moved to the `SBUCreateChannelViewModelDataSource`.");
- (BOOL)shouldShowLoadingIndicator SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE_MSG("'shouldShowLoadingIndicator' has been renamed to 'shouldUpdateLoadingState:'");
- (void)shouldDismissLoadingIndicator SWIFT_UNAVAILABLE_MSG("'shouldDismissLoadingIndicator' has been renamed to 'shouldUpdateLoadingState:'");
- (void)didSelectRetry SWIFT_UNAVAILABLE_MSG("This function has been moved to the SBUCreateChannelModule.List.");
- (void)showLoadingWithState:(BOOL)state SWIFT_DEPRECATED_MSG("", "showLoading:");
- (void)registerWithUserCell:(UITableViewCell * _Nonnull)userCell nib:(UINib * _Nullable)nib SWIFT_DEPRECATED_MSG("This function has been moved to the SBUCreateChannelModule.List.`", "listComponent.register(userCell:nib:)");
- (void)reloadUserList SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUCreateChannelViewModel`.", "listComponent.reloadTableView()");
@end


SWIFT_CLASS("_TtC13SendbirdUIKit12SBUEmptyView")
@interface SBUEmptyView : SBUView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupStyles;
/// This function actions when the retry button click.
/// \param sender sender
///
- (void)onClickRetry:(id _Nonnull)sender;
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendbirdUIKit18SBUFileMessageCell")
@interface SBUFileMessageCell : SBUContentBaseMessageCell
@property (nonatomic, readonly, strong) SBDFileMessage * _Nullable fileMessage;
- (void)setupViews;
- (void)setupStyles;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImageView;
@class UIButton;
@class SBUStackView;

/// <code>UITableViewCell</code> of the table view that represents the list of group channels.
SWIFT_CLASS("_TtC13SendbirdUIKit19SBUGroupChannelCell")
@interface SBUGroupChannelCell : SBUBaseChannelCell
/// The image view that shows the channel cover image.
@property (nonatomic, strong) SBUCoverImageView * _Nonnull coverImage;
/// The label that represents the channel name.
@property (nonatomic, strong) UILabel * _Nonnull titleLabel;
/// The image view that shows the broadcast icon.
@property (nonatomic, strong) UIImageView * _Nonnull broadcastIcon;
/// The label that represents the number of members in the channel.
@property (nonatomic, strong) UILabel * _Nonnull memberCountLabel;
/// The image view that indicates the freezing state of the channel.
@property (nonatomic, strong) UIImageView * _Nonnull freezeState;
/// The image view that indicates the notification state of the channel.
@property (nonatomic, strong) UIImageView * _Nonnull notificationState;
/// The label that represents the time when the channel is updated last. e.g. the time when the last message was sent at.
@property (nonatomic, strong) UILabel * _Nonnull lastUpdatedTimeLabel;
/// The label that shows the last message in up to 2 lines of text.
@property (nonatomic, strong) UILabel * _Nonnull messageLabel;
/// The button that shows the number of the unread messages.
@property (nonatomic, strong) UIButton * _Nonnull unreadCount;
/// The image view that represents read/delivery receipt state of the last message that was sent by the current user.
@property (nonatomic, strong) UIImageView * _Nonnull stateImageView;
/// A view that is used as a separator between the channel cells.
@property (nonatomic, strong) UIView * _Nonnull separatorLine;
/// A spacer used in <code>titleStackView</code> to provide spacing between <code>titleLabel</code> and <code>lastUpdatedTimeLabel</code>.
@property (nonatomic, readonly, strong) UIView * _Nonnull titleSpacer;
/// A spacer used in <code>messageStackView</code> to provide spacing between <code>messageLabel</code> and <code>unreadCount</code>.
@property (nonatomic, readonly, strong) UIView * _Nonnull messageSpacer;
/// A value used in the size of <code>coverImage</code>.
@property (nonatomic, readonly) CGFloat coverImageSize;
/// A value used in the height of <code>unreadCount</code>.
@property (nonatomic, readonly) CGFloat unreadCountSize;
/// A value used in the size of icon image views.
@property (nonatomic, readonly) CGFloat infoIconSize;
@property (nonatomic, readonly) CGFloat kCoverImageSize SWIFT_DEPRECATED_MSG("", "coverImageSize");
@property (nonatomic, readonly) CGFloat kUnreadCountSize SWIFT_DEPRECATED_MSG("", "unreadCountSize");
@property (nonatomic, readonly) CGFloat kInfoIconSize SWIFT_DEPRECATED_MSG("", "infoIconSize");
@property (nonatomic, readonly) CGFloat kSideMarging SWIFT_UNAVAILABLE_MSG("'kSideMarging' has been renamed to 'sideMarging'");
/// A horizontal stack view to configure layouts of the entire view properties.
@property (nonatomic, strong) SBUStackView * _Nonnull contentStackView;
/// A vertical stack view to configure layouts of labels and icons that represent the channel information.
@property (nonatomic, strong) SBUStackView * _Nonnull infoStackView;
/// A horizontal stack view to configure layouts of the <code>titleLabel</code>, <code>lastUpdatedTimeLabel</code> and icons.
@property (nonatomic, strong) SBUStackView * _Nonnull titleStackView;
/// A horizontal stack view to configure layouts of the <code>messageLabel</code> and the <code>unreadCount</code>.
@property (nonatomic, strong) SBUStackView * _Nonnull messageStackView;
- (void)awakeFromNib;
/// This function handles the initialization of views.
- (void)setupViews;
/// This function handles the initialization of actions.
- (void)setupActions;
/// This function handles the initialization of autolayouts.
- (void)setupLayouts;
/// This function handles the initialization of styles.
- (void)setupStyles;
- (void)layoutSubviews;
/// This function configure a cell using <code>SBDGroupChannel</code> information.
/// note:
/// If you use <code>SBDOpenChannel</code>, your cell class must inherit <code>SBUBaseChannelCell</code> and override <code>configure(channel:)</code> method.
/// \param channel <code>SBDGroupChannel</code> object
///
- (void)configureWithChannel:(SBDBaseChannel * _Nonnull)channel;
/// Updates message label when someone is typing. To show typing indicator, set <code>SBUGlobals.isChannelListTypingIndicatorEnabled</code> to <code>true</code>.
- (void)updateMessageLabel;
/// Updates the image view that represents read/delivery receipt state. The image view is displayed when the last message was sent by the current user. To show the state image view, set <code>SBUGlobals.isChannelListMessageReceiptStateEnabled</code> to <code>true</code>.
/// note:
/// As a default, the <em>super</em> and the <em>broadcast</em> group channel are not supported.
- (void)updateStateImageView;
/// This function builds last message updated date.
///
/// returns:
/// last updated date string
- (NSString * _Nullable)buildLastUpdatedDate SWIFT_WARN_UNUSED_RESULT;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (void)prepareForReuse;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class Header;
@class SBUGroupChannelListViewModel;
@class SBDGroupChannelListQuery;

SWIFT_CLASS("_TtC13SendbirdUIKit33SBUGroupChannelListViewController")
@interface SBUGroupChannelListViewController : SBUBaseChannelListViewController
@property (nonatomic, strong) Header * _Nullable headerComponent;
@property (nonatomic, strong) SBUGroupChannelListModuleList * _Nullable listComponent;
@property (nonatomic, strong) UIView * _Nullable createChannelTypeSelector;
@property (nonatomic, strong) SBUGroupChannelListViewModel * _Nullable viewModel;
/// This object has a list of all channels.
@property (nonatomic, readonly, copy) NSArray<SBDGroupChannel *> * _Nonnull channelList;
/// This is a property that allows you to show the channel type selector when creating a channel. (default: <code>true</code>)
/// since:
/// 3.0.0
@property (nonatomic) BOOL enableCreateChannelTypeSelector;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUGroupChannelListViewController()'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUGroupChannelListViewController()'");
/// This function initialize the class without <code>channelListQuery</code>.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// You can initialize the class through this function.
/// If you have <code>channelListQuery</code>, please set it. If not set, it is used as default value.
/// See the example below for query generation.
/// \code
///     let query = SBDGroupChannel.createMyGroupChannelListQuery()
///     query?.includeEmptyChannel = false
///     query?.includeFrozenChannel = true
///     ...
///
/// \endcodesince:
/// 1.0.11
/// \param channelListQuery Your own <code>SBDGroupChannelListQuery</code> object
///
- (nonnull instancetype)initWithChannelListQuery:(SBDGroupChannelListQuery * _Nullable)channelListQuery OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
/// Creates the view model.
/// since:
/// [3.0.0
/// \param channelListQuery Customer’s own <code>SBDGroupChannelListQuery</code> object
///
- (void)createViewModelWithChannelListQuery:(SBDGroupChannelListQuery * _Nullable)channelListQuery;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupStyles;
- (void)updateStyles;
- (void)loadChannelTypeSelector;
/// This is a function that shows the channelViewController.
/// If you want to use a custom channelViewController, override it and implement it.
/// \param channelUrl channel url for use in channelViewController.
///
/// \param messageListParams If there is a messageListParams set directly for use in Channel, set it up here
///
- (void)showChannelWithChannelUrl:(NSString * _Nonnull)channelUrl messageListParams:(SBDMessageListParams * _Nullable)messageListParams;
/// This is a function that shows the channel type selector when a supergroup/broadcast channel can be set.
/// If it cannot be set, this function shows the channel creation screen.
/// since:
/// 3.0.0
- (void)showCreateChannelOrTypeSelector;
/// This is a function that shows the channel type selector when a supergroup/broadcast channel can be set.
/// <ul>
///   <li>
///     If you want to use a custom <code>createChannelTypeSelector</code>, override it and implement it.
///   </li>
/// </ul>
/// note:
/// Type: GroupChannel / SuperGroupChannel / BroadcastChannel
/// since:
/// 1.2.0
- (void)showCreateChannelTypeSelector;
/// This is a function that shows the channel creation viewController with channel type.
/// If you want to use a custom createChannelViewController, override it and implement it.
/// \param type Using the Specified Type in CreateChannelViewController (default: <code>.group</code>)
///
- (void)showCreateChannelWithType:(enum ChannelCreationType)type;
- (void)channelListModule:(Header * _Nonnull)headerComponent didUpdateTitleView:(UIView * _Nullable)titleView;
- (void)channelListModule:(Header * _Nonnull)headerComponent didUpdateLeftItem:(UIBarButtonItem * _Nullable)leftItem;
- (void)channelListModule:(Header * _Nonnull)headerComponent didUpdateRightItem:(UIBarButtonItem * _Nullable)rightItem;
- (void)channelListModule:(Header * _Nonnull)headerComponent didTapLeftItem:(UIBarButtonItem * _Nonnull)leftItem;
- (void)channelListModule:(Header * _Nonnull)headerComponent didTapRightItem:(UIBarButtonItem * _Nonnull)rightItem;
- (void)channelListModule:(SBUGroupChannelListModuleList * _Nonnull)listComponent didSelectRowAt:(NSIndexPath * _Nonnull)indexPath;
- (void)channelListModule:(SBUGroupChannelListModuleList * _Nonnull)listComponent didSelectLeave:(SBDGroupChannel * _Nonnull)channel;
- (void)channelListModule:(SBUGroupChannelListModuleList * _Nonnull)listComponent didChangePushTriggerOption:(SBDGroupChannelPushTriggerOption)option channel:(SBDGroupChannel * _Nonnull)channel;
- (void)channelListModule:(SBUGroupChannelListModuleList * _Nonnull)listComponent didDetectPreloadingPosition:(NSIndexPath * _Nonnull)indexPath;
- (void)channelListModuleDidSelectRetry:(SBUGroupChannelListModuleList * _Nonnull)listComponent;
- (NSArray<SBDGroupChannel *> * _Nullable)channelListModule:(SBUGroupChannelListModuleList * _Nonnull)listComponent channelsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (void)didSelectCloseSelector;
- (void)didSelectCreateGroupChannel;
- (void)didSelectCreateSuperGroupChannel;
- (void)didSelectCreateBroadcastChannel;
- (void)connectionStateDidChange:(BOOL)isConnected;
- (void)shouldUpdateLoadingState:(BOOL)isLoading;
- (void)didReceiveError:(SBDError * _Nullable)error isBlocker:(BOOL)isBlocker;
- (void)groupChannelListViewModel:(SBUGroupChannelListViewModel * _Nonnull)viewModel didChangeChannelList:(NSArray<SBDGroupChannel *> * _Nullable)channels needsToReload:(BOOL)needsToReload;
- (void)groupChannelListViewModel:(SBUGroupChannelListViewModel * _Nonnull)viewModel didUpdateChannel:(SBDGroupChannel * _Nonnull)channel;
- (void)groupChannelListViewModel:(SBUGroupChannelListViewModel * _Nonnull)viewModel didLeaveChannel:(SBDGroupChannel * _Nonnull)channel;
@end


@interface SBUGroupChannelListViewController (SWIFT_EXTENSION(SendbirdUIKit))
@property (nonatomic, strong) UIView * _Nullable titleView SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUGroupChannelListModule.Header`.", "headerComponent.titleView");
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUGroupChannelListModule.Header`.", "headerComponent.leftBarButton");
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUGroupChannelListModule.Header`.", "headerComponent.rightBarButton");
@property (nonatomic, readonly, strong) UITableView * _Nullable tableView SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUGroupChannelListModule.List`.", "listComponent.tableView");
@property (nonatomic, readonly, strong) SBUBaseChannelCell * _Nullable channelCell SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUGroupChannelListModule.List`.", "listComponent.channelCell");
@property (nonatomic, readonly, strong) SBUBaseChannelCell * _Nullable customCell SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUGroupChannelListModule.List`.", "listComponent.customCell");
@property (nonatomic, strong) UIView * _Nullable emptyView SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUGroupChannelListModule.List`.", "listComponent.emptyView");
@property (nonatomic, readonly, strong) SBDGroupChannelListQuery * _Nullable channelListQuery SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUGroupChannelListViewModel`.", "viewModel.channelListQuery");
@property (nonatomic, readonly) BOOL isLoading SWIFT_UNAVAILABLE_MSG("Since it automatically manages internally, it is no longer necessary.");
@property (nonatomic, readonly) int64_t lastUpdatedTimestamp SWIFT_UNAVAILABLE_MSG("Since it automatically manages internally, it is no longer necessary.");
@property (nonatomic, readonly, copy) NSString * _Nullable lastUpdatedToken SWIFT_UNAVAILABLE_MSG("Since it automatically manages internally, it is no longer necessary.");
@property (nonatomic, readonly) NSUInteger limit SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUGroupChannelListViewModel`.", "SBUGroupChannelListViewModel.channelLoadLimit");
@property (nonatomic, readonly) BOOL includeEmptyChannel SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUGroupChannelListViewModel`.", "viewModel.channelListQuery.includeEmptyChannel");
- (void)initChannelList SWIFT_METHOD_FAMILY(none) SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUGroupChannelListViewModel`.", "viewModel.initChannelList()");
- (void)changePushTriggerOptionWithOption:(SBDGroupChannelPushTriggerOption)option channel:(SBDGroupChannel * _Nonnull)channel completionHandler:(void (^ _Nullable)(BOOL))completionHandler SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUGroupChannelListViewModel`.", "viewModel.changePushTriggerOption(option:channel:completionHandler:)");
- (void)leaveChannel:(SBDGroupChannel * _Nonnull)channel completionHandler:(void (^ _Nullable)(BOOL))completionHandler SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUGroupChannelListViewModel`.", "viewModel.leaveChannel(_:completionHandler:)");
- (void)resetChannelList SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUGroupChannelListViewModel`.", "viewModel.reset()");
- (void)loadNextChannelListWithReset:(BOOL)reset SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUGroupChannelListViewModel`.", "viewModel.loadNextChannelList(reset:)");
- (void)sortChannelListWithNeedReload:(BOOL)needReload SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUGroupChannelListViewModel`.", "viewModel.sortChannelList(needReload:)");
- (void)updateChannels:(NSArray<SBDGroupChannel *> * _Nullable)channels needReload:(BOOL)needReload SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUGroupChannelListViewModel`.", "viewModel.updateChannels(_:needReload:)");
- (void)upsertChannels:(NSArray<SBDGroupChannel *> * _Nullable)channels needReload:(BOOL)needReload SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUGroupChannelListViewModel`.", "viewModel.upsertChannels(_:needReload:)");
- (void)deleteChannelsWithChannelUrls:(NSArray<NSString *> * _Nullable)channelUrls needReload:(BOOL)needReload SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUGroupChannelListViewModel`.", "viewModel.deleteChannels(_:needReload:)");
- (void)registerWithChannelCell:(SBUBaseChannelCell * _Nonnull)channelCell nib:(UINib * _Nullable)nib SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUGroupChannelListModule.List`.`", "listComponent.register(channelCell:nib:)");
- (void)registerWithCustomCell:(SBUBaseChannelCell * _Nullable)customCell nib:(UINib * _Nullable)nib SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUGroupChannelListModule.List`.`", "listComponent.register(customCell:nib:)");
- (void)reloadTableView SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUGroupChannelListModule.List`.", "listComponent.reloadTableView()");
- (void)setLoading:(BOOL)loadingState :(BOOL)showIndicator SWIFT_DEPRECATED_MSG("", "showLoading:");
- (BOOL)shouldShowLoadingIndicator SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE_MSG("'shouldShowLoadingIndicator' has been renamed to 'shouldUpdateLoadingState:'");
- (void)shouldDismissLoadingIndicator SWIFT_UNAVAILABLE_MSG("'shouldDismissLoadingIndicator' has been renamed to 'shouldUpdateLoadingState:'");
- (void)didSelectRetry SWIFT_UNAVAILABLE_MSG("This function has been moved to the `SBUGroupChannelListModule.List`.");
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidJoin:(SBDUser * _Nonnull)user SWIFT_UNAVAILABLE_MSG("Since it automatically detects channel changes internally, it is no longer necessary to use this function.");
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidLeave:(SBDUser * _Nonnull)user SWIFT_UNAVAILABLE_MSG("Since it automatically detects channel changes internally, it is no longer necessary to use this function.");
- (void)channelWasChanged:(SBDBaseChannel * _Nonnull)sender SWIFT_UNAVAILABLE_MSG("Since it automatically detects channel changes internally, it is no longer necessary to use this function.");
- (void)channel:(SBDBaseChannel * _Nonnull)sender messageWasDeleted:(int64_t)messageId SWIFT_UNAVAILABLE_MSG("Since it automatically detects channel changes internally, it is no longer necessary to use this function.");
- (void)channelWasFrozen:(SBDBaseChannel * _Nonnull)sender SWIFT_UNAVAILABLE_MSG("Since it automatically detects channel changes internally, it is no longer necessary to use this function.");
- (void)channelWasUnfrozen:(SBDBaseChannel * _Nonnull)sender SWIFT_UNAVAILABLE_MSG("Since it automatically detects channel changes internally, it is no longer necessary to use this function.");
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasBanned:(SBDUser * _Nonnull)user SWIFT_UNAVAILABLE_MSG("Since it automatically detects channel changes internally, it is no longer necessary to use this function.");
- (void)didSucceedReconnection SWIFT_UNAVAILABLE_MSG("Since it automatically detects channel changes internally, it is no longer necessary to use this function.");
- (void)channelListDidChange:(NSArray<SBDGroupChannel *> * _Nullable)channels needToReload:(BOOL)needToReload SWIFT_UNAVAILABLE_MSG("Use `SBUGroupChannelListViewModel groupChannelListViewModel(_:didChangeChannelList:needsToReload:)` instead.");
- (void)channelDidUpdate:(SBDGroupChannel * _Nonnull)channel SWIFT_UNAVAILABLE_MSG("Use `SBUGroupChannelListViewModel groupChannelListViewModel(_:didUpdateChannel:)` instead.");
- (void)channelDidLeave:(SBDGroupChannel * _Nonnull)channel SWIFT_UNAVAILABLE_MSG("Use `SBUGroupChannelListViewModel groupChannelListViewModel(_:didLeaveChannel:)` instead.");
- (void)loadChannelChangeLogsWithHasMore:(BOOL)hasMore token:(NSString * _Nullable)token SWIFT_UNAVAILABLE_MSG("Since it automatically detects channel changes internally, it is no longer necessary to use this function.");
@end


SWIFT_CLASS("_TtC13SendbirdUIKit28SBUGroupChannelListViewModel")
@interface SBUGroupChannelListViewModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface SBUGroupChannelListViewModel (SWIFT_EXTENSION(SendbirdUIKit)) <SBDConnectionDelegate>
- (void)didSucceedReconnection;
@end

@class SBDGroupChannelCollection;
@class SBDChannelContext;

@interface SBUGroupChannelListViewModel (SWIFT_EXTENSION(SendbirdUIKit)) <SBDGroupChannelCollectionDelegate>
- (void)channelCollection:(SBDGroupChannelCollection * _Nonnull)collection context:(SBDChannelContext * _Nonnull)context deletedChannelUrls:(NSArray<NSString *> * _Nonnull)deletedChannelUrls;
- (void)channelCollection:(SBDGroupChannelCollection * _Nonnull)collection context:(SBDChannelContext * _Nonnull)context addedChannels:(NSArray<SBDGroupChannel *> * _Nonnull)channels;
- (void)channelCollection:(SBDGroupChannelCollection * _Nonnull)collection context:(SBDChannelContext * _Nonnull)context updatedChannels:(NSArray<SBDGroupChannel *> * _Nonnull)channels;
@end


@interface SBUGroupChannelListViewModel (SWIFT_EXTENSION(SendbirdUIKit)) <SBDChannelDelegate>
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidJoin:(SBDUser * _Nonnull)user;
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidLeave:(SBDUser * _Nonnull)user;
- (void)channelWasChanged:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender messageWasDeleted:(int64_t)messageId;
- (void)channelWasFrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channelWasUnfrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasBanned:(SBDUser * _Nonnull)user;
@end

@class Header;
@class SBUGroupChannelSettingsViewModel;

SWIFT_CLASS("_TtC13SendbirdUIKit37SBUGroupChannelSettingsViewController")
@interface SBUGroupChannelSettingsViewController : SBUBaseChannelSettingsViewController
@property (nonatomic, strong) Header * _Nullable headerComponent;
@property (nonatomic, strong) SBUGroupChannelSettingsModuleList * _Nullable listComponent;
@property (nonatomic, strong) SBUGroupChannelSettingsViewModel * _Nullable viewModel;
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUGroupChannelSettingsViewController(channelUrl:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUGroupChannelSettingsViewController(channelUrl:)'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl OBJC_DESIGNATED_INITIALIZER;
- (void)createViewModelWithChannel:(SBDBaseChannel * _Nullable)channel channelUrl:(NSString * _Nullable)channelUrl;
- (void)setupViews;
/// If you want to use a custom moderationsViewController, override it and implement it.
/// since:
/// 1.2.0
- (void)showModerationList;
- (void)groupChannelSettingsModule:(Header * _Nonnull)headerComponent didUpdateTitleView:(UIView * _Nullable)titleView;
- (void)groupChannelSettingsModule:(Header * _Nonnull)headerComponent didUpdateLeftItem:(UIBarButtonItem * _Nullable)leftItem;
- (void)groupChannelSettingsModule:(Header * _Nonnull)headerComponent didUpdateRightItem:(UIBarButtonItem * _Nullable)rightItem;
- (void)groupChannelSettingsModule:(Header * _Nonnull)headerComponent didTapLeftItem:(UIBarButtonItem * _Nonnull)leftItem;
- (void)groupChannelSettingsModule:(Header * _Nonnull)headerComponent didTapRightItem:(UIBarButtonItem * _Nonnull)rightItem;
- (NSString * _Nullable)groupChannelSettingsModule:(Header * _Nonnull)headerComponent channelNameForTitleView:(UIView * _Nullable)titleView SWIFT_WARN_UNUSED_RESULT;
- (void)groupChannelSettingsModule:(SBUGroupChannelSettingsModuleList * _Nonnull)listComponent didSelectRowAt:(NSIndexPath * _Nonnull)indexPath;
- (void)groupChannelSettingsModule:(SBUGroupChannelSettingsModuleList * _Nonnull)listComponent didChangeNotification:(BOOL)state;
- (SBDBaseChannel * _Nullable)baseChannelSettingsModule:(List * _Nonnull)listComponent channelForTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (BOOL)baseChannelSettingsModuleIsOperator:(List * _Nonnull)listComponent SWIFT_WARN_UNUSED_RESULT;
- (void)baseChannelSettingsViewModel:(SBUBaseChannelSettingsViewModel * _Nonnull)viewModel didChangeChannel:(SBDBaseChannel * _Nullable)channel withContext:(SBDMessageContext * _Nonnull)context;
- (void)groupChannelSettingsViewModel:(SBUGroupChannelSettingsViewModel * _Nonnull)viewModel didLeaveChannel:(SBDGroupChannel * _Nonnull)channel;
@end


@interface SBUGroupChannelSettingsViewController (SWIFT_EXTENSION(SendbirdUIKit))
- (void)updateChannelWithParams:(SBDGroupChannelParams * _Nonnull)params SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUGroupChannelSettingsViewModel`.", "viewModel.updateChannel(params:)");
- (void)changeNotificationWithIsOn:(BOOL)isOn SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUGroupChannelSettingsViewModel`.", "viewModel.changeNotification(isOn:)");
- (void)leaveChannel SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUGroupChannelSettingsViewModel`.", "viewModel.leaveChannel()");
- (void)updateChannelInfoWithChannelName:(NSString * _Nullable)channelName SWIFT_DEPRECATED_MSG("", "updateChannelWithChannelName:coverImage:");
@end


SWIFT_CLASS("_TtC13SendbirdUIKit32SBUGroupChannelSettingsViewModel")
@interface SBUGroupChannelSettingsViewModel : SBUBaseChannelSettingsViewModel
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class Header;
@class Input;
@class SBUGroupChannelViewModel;

SWIFT_CLASS("_TtC13SendbirdUIKit29SBUGroupChannelViewController")
@interface SBUGroupChannelViewController : SBUBaseChannelViewController
@property (nonatomic, strong) Header * _Nullable headerComponent;
@property (nonatomic, strong) SBUGroupChannelModuleList * _Nullable listComponent;
@property (nonatomic, strong) Input * _Nullable inputComponent;
@property (nonatomic, strong) SBUGroupChannelViewModel * _Nullable viewModel;
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
@property (nonatomic, readonly) NSInteger newMessagesCount;
/// If you have channel object, use this initialize function. And, if you have own message list params, please set it. If not set, it is used as the default value.
/// See the example below for params generation.
/// \code
///     let params = SBDMessageListParams()
///     params.includeMetaArray = true
///     params.includeReactions = true
///     params.includeThreadInfo = true
///     ...
///
/// \endcodenote:
/// The <code>reverse</code> and the <code>previousResultSize</code> properties in the <code>SBDMessageListParams</code> are set in the UIKit. Even though you set that property it will be ignored.
/// since:
/// 1.0.11
/// \param channel Channel object
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel messageListParams:(SBDMessageListParams * _Nullable)messageListParams OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl startingPoint:(int64_t)startingPoint messageListParams:(SBDMessageListParams * _Nullable)messageListParams OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupStyles;
- (void)updateStyles;
/// This function increases the new message count.
- (BOOL)increaseNewMessageCount;
/// This function calculates the point at which to draw the menu.
/// since:
/// 1.2.5
/// \param indexPath IndexPath
///
/// \param position Message position
///
///
/// returns:
/// <code>CGPoint</code> value
- (CGPoint)calculatorMenuPointWithIndexPath:(NSIndexPath * _Nonnull)indexPath position:(enum MessagePosition)position SWIFT_WARN_UNUSED_RESULT;
- (void)showChannelSettings;
- (void)baseChannelViewModel:(SBUBaseChannelViewModel * _Nonnull)viewModel didChangeChannel:(SBDBaseChannel * _Nullable)channel withContext:(SBDMessageContext * _Nonnull)context;
- (void)baseChannelModule:(Header * _Nonnull)headerComponent didTapLeftItem:(UIBarButtonItem * _Nonnull)leftItem;
- (void)baseChannelModule:(Header * _Nonnull)headerComponent didTapRightItem:(UIBarButtonItem * _Nonnull)rightItem;
- (void)groupChannelModule:(SBUGroupChannelModuleList * _Nonnull)listComponent didTapEmoji:(NSString * _Nonnull)emojiKey messageCell:(SBUBaseMessageCell * _Nonnull)messageCell;
- (void)groupChannelModule:(SBUGroupChannelModuleList * _Nonnull)listComponent didLongTapEmoji:(NSString * _Nonnull)emojiKey messageCell:(SBUBaseMessageCell * _Nonnull)messageCell;
- (void)groupChannelModule:(SBUGroupChannelModuleList * _Nonnull)listComponent didTapMoreEmojiForCell:(SBUBaseMessageCell * _Nonnull)messageCell;
- (void)groupChannelModule:(SBUGroupChannelModuleList * _Nonnull)listComponent didTapQuotedMessageView:(SBUQuotedBaseMessageView * _Nonnull)quotedMessageView;
- (void)baseChannelModuleDidTapScrollToButton:(SBUBaseChannelModuleList * _Nonnull)listComponent animated:(BOOL)animated;
- (void)baseChannelModule:(SBUBaseChannelModuleList * _Nonnull)listComponent didScroll:(UIScrollView * _Nonnull)scrollView;
- (void)baseChannelModule:(Input * _Nonnull)inputComponent didUpdateFrozenState:(BOOL)isFrozen;
- (void)groupChannelModule:(Input * _Nonnull)inputComponent didPickFileData:(NSData * _Nullable)fileData fileName:(NSString * _Nonnull)fileName mimeType:(NSString * _Nonnull)mimeType parentMessage:(SBDBaseMessage * _Nullable)parentMessage;
- (void)baseChannelModuleDidStartTyping:(Input * _Nonnull)inputComponent;
- (void)baseChannelModuleDidEndTyping:(Input * _Nonnull)inputComponent;
- (NSArray<NSIndexPath *> * _Nullable)groupChannelViewModel:(SBUGroupChannelViewModel * _Nonnull)viewModel startingPointIndexPathsForChannel:(SBDGroupChannel * _Nullable)channel SWIFT_WARN_UNUSED_RESULT;
@end


@interface SBUGroupChannelViewController (SWIFT_EXTENSION(SendbirdUIKit))
- (void)onClickScrollBottomWithSender:(UIButton * _Nullable)sender SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelModuleListDelegate` and replaced to  `baseChannelModuleDidTapScrollToButton(_:animated:).`");
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUGroupChannelModule.List`.");
- (void)channel:(SBDBaseChannel * _Nonnull)sender updatedReaction:(SBDReactionEvent * _Nonnull)reactionEvent SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUGroupChannelViewModelDelegate` and replaced to  `baseChannelViewModel(_:didChangeChannel:withContext:)`");
- (void)channelDidUpdateReadReceipt:(SBDGroupChannel * _Nonnull)sender SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUGroupChannelViewModelDelegate` and replaced to  `baseChannelViewModel(_:didChangeChannel:withContext:)`");
- (void)channelDidUpdateDeliveryReceipt:(SBDGroupChannel * _Nonnull)sender SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUGroupChannelViewModelDelegate` and replaced to  `baseChannelViewModel(_:didChangeChannel:withContext:)`");
- (void)channelDidUpdateTypingStatus:(SBDGroupChannel * _Nonnull)sender SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUGroupChannelViewModelDelegate` and replaced to  `baseChannelViewModel(_:didChangeChannel:withContext:)`");
@property (nonatomic, readonly, copy) NSDictionary<NSString *, SBDBaseMessage *> * _Nonnull preSendMessages SWIFT_UNAVAILABLE_MSG("deprecated in 1.2.10");
@property (nonatomic, readonly, copy) NSDictionary<NSString *, SBDBaseMessage *> * _Nonnull resendableMessages SWIFT_UNAVAILABLE_MSG("deprecated in 1.2.10");
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSDictionary<NSString *, id> *> * _Nonnull preSendFileData SWIFT_UNAVAILABLE_MSG("deprecated in 1.2.10");
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSDictionary<NSString *, id> *> * _Nonnull resendableFileData SWIFT_UNAVAILABLE_MSG("deprecated in 1.2.10");
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSNumber *> * _Nonnull fileTransferProgress SWIFT_UNAVAILABLE_MSG("deprecated in 1.2.10");
- (void)setTapEmojiGestureHandler:(SBUBaseMessageCell * _Nonnull)cell emojiKey:(NSString * _Nonnull)emojiKey SWIFT_UNAVAILABLE_MSG("'setTapEmojiGestureHandler' has been renamed to 'setEmojiTapGestureHandler:emojiKey:': deprecated in 1.2.2");
- (void)setLongTapEmojiGestureHandler:(SBUBaseMessageCell * _Nonnull)cell emojiKey:(NSString * _Nonnull)emojiKey SWIFT_UNAVAILABLE_MSG("'setLongTapEmojiGestureHandler' has been renamed to 'setEmojiLongTapGestureHandler:emojiKey:': deprecated in 1.2.2");
@end

@class SBUUserMessageCell;
@class SBUUnknownMessageCell;

@interface SBUGroupChannelViewController (SWIFT_EXTENSION(SendbirdUIKit))
@property (nonatomic, readonly, strong) SBUBaseMessageCell * _Nullable adminMessageCell SWIFT_DEPRECATED_MSG("This property has been moved to `SBUGroupChannelModule.List`.", "listComponent.adminMessageCell");
@property (nonatomic, readonly, strong) SBUBaseMessageCell * _Nullable userMessageCell SWIFT_DEPRECATED_MSG("This property has been moved to `SBUGroupChannelModule.List`.", "listComponent.userMessageCell");
@property (nonatomic, readonly, strong) SBUBaseMessageCell * _Nullable fileMessageCell SWIFT_DEPRECATED_MSG("This property has been moved to `SBUGroupChannelModule.List`.", "listComponent.fileMessageCell");
@property (nonatomic, readonly, strong) SBUBaseMessageCell * _Nullable customMessageCell SWIFT_DEPRECATED_MSG("This property has been moved to `SBUGroupChannelModule.List`.", "listComponent.customMessageCell");
@property (nonatomic, readonly, strong) SBUBaseMessageCell * _Nullable unknownMessageCell SWIFT_DEPRECATED_MSG("This property has been moved to `SBUGroupChannelModule.List`.", "listComponent.unknownMessageCell");
- (void)registerWithAdminMessageCell:(SBUBaseMessageCell * _Nonnull)adminMessageCell nib:(UINib * _Nullable)nib SWIFT_DEPRECATED_MSG("This function has been moved to `SBUGroupChannelModule.List`.", "listComponent.register(adminMessageCell:nib:)");
- (void)registerWithUserMessageCell:(SBUBaseMessageCell * _Nonnull)userMessageCell nib:(UINib * _Nullable)nib SWIFT_DEPRECATED_MSG("This function has been moved to `SBUGroupChannelModule.List`.", "listComponent.register(userMessageCell:nib:)");
- (void)registerWithFileMessageCell:(SBUBaseMessageCell * _Nonnull)fileMessageCell nib:(UINib * _Nullable)nib SWIFT_DEPRECATED_MSG("Use `This function has been moved to `SBUGroupChannelModule.List`.", "listComponent.register(fileMessageCell:nib:)");
- (void)registerWithCustomMessageCell:(SBUBaseMessageCell * _Nullable)customMessageCell nib:(UINib * _Nullable)nib SWIFT_DEPRECATED_MSG("This function has been moved to `SBUGroupChannelModule.List`", "listComponent.register(customMessageCell:nib:)");
- (NSString * _Nonnull)generateCellIdentifierBy:(SBDBaseMessage * _Nonnull)message SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("This function has been moved to `SBUGroupChannelModule.List`.", "listComponent.generateCellIdentifier(by:)");
- (void)setEmojiTapGestureHandler:(SBUBaseMessageCell * _Nonnull)cell emojiKey:(NSString * _Nonnull)emojiKey SWIFT_DEPRECATED_MSG("This function has been moved to `SBUGroupChannelModuleListDelegate`. Use `channelModule(_:didTapEmoji:messageCell:)` of `SBUGroupChannelModuleListDelegate`  instead.");
- (void)setEmojiLongTapGestureHandler:(SBUBaseMessageCell * _Nonnull)cell emojiKey:(NSString * _Nonnull)emojiKey SWIFT_DEPRECATED_MSG("This function has been moved to `SBUGroupChannelModuleListDelegate`. Use `channelModule(_:didLongTapEmoji:messageCell:)` of `SBUGroupChannelModuleListDelegate`  instead.");
- (void)setUserMessageCellGestures:(SBUUserMessageCell * _Nonnull)cell userMessage:(SBDUserMessage * _Nonnull)userMessage indexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_DEPRECATED_MSG("This function has been moved to `SBUGroupChannelModule.List` and replaced to `setMessageCellGestures(_:message:indexPath:)`.", "listComponent.setMessageCellGestures(_:message:indexPath:)");
- (void)setFileMessageCellGestures:(SBUFileMessageCell * _Nonnull)cell fileMessage:(SBDFileMessage * _Nonnull)fileMessage indexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_DEPRECATED_MSG("This function has been moved to `SBUGroupChannelModule.List` and replaced to `setMessageCellGestures(_:message:indexPath:)`.", "listComponent.setMessageCellGestures(_:message:indexPath:)");
- (void)setUnkownMessageCellGestures:(SBUUnknownMessageCell * _Nonnull)cell unknownMessage:(SBDBaseMessage * _Nonnull)unknownMessage indexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_DEPRECATED_MSG("This function has been moved to `SBUGroupChannelModule.List` and replaced to `setMessageCellGestures(_:message:indexPath:)`.", "listComponent.setMessageCellGestures(_:message:indexPath:)");
@end


SWIFT_CLASS("_TtC13SendbirdUIKit24SBUGroupChannelViewModel")
@interface SBUGroupChannelViewModel : SBUBaseChannelViewModel
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface SBUGroupChannelViewModel (SWIFT_EXTENSION(SendbirdUIKit))
- (void)channel:(SBDBaseChannel * _Nonnull)sender didReceiveMessage:(SBDBaseMessage * _Nonnull)message;
@end


@interface SBUGroupChannelViewModel (SWIFT_EXTENSION(SendbirdUIKit))
- (void)didSucceedReconnection;
@end

@class SBDMessageCollection;

@interface SBUGroupChannelViewModel (SWIFT_EXTENSION(SendbirdUIKit)) <SBDMessageCollectionDelegate>
- (void)messageCollection:(SBDMessageCollection * _Nonnull)collection context:(SBDMessageContext * _Nonnull)context channel:(SBDGroupChannel * _Nonnull)channel addedMessages:(NSArray<SBDBaseMessage *> * _Nonnull)messages;
- (void)messageCollection:(SBDMessageCollection * _Nonnull)collection context:(SBDMessageContext * _Nonnull)context channel:(SBDGroupChannel * _Nonnull)channel updatedMessages:(NSArray<SBDBaseMessage *> * _Nonnull)messages;
- (void)messageCollection:(SBDMessageCollection * _Nonnull)collection context:(SBDMessageContext * _Nonnull)context channel:(SBDGroupChannel * _Nonnull)channel deletedMessages:(NSArray<SBDBaseMessage *> * _Nonnull)messages;
- (void)messageCollection:(SBDMessageCollection * _Nonnull)collection context:(SBDMessageContext * _Nonnull)context updatedChannel:(SBDGroupChannel * _Nonnull)channel;
- (void)messageCollection:(SBDMessageCollection * _Nonnull)collection context:(SBDMessageContext * _Nonnull)context deletedChannel:(NSString * _Nonnull)channelUrl;
- (void)didDetectHugeGap:(SBDMessageCollection * _Nonnull)collection;
@end


SWIFT_CLASS("_TtC13SendbirdUIKit19SBUImageContentView")
@interface SBUImageContentView : SBUBaseFileContentView
- (void)setupViews;
- (void)setupLayouts;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end

@class Header;
@class SBUInviteUserViewModel;

SWIFT_CLASS("_TtC13SendbirdUIKit27SBUInviteUserViewController")
@interface SBUInviteUserViewController : SBUBaseSelectUserViewController
@property (nonatomic, strong) Header * _Nullable headerComponent;
@property (nonatomic, strong) SBUInviteUserModuleList * _Nullable listComponent;
@property (nonatomic, strong) SBUInviteUserViewModel * _Nullable viewModel;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUInviteUserViewController(channel:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUInviteUserViewController(channel:)'");
/// If you have channel and users objects, use this initialize function.
/// \param channel Channel object
///
/// \param users <code>SBUUser</code> object
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel users:(NSArray<SBUUser *> * _Nullable)users OBJC_DESIGNATED_INITIALIZER;
/// If you have channelUrl and users objects, use this initialize function.
/// \param channelUrl Channel url string
///
/// \param users <code>SBUUser</code> object
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl users:(NSArray<SBUUser *> * _Nullable)users OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)createViewModelWithChannel:(SBDBaseChannel * _Nullable)channel channelUrl:(NSString * _Nullable)channelUrl channelType:(SBDChannelType)channelType users:(NSArray<SBUUser *> * _Nullable)users;
- (void)setupViews;
/// This function invites selected users.
/// since:
/// 3.0.0
- (void)inviteSelectedUsers;
- (void)inviteUserModule:(Header * _Nonnull)headerComponent didUpdateTitleView:(UIView * _Nullable)titleView;
- (void)inviteUserModule:(Header * _Nonnull)headerComponent didUpdateLeftItem:(UIBarButtonItem * _Nullable)leftItem;
- (void)inviteUserModule:(Header * _Nonnull)headerComponent didUpdateRightItem:(UIBarButtonItem * _Nullable)rightItem;
- (void)inviteUserModule:(Header * _Nonnull)headerComponent didTapLeftItem:(UIBarButtonItem * _Nonnull)leftItem;
- (void)inviteUserModule:(Header * _Nonnull)headerComponent didTapRightItem:(UIBarButtonItem * _Nonnull)rightItem;
- (void)inviteUserModule:(SBUInviteUserModuleList * _Nonnull)listComponent didSelectRowAt:(NSIndexPath * _Nonnull)indexPath;
- (void)inviteUserModule:(SBUInviteUserModuleList * _Nonnull)listComponent didDetectPreloadingPosition:(NSIndexPath * _Nonnull)indexPath;
- (void)inviteUserModuleDidSelectRetry:(SBUInviteUserModuleList * _Nonnull)listComponent;
- (void)inviteUserViewModel:(SBUInviteUserViewModel * _Nonnull)viewModel didInviteUserIds:(NSArray<NSString *> * _Nonnull)userIds;
- (void)baseSelectedUserViewModel:(SBUBaseSelectUserViewModel * _Nonnull)viewModel didUpdateSelectedUsers:(NSArray<SBUUser *> * _Nullable)selectedUsers;
@end


SWIFT_CLASS("_TtC13SendbirdUIKit22SBUInviteUserViewModel")
@interface SBUInviteUserViewModel : SBUBaseSelectUserViewModel
@end


SWIFT_CLASS("_TtC13SendbirdUIKit19SBULayoutableButton")
@interface SBULayoutableButton : UIButton
@property (nonatomic) UIEdgeInsets contentEdgeInsets;
@property (nonatomic) UIEdgeInsets imageEdgeInsets;
@property (nonatomic) UIEdgeInsets titleEdgeInsets;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end

@class Header;
@class SBUMemberListViewModel;

/// This class handling channelMembers,  operators,  mutedMembers,  bannedMembers,  participants,
SWIFT_CLASS("_TtC13SendbirdUIKit27SBUMemberListViewController")
@interface SBUMemberListViewController : SBUBaseViewController
@property (nonatomic, strong) Header * _Nullable headerComponent;
@property (nonatomic, strong) SBUMemberListModuleList * _Nullable listComponent;
/// To use the custom user profile view, set this to the custom view created using <code>SBUUserProfileViewProtocol</code>.
/// And, if you do not want to use the user profile feature, please set this value to nil.
@property (nonatomic, strong) UIView * _Nullable userProfileView;
@property (nonatomic, strong) SBUMemberListViewModel * _Nullable viewModel;
@property (nonatomic, readonly, strong) SBDBaseChannel * _Nullable channel;
@property (nonatomic, readonly, copy) NSString * _Nullable channelUrl;
@property (nonatomic, readonly, copy) NSArray<SBUUser *> * _Nonnull memberList;
@property (nonatomic, readonly) enum ChannelMemberListType memberListType;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMemberListViewController(channelUrl:type:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMemberListViewController.init(channelUrl:)'");
/// If you have channel and members objects, use this initialize function.
/// since:
/// 1.2.0
/// \param channel Channel object
///
/// \param members <code>SBUUser</code> array object
///
/// \param memberListType Channel member list type (default: <code>.channelMembers</code>)
///
- (nonnull instancetype)initWithChannel:(SBDBaseChannel * _Nonnull)channel members:(NSArray<SBUUser *> * _Nullable)members memberListType:(enum ChannelMemberListType)memberListType OBJC_DESIGNATED_INITIALIZER;
/// If you have channelUrl and members objects, use this initialize function.
/// since:
/// 1.2.0
/// \param channelUrl Channel url string
///
/// \param members <code>SBUUser</code> array object
///
/// \param memberListType Channel member list type (default: <code>.channelMembers</code>)
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl channelType:(SBDChannelType)channelType members:(NSArray<SBUUser *> * _Nullable)members memberListType:(enum ChannelMemberListType)memberListType OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)createViewModelWithChannel:(SBDBaseChannel * _Nullable)channel channelUrl:(NSString * _Nullable)channelUrl channelType:(SBDChannelType)channelType members:(NSArray<SBUUser *> * _Nullable)members type:(enum ChannelMemberListType)type;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupStyles;
- (void)updateStyles;
/// If you want to use a custom inviteChannelViewController, override it and implement it.
- (void)showInviteUser;
/// This func tion shows the user profile
/// If you do not want to use the user profile function, override this function and leave it empty.
/// since:
/// 3.0.0
/// \param user <code>SBUUser</code> object used for user profile configuration
///
- (void)showUserProfileWith:(SBUUser * _Nonnull)user;
- (void)memberListModule:(Header * _Nonnull)headerComponent didUpdateTitleView:(UIView * _Nullable)titleView;
- (void)memberListModule:(Header * _Nonnull)headerComponent didUpdateLeftItem:(UIBarButtonItem * _Nullable)leftItem;
- (void)memberListModule:(Header * _Nonnull)headerComponent didUpdateRightItem:(UIBarButtonItem * _Nullable)rightItem;
- (void)memberListModule:(Header * _Nonnull)headerComponent didTapLeftItem:(UIBarButtonItem * _Nonnull)leftItem;
- (void)memberListModule:(Header * _Nonnull)headerComponent didTapRightItem:(UIBarButtonItem * _Nonnull)rightItem;
- (void)memberListModule:(SBUMemberListModuleList * _Nonnull)listComponent didSelectRowAt:(NSIndexPath * _Nonnull)indexPath;
- (void)memberListModule:(SBUMemberListModuleList * _Nonnull)listComponent didDetectPreloadingPosition:(NSIndexPath * _Nonnull)indexPath;
- (void)memberListModule:(SBUMemberListModuleList * _Nonnull)listComponent didTapMoreMenuFor:(SBUUser * _Nonnull)member;
- (void)memberListModule:(SBUMemberListModuleList * _Nonnull)listComponent didTapUserProfileFor:(SBUUser * _Nonnull)member;
- (void)memberListModuleDidSelectRetry:(SBUMemberListModuleList * _Nonnull)listComponent;
- (NSArray<SBUUser *> * _Nonnull)memberListModule:(SBUMemberListModuleList * _Nonnull)listComponent membersInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (SBDBaseChannel * _Nullable)memberListModule:(SBUMemberListModuleList * _Nonnull)listComponent channelForTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (void)shouldUpdateLoadingState:(BOOL)isLoading;
- (void)didReceiveError:(SBDError * _Nullable)error isBlocker:(BOOL)isBlocker;
- (void)didSelectMessageWithUserId:(NSString * _Nullable)userId;
- (void)didSelectClose;
- (void)memberListViewModel:(SBUMemberListViewModel * _Nonnull)viewModel didChangeMembers:(NSArray<SBUUser *> * _Nonnull)members needsToReload:(BOOL)needsToReload;
- (void)memberListViewModel:(SBUMemberListViewModel * _Nonnull)viewModel didChangeChannel:(SBDBaseChannel * _Nullable)channel withContext:(SBDMessageContext * _Nonnull)context;
- (NSArray<SBUUser *> * _Nullable)memberListViewModel:(SBUMemberListViewModel * _Nonnull)viewModel nextMemberListForChannel:(SBDBaseChannel * _Nullable)channel SWIFT_WARN_UNUSED_RESULT;
@end

@class SBDOperatorListQuery;
@class SBDBannedUserListQuery;
@class SBDParticipantListQuery;

@interface SBUMemberListViewController (SWIFT_EXTENSION(SendbirdUIKit))
@property (nonatomic, strong) UIView * _Nullable titleView SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUMemberListModule.Header`.", "headerComponent.titleView");
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUMemberListModule.Header`.", "headerComponent.leftBarButton");
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUMemberListModule.Header`.", "headerComponent.rightBarButton");
@property (nonatomic, readonly, strong) UITableView * _Nullable tableView SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUMemberListModule.List`.", "listComponent.tableView");
@property (nonatomic, readonly, strong) UITableViewCell * _Nullable userCell SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUMemberListModule.List`.", "listComponent.memberCell");
@property (nonatomic, strong) UIView * _Nullable emptyView SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUMemberListModule.List`.", "listComponent.emptyView");
@property (nonatomic, readonly, strong) SBDGroupChannelMemberListQuery * _Nullable memberListQuery SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUMemberListViewModel`.", "viewModel.memberListQuery");
@property (nonatomic, readonly, strong) SBDOperatorListQuery * _Nullable operatorListQuery SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUMemberListViewModel`.", "viewModel.operatorListQuery");
@property (nonatomic, readonly, strong) SBDGroupChannelMemberListQuery * _Nullable mutedMemberListQuery SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUMemberListViewModel`.", "viewModel.mutedMemberListQuery");
@property (nonatomic, readonly, strong) SBDBannedUserListQuery * _Nullable bannedMemberListQuery SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUMemberListViewModel`.", "viewModel.bannedMemberListQuery");
@property (nonatomic, readonly, strong) SBDParticipantListQuery * _Nullable participantListQuery SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUMemberListViewModel`.", "viewModel.participantListQuery");
- (nonnull instancetype)initWithChannel:(SBDBaseChannel * _Nonnull)channel type:(enum ChannelMemberListType)type SWIFT_DEPRECATED_MSG("", "init(channel:memberListType:)");
- (nonnull instancetype)initWithChannel:(SBDBaseChannel * _Nonnull)channel members:(NSArray<SBUUser *> * _Nonnull)members type:(enum ChannelMemberListType)type SWIFT_DEPRECATED_MSG("", "initWithChannel:members:memberListType:");
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUMemberListViewModel`.", "viewModel.loadChannel(channelUrl:type:)");
- (void)loadNextMemberListWithReset:(BOOL)reset members:(NSArray<SBUUser *> * _Nullable)members SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUMemberListViewModel`.", "viewModel.loadNextMemberList(reset:members:)");
- (void)loadMembers SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUMemberListViewModel`.", "viewModel.loadNextMemberList(reset:)");
- (NSArray<SBUUser *> * _Nullable)nextMemberList SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE_MSG("'nextMemberList' has been renamed to 'memberListViewModel:nextMemberListForChannel:': This function has been moved to the `SBUMemberListViewModelDataSource`.");
- (void)promoteToOperatorWithMember:(SBUUser * _Nonnull)member SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUMemberListViewModel`.", "viewModel.promoteToOperator(member:)");
- (void)dismissOperatorWithMember:(SBUUser * _Nonnull)member SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUMemberListViewModel`.", "viewModel.dismissOperator(member:)");
- (void)muteWithMember:(SBUUser * _Nonnull)member SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUMemberListViewModel`.", "viewModel.mute(member:)");
- (void)unmuteWithMember:(SBUUser * _Nonnull)member SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUMemberListViewModel`.", "viewModel.unmute(member:)");
- (void)banWithMember:(SBUUser * _Nonnull)member SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUMemberListViewModel`.", "viewModel.ban(member:)");
- (void)unbanWithMember:(SBUUser * _Nonnull)member SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUMemberListViewModel`.", "viewModel.unban(member:)");
- (void)resetMemberList SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUMemberListViewModel`.", "viewModel.resetMemberList()");
- (void)registerWithUserCell:(UITableViewCell * _Nonnull)userCell nib:(UINib * _Nullable)nib SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUMemberListModule.List`.`", "listComponent.register(memberCell:nib:)");
- (void)reloadData SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUMemberListModule.List`.", "listComponent.reloadTableView()");
- (void)onClickInviteUser SWIFT_UNAVAILABLE_MSG("'onClickInviteUser' has been renamed to 'showInviteUser'");
- (BOOL)shouldShowLoadingIndicator SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE_MSG("'shouldShowLoadingIndicator' has been renamed to 'shouldUpdateLoadingState:'");
- (void)shouldDismissLoadingIndicator SWIFT_UNAVAILABLE_MSG("'shouldDismissLoadingIndicator' has been renamed to 'shouldUpdateLoadingState:'");
- (void)setMoreMenuActionHandler:(SBUUser * _Nonnull)member SWIFT_UNAVAILABLE_MSG("This function has been moved to the `SBUMemberListModule.List` and replaced to `setMoreMenuTapAction(_:)`");
- (void)setUserProfileTapGestureHandler:(SBUUser * _Nonnull)user SWIFT_UNAVAILABLE_MSG("This function has been moved to the `SBUMemberListModule.List`. and replaced to `setUserProfileTapAction(_:)`");
- (void)didSelectRetry SWIFT_UNAVAILABLE_MSG("This function has been moved to the `SBUMemberListModule.List`.");
- (void)channelDidUpdateOperators:(SBDBaseChannel * _Nonnull)sender SWIFT_UNAVAILABLE_MSG("This function has been moved to the `SBUMemberListViewModel`.");
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidJoin:(SBDUser * _Nonnull)user SWIFT_UNAVAILABLE_MSG("This function has been moved to the `SBUMemberListViewModel`.");
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidLeave:(SBDUser * _Nonnull)user SWIFT_UNAVAILABLE_MSG("This function has been moved to the `SBUMemberListViewModel`.");
- (void)channel:(SBDOpenChannel * _Nonnull)sender userDidExit:(SBDUser * _Nonnull)user SWIFT_UNAVAILABLE_MSG("This function has been moved to the `SBUMemberListViewModel`.");
- (void)channel:(SBDOpenChannel * _Nonnull)sender userDidEnter:(SBDUser * _Nonnull)user SWIFT_UNAVAILABLE_MSG("This function has been moved to the `SBUMemberListViewModel`.");
/// ~ v.2.2.2
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl type:(enum ChannelMemberListType)type SWIFT_DEPRECATED_MSG("", "init(channelUrl:channelType:memberListType:)");
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl members:(NSArray<SBUUser *> * _Nonnull)members type:(enum ChannelMemberListType)type SWIFT_DEPRECATED_MSG("", "initWithChannelUrl:channelType:members:memberListType:");
- (void)reloadMemberList SWIFT_DEPRECATED_MSG("", "resetMemberList");
@end


SWIFT_CLASS("_TtC13SendbirdUIKit22SBUMemberListViewModel")
@interface SBUMemberListViewModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface SBUMemberListViewModel (SWIFT_EXTENSION(SendbirdUIKit)) <SBDChannelDelegate>
- (void)channelDidUpdateOperators:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidJoin:(SBDUser * _Nonnull)user;
- (void)channel:(SBDGroupChannel * _Nonnull)sender userDidLeave:(SBDUser * _Nonnull)user;
- (void)channel:(SBDOpenChannel * _Nonnull)sender userDidExit:(SBDUser * _Nonnull)user;
- (void)channel:(SBDOpenChannel * _Nonnull)sender userDidEnter:(SBDUser * _Nonnull)user;
@end

typedef SWIFT_ENUM(NSInteger, SBUMessageInputMode, open) {
/// The default mode
  SBUMessageInputModeNone = 0,
/// The editing mode
  SBUMessageInputModeEdit = 1,
/// The quote replying mode
  SBUMessageInputModeQuoteReply = 2,
};

@class UITextView;

SWIFT_CLASS("_TtC13SendbirdUIKit19SBUMessageInputView")
@interface SBUMessageInputView : SBUView <UITextViewDelegate>
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// This function handles the initialization of views.
- (void)setupViews;
/// This function handles the initialization of autolayouts.
- (void)setupLayouts;
/// This function handles the initialization of styles.
- (void)setupStyles;
- (void)layoutSubviews;
- (void)onClickAddButton:(id _Nonnull)sender;
- (void)onClickSendButton:(id _Nonnull)sender;
- (void)onClickCancelButton:(id _Nonnull)sender;
- (void)onClickSaveButton:(id _Nonnull)sender;
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
- (void)textViewDidEndEditing:(UITextView * _Nonnull)textView;
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_PROTOCOL("_TtP13SendbirdUIKit27SBUMessageInputViewDelegate_")
@protocol SBUMessageInputViewDelegate <NSObject>
@optional
/// Called when the send button was selected.
/// since:
/// 2.2.0
/// \param messageInputView <code>SBUMessageinputView</code> object.
///
/// \param text The sent text.
///
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectSend:(NSString * _Nonnull)text;
/// Called when the media resource button was selected.
/// since:
/// 2.2.0
/// \param messageInputView <code>SBUMessageinputView</code> object.
///
/// \param type <code>MediaResourceType</code> value.
///
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectResource:(enum MediaResourceType)type;
/// Called when the edit button was selected.
/// since:
/// 2.2.0
/// \param messageInputView <code>SBUMessageinputView</code> object.
///
/// \param text The text on editing
///
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didSelectEdit:(NSString * _Nonnull)text;
/// Called when the text was changed.
/// since:
/// 2.2.0
/// \param messageInputView <code>SBUMessageinputView</code> object.
///
/// \param text The changed text.
///
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didChangeText:(NSString * _Nonnull)text;
/// Called when the message input mode was changed.
/// since:
/// 2.2.0
/// \param messageInputView <code>SBUMessageinputView</code> object.
///
/// \param mode <code>SBUMessageInputMode</code> value. It represents the current mode of <code>messageInputView</code>.
///
/// \param message <code>SBDBaseMessage</code> object. It’s <code>nil</code> when the <code>mode</code> is <code>none</code>.
///
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView didChangeMode:(enum SBUMessageInputMode)mode message:(SBDBaseMessage * _Nullable)message;
/// Called when the message input mode will be changed via <code>setMode(_:message:)</code> method.
/// since:
/// 2.2.0
/// \param messageInputView <code>SBUMessageinputView</code> object.
///
/// \param mode <code>SBUMessageInputMode</code> value. The <code>messageInputView</code> changes its mode to this value.
///
/// \param message <code>SBDBaseMessage</code> object. It’s <code>nil</code> when the <code>mode</code> is <code>none</code>.
///
- (void)messageInputView:(SBUMessageInputView * _Nonnull)messageInputView willChangeMode:(enum SBUMessageInputMode)mode message:(SBDBaseMessage * _Nullable)message;
/// Called when the message input view started to type.
/// since:
/// 2.2.0
- (void)messageInputViewDidStartTyping;
/// Called when the message Input view ended typing.
/// since:
/// 2.2.0
- (void)messageInputViewDidEndTyping;
@end

@class NSURLSessionTask;

SWIFT_CLASS("_TtC13SendbirdUIKit21SBUMessageProfileView")
@interface SBUMessageProfileView : SBUView
@property (nonatomic, strong) UIImageView * _Nonnull imageView;
@property (nonatomic, copy) NSString * _Nonnull urlString;
- (nonnull instancetype)initWithUrlString:(NSString * _Nonnull)urlString OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) NSURLSessionTask * _Nullable imageDownloadTask;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupStyles;
- (void)configureWithUrlString:(NSString * _Nonnull)urlString;
@end

/// This is an enumeration to message receipt state.
typedef SWIFT_ENUM(NSInteger, SBUMessageReceiptState, open) {
/// The message is sent
  SBUMessageReceiptStateNone = 0,
/// The message is delivered
  SBUMessageReceiptStateDelivered = 1,
/// The message is read
  SBUMessageReceiptStateRead = 2,
/// Not use receipt state
  SBUMessageReceiptStateNotUsed = 3,
  SBUMessageReceiptStateReadReceipt = 4,
  SBUMessageReceiptStateDeliveryReceipt = 5,
};


SWIFT_CLASS("_TtC13SendbirdUIKit26SBUMessageSearchResultCell")
@interface SBUMessageSearchResultCell : SBUTableViewCell
@property (nonatomic, readonly, strong) SBUCoverImageView * _Nonnull coverImage;
@property (nonatomic, readonly, strong) UILabel * _Nonnull titleLabel;
@property (nonatomic, readonly, strong) UILabel * _Nonnull messageLabel;
@property (nonatomic, readonly, strong) UILabel * _Nonnull fileMessageLabel;
@property (nonatomic, readonly, strong) UIImageView * _Nonnull fileMessageIcon;
@property (nonatomic, readonly, strong) UIStackView * _Nonnull fileStackView;
@property (nonatomic, readonly, strong) UILabel * _Nonnull createdAtLabel;
@property (nonatomic, readonly, strong) UIView * _Nonnull separatorLine;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
/// This function handles the initialization of views.
- (void)setupViews;
/// This function handles the initialization of actions.
- (void)setupActions;
/// This function handles the initialization of autolayouts.
- (void)setupLayouts;
/// This function handles the initialization of styles.
- (void)setupStyles;
/// This function configure a cell using <code>SBDBaseMessage</code> information.
/// \param message <code>SBDBaseMessage</code> object
///
- (void)configureWithMessage:(SBDBaseMessage * _Nonnull)message;
/// Sets file message icon depending on the message’s file type using <code>SBUUtils.getFileType(by: fileMessage)</code>.
- (void)setupFileIcon;
@end

@class SBDMessageSearchQueryBuilder;

/// ViewController handling a message search.
/// since:
/// 2.1.0
SWIFT_CLASS("_TtC13SendbirdUIKit30SBUMessageSearchViewController")
@interface SBUMessageSearchViewController : SBUBaseViewController
@property (nonatomic, strong) Header * _Nullable headerComponent;
@property (nonatomic, strong) SBUMessageSearchModuleList * _Nullable listComponent;
@property (nonatomic, readonly, strong) SBDBaseChannel * _Nullable channel;
@property (nonatomic, readonly, copy) NSArray<SBDBaseMessage *> * _Nonnull searchResultList;
/// You can set custom query params for message search.
/// <ul>
///   <li>
///     <code>keyword</code>, <code>channelUrl</code>, <code>order</code> is reserved in SDK. (The SDK value will override the custom values)
///   </li>
///   <li>
///     <code>messageFromTs</code> is set to user’s channel joined ts as a default. You can set this value to <code>0</code> to search for all previous messages as well.
///   </li>
///   <li>
///     <code>limit</code> will be set to default value in case if it’s set to 0 or smaller value.
///   </li>
/// </ul>
@property (nonatomic, copy) void (^ _Nullable customMessageSearchQueryBuilder)(SBDMessageSearchQueryBuilder * _Nonnull);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMessageSearchViewController(channel:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUMessageSearchViewController(channel:)'");
/// Initializer
/// \param channel The object of the channel to search for
///
- (nonnull instancetype)initWithChannel:(SBDBaseChannel * _Nonnull)channel OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)createViewModelWithChannel:(SBDBaseChannel * _Nonnull)channel;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupStyles;
- (void)updateStyles;
/// Performs keyword search
/// <ul>
///   <li>
///     Parameters: keyword: A keyword to search for.
///   </li>
/// </ul>
///
/// returns:
/// A <code>SBDMessageSearchQuery</code> with the params set.
- (void)searchWithKeyword:(NSString * _Nonnull)keyword;
- (void)messageSearchModule:(Header * _Nonnull)headerComponent didUpdateTitleView:(UIView * _Nullable)titleView;
- (void)messageSearchModule:(Header * _Nonnull)headerComponent didUpdateLeftItem:(UIBarButtonItem * _Nullable)leftItem;
- (void)messageSearchModule:(Header * _Nonnull)headerComponent didUpdateRightItem:(UIBarButtonItem * _Nullable)rightItem;
- (void)messageSearchModule:(Header * _Nonnull)headerComponent didTapSearch:(NSString * _Nonnull)keyword;
- (void)messageSearchModuleDidTapCancel:(Header * _Nonnull)headerComponent;
- (void)messageSearchModule:(SBUMessageSearchModuleList * _Nonnull)listComponent didSelectRowAt:(NSIndexPath * _Nonnull)indexPath;
- (void)messageSearchModule:(SBUMessageSearchModuleList * _Nonnull)listComponent didDetectPreloadingPosition:(NSIndexPath * _Nonnull)index;
- (void)messageSearchModuleDidSelectRetry:(SBUMessageSearchModuleList * _Nonnull)listComponent;
- (NSArray<SBDBaseMessage *> * _Nonnull)messageSearchModule:(SBUMessageSearchModuleList * _Nonnull)listComponent searchResultsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (void)shouldUpdateLoadingState:(BOOL)isLoading;
- (void)didReceiveError:(SBDError * _Nullable)error isBlocker:(BOOL)isBlocker;
- (void)didSelectRetry;
@end


@interface SBUMessageSearchViewController (SWIFT_EXTENSION(SendbirdUIKit))
@property (nonatomic, strong) UIView * _Nullable searchBar SWIFT_UNAVAILABLE_MSG("'searchBar' has been renamed to 'headerComponent.titleView': This property has been moved to the `SBUMessageSearchModule.Header`. And renamed to `titleView`.");
@property (nonatomic, readonly, strong) UITableView * _Nullable tableView SWIFT_UNAVAILABLE_MSG("'tableView' has been renamed to 'listComponent.tableView': This property has been moved to the `SBUMessageSearchModule.List`.");
@property (nonatomic, strong) SBUMessageSearchResultCell * _Nullable messageSearchResultCell SWIFT_UNAVAILABLE_MSG("'messageSearchResultCell' has been renamed to 'listComponent.messageSearchResultCell': This property has been moved to the `SBUMessageSearchModule.List`.");
@property (nonatomic, strong) UIView * _Nullable emptyView SWIFT_UNAVAILABLE_MSG("'emptyView' has been renamed to 'listComponent.emptyView': This property has been moved to the `SBUMessageSearchModule.List`.");
@property (nonatomic, strong) SBDMessageListParams * _Nullable messageListParams SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUMessageSearchViewModel`.", "viewModel.messageListParams");
- (void)setupSearchBarStyleWithSearchBar:(UISearchBar * _Nonnull)searchBar SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUMessageSearchModule.Header`.", "headerComponent.updateSearchBarStyle(with:)");
- (SBDBaseMessage * _Nullable)messageAt:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUMessageSearchViewModel`.", "listComponent.message(at:)");
- (void)registerWithMessageSearchResultCell:(SBUMessageSearchResultCell * _Nonnull)messageSearchResultCell nib:(UINib * _Nullable)nib SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUMessageSearchModule.List`.`", "listComponent.register(resultCell:nib:)");
- (BOOL)shouldShowLoadingIndicator SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE_MSG("'shouldShowLoadingIndicator' has been renamed to 'shouldUpdateLoadingState:'");
- (void)shouldDismissLoadingIndicator SWIFT_UNAVAILABLE_MSG("'shouldDismissLoadingIndicator' has been renamed to 'shouldUpdateLoadingState:'");
@end


SWIFT_CLASS("_TtC13SendbirdUIKit19SBUMessageStateView")
@interface SBUMessageStateView : SBUView
- (void)setupViews;
- (void)setupLayouts;
- (void)setupStyles;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class Header;

SWIFT_CLASS("_TtC13SendbirdUIKit28SBUModerationsViewController")
@interface SBUModerationsViewController : SBUBaseViewController
@property (nonatomic, strong) Header * _Nullable headerComponent;
@property (nonatomic, strong) SBUModerationsModuleList * _Nullable listComponent;
@property (nonatomic, readonly, strong) SBDGroupChannel * _Nullable channel;
@property (nonatomic, readonly, copy) NSString * _Nullable channelUrl;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUModerationsViewController(channel:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUModerationsViewController(channel:)'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)createViewModelWithChannel:(SBDGroupChannel * _Nullable)channel channelUrl:(NSString * _Nullable)channelUrl;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupStyles;
- (void)updateStyles;
/// Changes freeze status on channel.
/// \param freeze freeze status
///
/// \param completionHandler completion handler of freeze status change
///
- (void)changeFreeze:(BOOL)freeze :(void (^ _Nullable)(BOOL))completionHandler;
/// This is a function that shows the operator List.
/// If you want to use a custom MemberListViewController, override it and implement it.
- (void)showOperatorList;
/// This is a function that shows the muted member List.
/// If you want to use a custom MemberListViewController, override it and implement it.
- (void)showMutedMemberList;
/// This is a function that shows the banned member List.
/// If you want to use a custom MemberListViewController, override it and implement it.
- (void)showBannedMemberList;
- (void)moderationsModule:(Header * _Nonnull)headerComponent didUpdateTitleView:(UIView * _Nullable)titleView;
- (void)moderationsModule:(Header * _Nonnull)headerComponent didUpdateLeftItem:(UIBarButtonItem * _Nullable)leftItem;
- (void)moderationsModule:(Header * _Nonnull)headerComponent didUpdateRightItem:(UIBarButtonItem * _Nullable)rightItem;
- (void)moderationsModule:(Header * _Nonnull)headerComponent didTapLeftItem:(UIBarButtonItem * _Nonnull)leftItem;
- (void)moderationsModule:(SBUModerationsModuleList * _Nonnull)listComponent didChangeFreezeMode:(BOOL)state;
- (void)moderationsModule:(SBUModerationsModuleList * _Nonnull)listComponent didSelectRowAt:(NSIndexPath * _Nonnull)indexPath;
- (SBDBaseChannel * _Nullable)moderationsModule:(SBUModerationsModuleList * _Nonnull)listComponent channelForTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (void)shouldUpdateLoadingState:(BOOL)isLoading;
- (void)didReceiveError:(SBDError * _Nullable)error isBlocker:(BOOL)isBlocker;
@end


@interface SBUModerationsViewController (SWIFT_EXTENSION(SendbirdUIKit))
@property (nonatomic, strong) UIView * _Nullable titleView SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUModerationsModule.Header`.", "headerComponent.titleView");
@property (nonatomic, strong) UIBarButtonItem * _Nullable leftBarButton SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUModerationsModule.Header`.", "headerComponent.leftBarButton");
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton SWIFT_DEPRECATED_MSG("This property has been moved to the `SBUModerationsModule.Header`.", "headerComponent.rightBarButton");
@property (nonatomic, readonly, strong) UITableView * _Nullable tableView SWIFT_DEPRECATED_MSG("This property has been moved to the SBUModerationsModule.List.", "listComponent.tableView");
- (void)loadChannelWithChannelUrl:(NSString * _Nullable)channelUrl SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUModerationsViewModel`.", "viewModel.loadChannel(channelUrl:)");
- (void)freezeChannelWithCompletionHandler:(void (^ _Nullable)(BOOL))completionHandler SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUModerationsViewModel`.", "viewModel.freezeChannel(_:)");
- (void)unfreezeChannelWithCompletionHandler:(void (^ _Nullable)(BOOL))completionHandler SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUModerationsViewModel`.", "viewModel.unfreezeChannel(_:)");
- (BOOL)shouldShowLoadingIndicator SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE_MSG("'shouldShowLoadingIndicator' has been renamed to 'shouldUpdateLoadingState:'");
- (void)shouldDismissLoadingIndicator SWIFT_UNAVAILABLE_MSG("'shouldDismissLoadingIndicator' has been renamed to 'shouldUpdateLoadingState:'");
- (void)registerWithModerationCell:(UITableViewCell * _Nonnull)moderationCell nib:(UINib * _Nullable)nib SWIFT_DEPRECATED_MSG("This function has been moved to the SBUModerationsModule.List.`", "listComponent.register(moderationCell:nib:)");
- (void)showMutedMeberList SWIFT_DEPRECATED_MSG("", "showMutedMemberList");
- (void)showBannedMeberList SWIFT_DEPRECATED_MSG("", "showMutedMemberList");
@end


SWIFT_CLASS("_TtC13SendbirdUIKit22SBUNavigationTitleView")
@interface SBUNavigationTitleView : SBUView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupStyles;
- (void)drawRect:(CGRect)rect;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC13SendbirdUIKit17SBUNewMessageInfo")
@interface SBUNewMessageInfo : SBUView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// This function handles the initialization of views.
- (void)setupViews;
/// This function handles the initialization of autolayouts.
- (void)setupLayouts;
/// This function handles the initialization of styles.
- (void)setupStyles;
- (void)drawRect:(CGRect)rect;
- (void)onClickNewMessageInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendbirdUIKit29SBUOpenChannelBaseMessageCell")
@interface SBUOpenChannelBaseMessageCell : SBUTableViewCell
@property (nonatomic, strong) SBDBaseMessage * _Nonnull message;
@property (nonatomic) enum MessageGroupPosition groupPosition;
@property (nonatomic, strong) UIView * _Nonnull dateView;
@property (nonatomic, strong) UIView * _Nonnull messageContentView;
/// This function handles the initialization of views.
- (void)setupViews;
/// This function handles the initialization of autolayouts.
- (void)setupLayouts;
/// This function handles the initialization of styles.
- (void)setupStyles;
/// This function configure a cell using informations.
/// \param message Message object
///
/// \param hideDateView Hide or expose date information
///
/// \param isOverlay Whether to use in overlay
///
- (void)configureWithMessage:(SBDBaseMessage * _Nonnull)message hideDateView:(BOOL)hideDateView groupPosition:(enum MessageGroupPosition)groupPosition isOverlay:(BOOL)isOverlay;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (void)prepareForReuse;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendbirdUIKit30SBUOpenChannelAdminMessageCell")
@interface SBUOpenChannelAdminMessageCell : SBUOpenChannelBaseMessageCell
@property (nonatomic, strong) UIView * _Nonnull baseView;
@property (nonatomic, strong) UILabel * _Nonnull messageLabel;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupStyles;
- (void)layoutSubviews;
- (void)configure:(SBDAdminMessage * _Nonnull)message hideDateView:(BOOL)hideDateView isOverlay:(BOOL)isOverlay;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC13SendbirdUIKit31SBUOpenChannelCommonContentView")
@interface SBUOpenChannelCommonContentView : SBUCommonContentView
- (void)setupLayouts;
- (void)setupStyles;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end


/// It is a base class used in message cell with contents.
/// since:
/// 2.0.0
SWIFT_CLASS("_TtC13SendbirdUIKit36SBUOpenChannelContentBaseMessageCell")
@interface SBUOpenChannelContentBaseMessageCell : SBUOpenChannelBaseMessageCell
@property (nonatomic, strong) UIStackView * _Nonnull baseStackView;
@property (nonatomic, strong) UIView * _Nonnull profileView;
@property (nonatomic, strong) UIStackView * _Nonnull contentsStackView;
@property (nonatomic, strong) UIStackView * _Nonnull infoStackView;
@property (nonatomic, strong) UIView * _Nonnull userNameView;
@property (nonatomic, strong) UILabel * _Nonnull messageTimeLabel;
@property (nonatomic, strong) UIView * _Nonnull mainContainerView;
@property (nonatomic, strong) UIImageView * _Nonnull stateImageView;
@property (nonatomic) BOOL isFileType;
@property (nonatomic) BOOL isWebType;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupActions;
- (void)setupStyles;
- (void)prepareForReuse;
- (void)configure:(SBDBaseMessage * _Nonnull)message hideDateView:(BOOL)hideDateView groupPosition:(enum MessageGroupPosition)groupPosition isOverlay:(BOOL)isOverlay;
- (void)setMessageGrouping;
- (void)setUsernameColor:(UIColor * _Nonnull)color;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (void)onLongPressContentViewWithSender:(UILongPressGestureRecognizer * _Nullable)sender;
- (void)onTapContentViewWithSender:(UITapGestureRecognizer * _Nonnull)sender;
- (void)onTapUserProfileViewWithSender:(UITapGestureRecognizer * _Nonnull)sender;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendbirdUIKit29SBUOpenChannelFileMessageCell")
@interface SBUOpenChannelFileMessageCell : SBUOpenChannelContentBaseMessageCell
@property (nonatomic, readonly, strong) SBDFileMessage * _Nullable fileMessage;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupActions;
- (void)setupStyles;
- (void)configure:(SBDFileMessage * _Nonnull)message hideDateView:(BOOL)hideDateView groupPosition:(enum MessageGroupPosition)groupPosition fileType:(enum MessageFileType)fileType isOverlay:(BOOL)isOverlay;
- (void)prepareForReuse;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendbirdUIKit30SBUOpenChannelImageContentView")
@interface SBUOpenChannelImageContentView : SBUImageContentView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end

@class Header;
@class SBUOpenChannelSettingsViewModel;

SWIFT_CLASS("_TtC13SendbirdUIKit36SBUOpenChannelSettingsViewController")
@interface SBUOpenChannelSettingsViewController : SBUBaseChannelSettingsViewController
@property (nonatomic, strong) Header * _Nullable headerComponent;
@property (nonatomic, strong) SBUOpenChannelSettingsModuleList * _Nullable listComponent;
@property (nonatomic, strong) SBUOpenChannelSettingsViewModel * _Nullable viewModel;
@property (nonatomic, readonly, strong) SBDOpenChannel * _Nullable channel;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUOpenChannelSettingsViewController(channelUrl:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUOpenChannelSettingsViewController(channelUrl:)'");
/// If you have channel object, use this initialize function.
/// \param channel Channel object
///
- (nonnull instancetype)initWithChannel:(SBDOpenChannel * _Nonnull)channel OBJC_DESIGNATED_INITIALIZER;
/// If you don’t have channel object and have channelUrl, use this initialize function.
/// \param channelUrl Channel url string
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl OBJC_DESIGNATED_INITIALIZER;
- (void)viewWillAppear:(BOOL)animated;
- (void)createViewModelWithChannel:(SBDBaseChannel * _Nullable)channel channelUrl:(NSString * _Nullable)channelUrl;
- (void)setupViews;
/// If you want to use a custom memberListViewController, override it and implement it.
- (void)showParticipantsList;
- (void)openChannelSettingsModule:(Header * _Nonnull)headerComponent didUpdateTitleView:(UIView * _Nullable)titleView;
- (void)openChannelSettingsModule:(Header * _Nonnull)headerComponent didUpdateLeftItem:(UIBarButtonItem * _Nullable)leftItem;
- (void)openChannelSettingsModule:(Header * _Nonnull)headerComponent didUpdateRightItem:(UIBarButtonItem * _Nullable)rightItem;
- (void)openChannelSettingsModule:(Header * _Nonnull)headerComponent didTapLeftItem:(UIBarButtonItem * _Nonnull)leftItem;
- (void)openChannelSettingsModule:(Header * _Nonnull)headerComponent didTapRightItem:(UIBarButtonItem * _Nonnull)rightItem;
- (void)openChannelSettingsModule:(SBUOpenChannelSettingsModuleList * _Nonnull)listComponent didSelectRowAt:(NSIndexPath * _Nonnull)indexPath;
- (SBDBaseChannel * _Nullable)baseChannelSettingsModule:(List * _Nonnull)listComponent channelForTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (BOOL)baseChannelSettingsModuleIsOperator:(List * _Nonnull)listComponent SWIFT_WARN_UNUSED_RESULT;
- (void)openChannelSettingsViewModel:(SBUOpenChannelSettingsViewModel * _Nonnull)viewModel didDeleteChannel:(SBDOpenChannel * _Nonnull)channel;
- (void)baseChannelSettingsViewModel:(SBUBaseChannelSettingsViewModel * _Nonnull)viewModel didChangeChannel:(SBDBaseChannel * _Nullable)channel withContext:(SBDMessageContext * _Nonnull)context;
@end

@class SBDOpenChannelParams;

@interface SBUOpenChannelSettingsViewController (SWIFT_EXTENSION(SendbirdUIKit))
- (void)updateChannelWithParams:(SBDOpenChannelParams * _Nonnull)params SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUOpenChannelSettingsViewModel`.", "viewModel.updateChannel(params:)");
- (void)deleteChannel SWIFT_DEPRECATED_MSG("This function has been moved to the `SBUOpenChannelSettingsViewModel`.", "viewModel.deleteChannel()");
@end


SWIFT_CLASS("_TtC13SendbirdUIKit31SBUOpenChannelSettingsViewModel")
@interface SBUOpenChannelSettingsViewModel : SBUBaseChannelSettingsViewModel
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendbirdUIKit29SBUOpenChannelUserMessageCell")
@interface SBUOpenChannelUserMessageCell : SBUOpenChannelContentBaseMessageCell
@property (nonatomic, strong) UIView * _Nonnull messageTextView;
@property (nonatomic, readonly, strong) SBDUserMessage * _Nullable userMessage;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupActions;
- (void)setupStyles;
- (void)configure:(SBDBaseMessage * _Nonnull)message hideDateView:(BOOL)hideDateView groupPosition:(enum MessageGroupPosition)groupPosition withTextView:(BOOL)withTextView isOverlay:(BOOL)isOverlay;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendbirdUIKit32SBUOpenChannelUnknownMessageCell")
@interface SBUOpenChannelUnknownMessageCell : SBUOpenChannelUserMessageCell
- (void)configure:(SBDBaseMessage * _Nonnull)message hideDateView:(BOOL)hideDateView groupPosition:(enum MessageGroupPosition)groupPosition isOverlay:(BOOL)isOverlay;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class Header;
@class SBUOpenChannelModuleList;
@class Input;
@class Media;
@class SBUOpenChannelViewModel;
@protocol UIViewControllerTransitionCoordinator;

SWIFT_CLASS("_TtC13SendbirdUIKit28SBUOpenChannelViewController")
@interface SBUOpenChannelViewController : SBUBaseChannelViewController
@property (nonatomic, strong) Header * _Nullable headerComponent;
@property (nonatomic, strong) SBUOpenChannelModuleList * _Nullable listComponent;
@property (nonatomic, strong) Input * _Nullable inputComponent;
@property (nonatomic, strong) Media * _Nullable mediaComponent;
@property (nonatomic) UIDeviceOrientation prevOrientation;
@property (nonatomic) UIDeviceOrientation currentOrientation;
@property (nonatomic, strong) SBUOpenChannelViewModel * _Nullable viewModel;
@property (nonatomic, readonly, strong) SBDOpenChannel * _Nullable channel;
/// If it’s <code>true</code>, the navigation bar will be hidden.
@property (nonatomic) BOOL hideNavigationBar;
/// If it’s <code>true</code>, the channel info view will be hidden.
@property (nonatomic) BOOL hideChannelInfoView;
/// Sets text in <code>channelInfoView.descriptionLabel</code>
@property (nonatomic, copy) NSString * _Nullable channelDescription;
/// A boolean value whether the media view is enabled or not. The default value is <code>false</code>.
/// note:
/// Use <code>enableMediaView(_:)</code> to set value.
/// \code
/// self.enableMediaView(true)
/// self.print(isMediaViewEnabled) // true
///
/// \endcode
@property (nonatomic, readonly) BOOL isMediaViewEnabled;
/// A relative ratio value of <code>mediaView</code>to entire screen. The default value is <code>0</code>.
/// note:
/// Use <code>updateMessageListRatio(to ratio:)</code> to set value.
@property (nonatomic, readonly) CGFloat mediaViewRatio;
/// A relative ratio value of messaging view to entire screen. The default value is <code>1</code>
/// note:
/// Use <code>updateMessageListRatio(to ratio:)</code> to set value.
@property (nonatomic, readonly) CGFloat messageListRatio;
/// A boolean value whether <code>mediaView</code> is overlay or not. The default value is <code>false</code>.
/// note:
/// Use <code>overlayMediaView(_:messageListRatio:)</code> to set value.
@property (nonatomic, readonly) BOOL isMediaViewOverlaying;
/// If the media view area extends outside the screen’s safe areas, it’s <code>true</code>. The default value is <code>true</code>.
/// note:
/// Use <code>mediaViewIgnoringSafeArea(_:)</code> to set value.
@property (nonatomic, readonly) BOOL isMediaViewIgnoringSafeArea;
/// If you have channel object, use this initialize function. And, if you have own message list params, please set it. If not set, it is used as the default value.
/// See the example below for params generation.
/// \code
///     let params = SBDMessageListParams()
///     params.includeMetaArray = true
///     ...
///
/// \endcodenote:
/// The <code>reverse</code> and the <code>previousResultSize</code> properties in the <code>SBDMessageListParams</code> are set in the UIKit. Even though you set that property it will be ignored.
/// \param channel Channel object
///
- (nonnull instancetype)initWithChannel:(SBDOpenChannel * _Nonnull)channel messageListParams:(SBDMessageListParams * _Nullable)messageListParams OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl startingPoint:(int64_t)startingPoint messageListParams:(SBDMessageListParams * _Nullable)messageListParams OBJC_DESIGNATED_INITIALIZER;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLoad;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)setupViews;
- (void)setupLayouts;
- (void)updateLayouts;
- (void)setupStyles;
- (void)updateStyles;
/// This function updates channel info view. If <code>channelDescription</code> is set, this value is used for channel info view configuring.
- (void)updateChannelInfoView;
/// This function calculates the point at which to draw the menu.
/// \param indexPath IndexPath
///
///
/// returns:
/// <code>CGPoint</code> value
- (CGPoint)calculatorMenuPointWithIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
/// Enable the internal media view.
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     enabled: If it’s <code>true</code> It uses the media view.
///   </li>
/// </ul>
/// \code
/// self.enableMediaView(true)
/// self.updateMessageListRatio(to: 0.7)
///
/// \endcode
- (void)enableMediaView:(BOOL)enabled;
/// Updates a relative ratio value of the message list with  <code>ratio</code> to entire screen.
/// The mediaView will have it’s ratio accordingly, meaning
/// <ul>
///   <li>
///     normal mode : mediaView’s ratio = (1 - message list’s ratio). Media view & message list is side by side in landscape mode, top to bottom in portrait mode.
///   </li>
///   <li>
///     overlay mode : mediaView’s ratio = 1 (fills the whole screen). Media view fills the whole screen & message list is above the media view with transparent background.
///   </li>
/// </ul>
/// After this method, You might need to call <code>setupStyles</code> or <code>updateComponentStyle</code>.
/// important:
/// The ratio must be in range of <code>0...1</code>.
/// \code
/// self.updateMessageListRatio(to: 0.7)
///
/// \endcode\param ratio A relative ratio value of message list to entire screen. If it’s <code>nil</code> or it’s not in range from 0 to 1 inclusive, the value won’t be set.
///
- (void)updateMessageListRatioTo:(CGFloat)ratio;
/// Overlays the media view.
/// \code
/// // Enable overlay mode
/// self.overlayMediaView(true, messageListRatio: 0.4)
///
/// // Disable overlay mode
/// self.overlayMediaView(false, messageListRatio: 0.3)    // mediaViewRatio is 0.7
///
/// \endcode\param overlaying If it’s <code>true</code>, <code>mediaViewRatio</code> will be set to <code>1.0</code>. If it’s <code>false</code>, <code>mediaViewRatio</code> will be set to <code>1 - messageListRatio</code>.
///
/// \param messageListRatio A relative ratio value of  message list to entire screen.
///
- (void)overlayMediaView:(BOOL)overlaying messageListRatio:(CGFloat)messageListRatio;
/// Changes the media view area to extend outside the screen’s safe areas.
/// note:
///
/// <ul>
///   <li>
///     Ignores top edge when it’s on portrait mode.
///   </li>
///   <li>
///     Ignores leading edge when it’s on landscape mode.
///   </li>
/// </ul>
/// \code
/// self.mediaViewIgnoringSafeArea(true)
///
/// \endcode\param enabled A boolean value whther the media view ignores safe area or not.
///
- (void)mediaViewIgnoringSafeArea:(BOOL)enabled;
- (void)configureOffset;
- (void)updateBarButton;
/// This function actions to pop or dismiss.
- (void)onClickBack;
- (void)showChannelSettings;
/// If you want to use a custom participants list, override it and implement it.
- (void)showParticipantsList;
- (void)registerOrientationChangeNotification;
- (void)baseChannelModule:(Header * _Nonnull)headerComponent didTapLeftItem:(UIBarButtonItem * _Nonnull)leftItem;
- (void)baseChannelModule:(Header * _Nonnull)headerComponent didTapRightItem:(UIBarButtonItem * _Nonnull)rightItem;
- (void)baseChannelModule:(SBUBaseChannelModuleList * _Nonnull)listComponent didTapUserProfile:(SBUUser * _Nonnull)user;
- (BOOL)openChannelModuleIsOverlaid:(SBUOpenChannelModuleList * _Nonnull)listComponent SWIFT_WARN_UNUSED_RESULT;
- (void)baseChannelModule:(Input * _Nonnull)inputComponent didUpdateFrozenState:(BOOL)isFrozen;
- (void)openChannelModule:(Input * _Nonnull)inputComponent didPickFileData:(NSData * _Nullable)fileData fileName:(NSString * _Nonnull)fileName mimeType:(NSString * _Nonnull)mimeType;
- (void)baseChannelModule:(SBUBaseChannelModuleList * _Nonnull)listComponent didScroll:(UIScrollView * _Nonnull)scrollView;
- (void)baseChannelViewModel:(SBUBaseChannelViewModel * _Nonnull)viewModel didChangeChannel:(SBDBaseChannel * _Nullable)channel withContext:(SBDMessageContext * _Nonnull)context;
@end


@interface SBUOpenChannelViewController (SWIFT_EXTENSION(SendbirdUIKit))
- (void)setUserMessageCellGestures:(SBUOpenChannelUserMessageCell * _Nonnull)cell userMessage:(SBDUserMessage * _Nonnull)userMessage indexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUOpenChannelModule.List` and replaced to `setMessageCellGestures(_:)`.");
- (void)setFileMessageCellGestures:(SBUOpenChannelFileMessageCell * _Nonnull)cell fileMessage:(SBDFileMessage * _Nonnull)fileMessage indexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUOpenChannelModule.List` and replaced to `setMessageCellGestures(_:)`.");
- (void)setUnkownMessageCellGestures:(SBUOpenChannelUnknownMessageCell * _Nonnull)cell unknownMessage:(SBDBaseMessage * _Nonnull)unknownMessage indexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUOpenChannelModule.List` and replaced to `setMessageCellGestures(_:)`.");
- (void)didSelectChannelInfo SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelModuleHeaderDelegate` and replaced to `channelModule(_:didTapRightItem:)`.");
- (void)didSelectChannelParticipants SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelModuleHeaderDelegate` and replaced to `openChannelModuleDidTapParticipantList(_:)`.");
/// This function shows channel settings.
- (void)onClickParticipantsList SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelModuleHeaderDelegate` and replaced to `openChannelModuleDidTapParticipantList(_:)`.");
- (void)onClickScrollBottomWithSender:(UIButton * _Nullable)sender SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUBaseChannelModuleListDelegate` and replaced to `baseChannelModuleDidTapScrollToButton(_:animated:)`");
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView SWIFT_UNAVAILABLE_MSG("This function has been moved to `SBUOpenChannelModule.List` and replaced to `scrollViewDidSScroll(_:)`.");
@end


@interface SBUOpenChannelViewController (SWIFT_EXTENSION(SendbirdUIKit))
@property (nonatomic, strong) SBUChannelInfoHeaderView * _Nonnull channelInfoView SWIFT_DEPRECATED_MSG("This property has been moved to `SBUOpenChannelModule.Header`.", "headerComponent.channelInfoView");
@property (nonatomic, readonly, strong) SBUOpenChannelBaseMessageCell * _Nullable adminMessageCell SWIFT_DEPRECATED_MSG("This property has been moved to `SBUOpenChannelModule.List`.", "listComponent.adminMessageCell");
@property (nonatomic, readonly, strong) SBUOpenChannelBaseMessageCell * _Nullable userMessageCell SWIFT_DEPRECATED_MSG("This property has been moved to `SBUOpenChannelModule.List`.", "listComponent.userMessageCell");
@property (nonatomic, readonly, strong) SBUOpenChannelBaseMessageCell * _Nullable fileMessageCell SWIFT_DEPRECATED_MSG("This property has been moved to `SBUOpenChannelModule.List`.", "listComponent.fileMessageCell");
@property (nonatomic, readonly, strong) SBUOpenChannelBaseMessageCell * _Nullable customMessageCell SWIFT_DEPRECATED_MSG("This property has been moved to `SBUOpenChannelModule.List`.", "listComponent.customMessageCell");
@property (nonatomic, readonly, strong) SBUOpenChannelBaseMessageCell * _Nullable unknownMessageCell SWIFT_DEPRECATED_MSG("This property has been moved to `SBUOpenChannelModule.List`.", "listComponent.unknownMessageCell");
- (void)registerWithAdminMessageCell:(SBUOpenChannelBaseMessageCell * _Nonnull)adminMessageCell nib:(UINib * _Nullable)nib SWIFT_DEPRECATED_MSG("This function has been moved to `SBUOpenChannelModule.List`.", "listComponent.register(adminMessageCell:nib:)");
- (void)registerWithUserMessageCell:(SBUOpenChannelBaseMessageCell * _Nonnull)userMessageCell nib:(UINib * _Nullable)nib SWIFT_DEPRECATED_MSG("This function has been moved to `SBUOpenChannelModule.List`.", "listComponent.register(userMessageCell:nib:)");
- (void)registerWithFileMessageCell:(SBUOpenChannelBaseMessageCell * _Nonnull)fileMessageCell nib:(UINib * _Nullable)nib SWIFT_DEPRECATED_MSG("This function has been moved to `SBUOpenChannelModule.List`.", "listComponent.register(fileMessageCell:nib:)");
- (void)registerWithCustomMessageCell:(SBUOpenChannelBaseMessageCell * _Nullable)customMessageCell nib:(UINib * _Nullable)nib SWIFT_DEPRECATED_MSG("This function has been moved to `SBUOpenChannelModule.List`.", "listComponent.register(customMessageCell:nib:)");
- (NSString * _Nonnull)generateCellIdentifierBy:(SBDBaseMessage * _Nonnull)message SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("This function has been moved to `SBUOpenChannelModule.List`.", "listComponent.generateCellIdentifier(by:)");
/// The internal view provided for media such as photo or video. If you want to use <code>mediaView</code>, please call <code>enableMediaView(_:)</code> to enable and set its ratio through <code>updateMessageListRatio(to ratio:)</code>. If you want to overlay, use <code>overlayMediaView(_:messageListRatio:)</code> method.
@property (nonatomic, strong) UIView * _Nonnull mediaView SWIFT_DEPRECATED_MSG("This property has been moved to `SBUOpenChannelModule.Media`.", "mediaComponent.mediaView");
@end


SWIFT_CLASS("_TtC13SendbirdUIKit23SBUOpenChannelViewModel")
@interface SBUOpenChannelViewModel : SBUBaseChannelViewModel
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface SBUOpenChannelViewModel (SWIFT_EXTENSION(SendbirdUIKit))
- (void)didSucceedReconnection;
@end


@interface SBUOpenChannelViewModel (SWIFT_EXTENSION(SendbirdUIKit))
- (void)channel:(SBDBaseChannel * _Nonnull)sender didReceiveMessage:(SBDBaseMessage * _Nonnull)message;
- (void)channel:(SBDBaseChannel * _Nonnull)sender didUpdateMessage:(SBDBaseMessage * _Nonnull)message;
- (void)channel:(SBDBaseChannel * _Nonnull)sender messageWasDeleted:(int64_t)messageId;
- (void)channelWasChanged:(SBDBaseChannel * _Nonnull)sender;
- (void)channelWasFrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channelWasUnfrozen:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasMuted:(SBDUser * _Nonnull)user;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasUnmuted:(SBDUser * _Nonnull)user;
- (void)channelDidUpdateOperators:(SBDBaseChannel * _Nonnull)sender;
- (void)channel:(SBDBaseChannel * _Nonnull)sender userWasBanned:(SBDUser * _Nonnull)user;
- (void)channel:(SBDOpenChannel * _Nonnull)sender userDidEnter:(SBDUser * _Nonnull)user;
- (void)channel:(SBDOpenChannel * _Nonnull)sender userDidExit:(SBDUser * _Nonnull)user;
- (void)channelWasDeleted:(NSString * _Nonnull)channelUrl channelType:(SBDChannelType)channelType;
@end


/// The protocol to manage the life cylce of some views. It defines setting views, styles, auto layouts and actions.
/// since:
/// 2.2.0
SWIFT_PROTOCOL("_TtP13SendbirdUIKit16SBUViewLifeCycle_")
@protocol SBUViewLifeCycle
/// This function handles the initialization of views.
- (void)setupViews;
/// This function handles the initialization of styles.
- (void)setupStyles;
/// This function updates styles.
- (void)updateStyles;
/// This function handles the initialization of autolayouts.
- (void)setupLayouts;
/// This function updates layouts.
- (void)updateLayouts;
/// This function handles the initialization of actions.
- (void)setupActions;
@end


/// The collection view cell for <code>SBUSelectablePhotoViewController</code>.
SWIFT_CLASS("_TtC13SendbirdUIKit26SBUPhotoCollectionViewCell")
@interface SBUPhotoCollectionViewCell : UICollectionViewCell <SBUViewLifeCycle>
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
/// This function handles the initialization of views.
- (void)setupViews;
/// This function handles the initialization of auto layouts.
- (void)setupLayouts;
/// This function handles the initialization of styles.
- (void)setupStyles;
/// This function handles the initialization of actions.
- (void)setupActions;
/// This function updates layouts.
- (void)updateLayouts;
/// This function updates styles.
- (void)updateStyles;
@end

@class Header;
@class SBUPromoteMemberViewModel;

SWIFT_CLASS("_TtC13SendbirdUIKit30SBUPromoteMemberViewController")
@interface SBUPromoteMemberViewController : SBUBaseSelectUserViewController
@property (nonatomic, strong) Header * _Nullable headerComponent;
@property (nonatomic, strong) SBUPromoteMemberModuleList * _Nullable listComponent;
@property (nonatomic, strong) SBUPromoteMemberViewModel * _Nullable viewModel;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUPromoteMemberViewController(channel:)'");
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("'init' has been renamed to 'SBUPromoteMemberViewController(channel:)'");
/// If you have channel and users objects, use this initialize function.
/// \param channel Channel object
///
/// \param users <code>SBUUser</code> object
///
- (nonnull instancetype)initWithChannel:(SBDGroupChannel * _Nonnull)channel users:(NSArray<SBUUser *> * _Nullable)users OBJC_DESIGNATED_INITIALIZER;
/// If you have channelUrl and users objects, use this initialize function.
/// \param channelUrl Channel url string
///
/// \param users <code>SBUUser</code> object
///
- (nonnull instancetype)initWithChannelUrl:(NSString * _Nonnull)channelUrl users:(NSArray<SBUUser *> * _Nullable)users OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)createViewModelWithChannel:(SBDBaseChannel * _Nullable)channel channelUrl:(NSString * _Nullable)channelUrl channelType:(SBDChannelType)channelType users:(NSArray<SBUUser *> * _Nullable)users;
- (void)setupViews;
/// This function calls <code>promoteToOperators</code> function.
- (void)promoteSelectedMembers;
- (void)promoteMemberModule:(Header * _Nonnull)headerComponent didUpdateTitleView:(UIView * _Nullable)titleView;
- (void)promoteMemberModule:(Header * _Nonnull)headerComponent didUpdateLeftItem:(UIBarButtonItem * _Nullable)leftItem;
- (void)promoteMemberModule:(Header * _Nonnull)headerComponent didUpdateRightItem:(UIBarButtonItem * _Nullable)rightItem;
- (void)promoteMemberModule:(Header * _Nonnull)headerComponent didTapLeftItem:(UIBarButtonItem * _Nonnull)leftItem;
- (void)promoteMemberModule:(Header * _Nonnull)headerComponent didTapRightItem:(UIBarButtonItem * _Nonnull)rightItem;
- (void)promoteMemberModule:(SBUPromoteMemberModuleList * _Nonnull)listComponent didSelectRowAt:(NSIndexPath * _Nonnull)indexPath;
- (void)promoteMemberModule:(SBUPromoteMemberModuleList * _Nonnull)listComponent didDetectPreloadingPosition:(NSIndexPath * _Nonnull)indexPath;
- (void)promoteMemberModuleDidSelectRetry:(SBUPromoteMemberModuleList * _Nonnull)listComponent;
- (void)promoteMemberViewModel:(SBUPromoteMemberViewModel * _Nonnull)viewModel didPromoteMemberIds:(NSArray<NSString *> * _Nonnull)memberIds;
- (void)baseSelectedUserViewModel:(SBUBaseSelectUserViewModel * _Nonnull)viewModel didUpdateSelectedUsers:(NSArray<SBUUser *> * _Nullable)selectedUsers;
@end


SWIFT_CLASS("_TtC13SendbirdUIKit25SBUPromoteMemberViewModel")
@interface SBUPromoteMemberViewModel : SBUBaseSelectUserViewModel
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendbirdUIKit24SBUQuoteMessageInputView")
@interface SBUQuoteMessageInputView : SBUView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupActions;
- (void)setupStyles;
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendbirdUIKit24SBUQuotedBaseMessageView")
@interface SBUQuotedBaseMessageView : SBUView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupStyles;
- (void)setupActions;
/// The action invokes  <code>SBUQuotedMessageViewDelegate didTapQuotedMessageView(_:)</code> method and scrolls to parent message cell.
- (void)didTapQuotedMessageViewWithSender:(UITapGestureRecognizer * _Nonnull)sender;
@end


SWIFT_CLASS("_TtC13SendbirdUIKit24SBUQuotedFileMessageView")
@interface SBUQuotedFileMessageView : SBUQuotedBaseMessageView
- (void)setupViews;
- (void)setupLayouts;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC13SendbirdUIKit24SBUQuotedUserMessageView")
@interface SBUQuotedUserMessageView : SBUQuotedBaseMessageView
- (void)setupViews;
- (void)setupLayouts;
- (void)setupStyles;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end

@class UICollectionView;
@class PHAsset;

SWIFT_CLASS("_TtC13SendbirdUIKit32SBUSelectablePhotoViewController")
@interface SBUSelectablePhotoViewController : SBUBaseViewController
/// The collection view that shows the preselected photos and videos.
@property (nonatomic, readonly, strong) UICollectionView * _Nonnull collectionView;
/// The right bar button item on the navigation bar. The default action is showing up the limited library picker to select accessible photos and videos.
@property (nonatomic, strong) UIBarButtonItem * _Nullable rightBarButton;
@property (nonatomic, strong) PHFetchResult<PHAsset *> * _Nonnull fetchResult;
/// If it’s <code>nil</code>, it returns the size that has 1/3 length of the collection view ‘s horizontal length
@property (nonatomic, readonly) CGSize columnSize;
- (void)loadView;
- (void)viewDidLayoutSubviews;
/// This function handles the initialization of views.
- (void)setupViews;
/// This function handles the initialization of autolayouts.
- (void)setupLayouts;
/// This function handles the initialization of actions.
- (void)setupActions;
/// This function handles the initialization of styles.
- (void)setupStyles;
/// Used to register a custom cell as a base cell based on <code>SBUPhotoCollectionViewCell</code>.
/// \param channelCell Customized channel cell
///
/// \param nib nib information. If the value is nil, the nib file is not used.
///
- (void)registerWithPhotoCell:(SBUPhotoCollectionViewCell * _Nonnull)photoCell nib:(UINib * _Nullable)nib;
- (void)didTapRightBarButton;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class PHChange;

@interface SBUSelectablePhotoViewController (SWIFT_EXTENSION(SendbirdUIKit)) <PHPhotoLibraryChangeObserver>
/// The <code>PHPhotoLibraryChangeObserver</code> delegate method that tells your observer that a set of changes has occurred in the Photos library.
/// Override this method to handle action when there’s any change on the accessible media in photo library.
/// It reloads the collection view with the changes of preselected photos videos.
- (void)photoLibraryDidChange:(PHChange * _Nonnull)changeInstance;
@end

@class UICollectionViewLayout;

@interface SBUSelectablePhotoViewController (SWIFT_EXTENSION(SendbirdUIKit)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC13SendbirdUIKit22SBUSelectableStackView")
@interface SBUSelectableStackView : SBUView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupStyles;
@end



SWIFT_CLASS("_TtC13SendbirdUIKit12SBUStackView")
@interface SBUStackView : UIStackView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end



@interface SBUTableViewCell (SWIFT_EXTENSION(SendbirdUIKit))
- (void)setupAutolayout SWIFT_UNAVAILABLE_MSG("'setupAutolayout' has been renamed to 'setupLayouts'");
- (void)updateAutolayout SWIFT_UNAVAILABLE_MSG("'updateAutolayout' has been renamed to 'updateLayouts'");
@end


@interface SBUTableViewCell (SWIFT_EXTENSION(SendbirdUIKit)) <SBUViewLifeCycle>
- (void)setupViews;
- (void)setupLayouts;
- (void)updateLayouts;
- (void)setupStyles;
- (void)updateStyles;
- (void)setupActions;
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC13SendbirdUIKit18SBUUserMessageCell")
@interface SBUUserMessageCell : SBUContentBaseMessageCell
@property (nonatomic, strong) UIView * _Nonnull messageTextView;
@property (nonatomic, readonly, strong) SBDUserMessage * _Nullable userMessage;
- (void)setupViews;
- (void)setupLayouts;
- (void)setupActions;
- (void)setupStyles;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendbirdUIKit21SBUUnknownMessageCell")
@interface SBUUnknownMessageCell : SBUUserMessageCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13SendbirdUIKit7SBUUser")
@interface SBUUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum UserListType : NSInteger;

SWIFT_CLASS("_TtC13SendbirdUIKit11SBUUserCell")
@interface SBUUserCell : SBUTableViewCell
@property (nonatomic, strong) UIStackView * _Nonnull baseStackView;
@property (nonatomic, strong) UIImageView * _Nonnull userImageView;
@property (nonatomic, strong) UIImageView * _Nonnull mutedStateImageView;
@property (nonatomic, strong) UILabel * _Nonnull userNameLabel;
@property (nonatomic, strong) UILabel * _Nonnull operatorLabel;
@property (nonatomic, strong) UIButton * _Nonnull checkboxButton;
@property (nonatomic, strong) UIButton * _Nonnull moreButton;
@property (nonatomic, strong) UIView * _Nonnull separateView;
@property (nonatomic, readonly) enum UserListType type;
- (void)awakeFromNib;
/// This function handles the initialization of views.
- (void)setupViews;
/// This function handles the initialization of actions.
- (void)setupActions;
/// This function handles the initialization of autolayouts.
- (void)setupLayouts;
/// This function handles the initialization of styles.
- (void)setupStyles;
- (void)configureWithType:(enum UserListType)type user:(SBUUser * _Nonnull)user isChecked:(BOOL)isChecked operatorMode:(BOOL)operatorMode;
/// This function selects or deselects user.
/// \param selected <code>Bool</code> object
///
- (void)selectUser:(BOOL)selected;
/// This function is used when more menu tap
- (void)onClickMoreMenu;
/// This function is used when a user profile tap.
/// \param sender sender
///
- (void)onTapUserProfileViewWithSender:(UITapGestureRecognizer * _Nonnull)sender;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (void)prepareForReuse;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC13SendbirdUIKit15SBUUserNameView")
@interface SBUUserNameView : SBUView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)setupViews;
- (void)setupLayouts;
- (void)updateLayouts;
- (void)setupStyles;
- (void)updateStyles;
@end




@interface SBUView (SWIFT_EXTENSION(SendbirdUIKit)) <SBUViewLifeCycle>
- (void)setupViews;
- (void)setupLayouts;
- (void)updateLayouts;
- (void)setupStyles;
- (void)updateStyles;
- (void)setupActions;
@end











@interface UINavigationController (SWIFT_EXTENSION(SendbirdUIKit))
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
/// Set up navigation bar with tint color. This method sets up <code>standardAppearance</code> and <code>scrollEdgeAppearance</code> with the tint color.
/// since:
/// 2.1.14
/// \param tintColor <code>UIColor</code> value. It’s recommended that you use <code>SBUTheme navigationBarTintColor</code>.
///
- (void)sbu_setupNavigationBarAppearanceWithTintColor:(UIColor * _Nonnull)tintColor;
@end






@interface UIView (SWIFT_EXTENSION(SendbirdUIKit))
/// This loads the nib file from the Sendbird UIKit bundle.
///
/// returns:
/// nib object
+ (UINib * _Nonnull)sbu_loadNib SWIFT_WARN_UNUSED_RESULT;
/// This loads the view with the nib in the Sendbird UIKit bundle.
///
/// returns:
/// Loaded <code>UIView</code> object
+ (UIView * _Nonnull)sbu_loadViewFromNib SWIFT_WARN_UNUSED_RESULT;
@end



/// This is an enumeration used to display <code>UserCell</code> by type.
/// since:
/// 1.2.0
typedef SWIFT_ENUM(NSInteger, UserListType, open) {
  UserListTypeNone = 0,
  UserListTypeCreateChannel = 1,
  UserListTypeChannelMembers = 2,
  UserListTypeInviteUser = 3,
  UserListTypeReaction = 4,
  UserListTypeOperators = 5,
  UserListTypeMutedMembers = 6,
  UserListTypeBannedMembers = 7,
  UserListTypeParticipants = 8,
};

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
